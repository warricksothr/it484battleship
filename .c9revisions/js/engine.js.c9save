{"ts":1351798682697,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1351798723814,"patch":[[{"diffs":[[1,"// IT484 Battleship implementation"]],"start1":0,"start2":0,"length1":0,"length2":34}]],"length":34,"saved":false}
{"ts":1351798759110,"patch":[[{"diffs":[[0,"entation"],[1,"\n\nfunction Ship()\n{\n    \n}"]],"start1":26,"start2":26,"length1":8,"length2":34}]],"length":60,"saved":false}
{"ts":1351798820449,"patch":[[{"diffs":[[0,"tation\n\n"],[1,"//the ship psudo class\n"],[0,"function"]],"start1":28,"start2":28,"length1":16,"length2":39},{"diffs":[[0,"{\n    \n}"],[1,"\n\n//the shot psudo class\nfunction Shot()\n{\n    \n}\n\n//the engine that will interface with the GUI and manage the logic of the game\nfunction Engine()\n{\n    \n}"]],"start1":75,"start2":75,"length1":8,"length2":164}]],"length":239,"saved":false}
{"ts":1351798855759,"patch":[[{"diffs":[[0,"ngine()\n{\n    \n}"],[1,"\n\n//initialization call to the engine to be executed after the script has loaded\nEngine();"]],"start1":223,"start2":223,"length1":16,"length2":106}]],"length":329,"saved":false}
{"ts":1351799028573,"patch":[[{"diffs":[[0,"ine()\n{\n    "],[1,"this.prototype.init = function()\n    {\n        \n    }"],[0,"\n}\n\n//initia"]],"start1":225,"start2":225,"length1":24,"length2":77}]],"length":382,"saved":false}
{"ts":1351799038467,"patch":[[{"diffs":[[0,"        "],[1,"//I am used to initialize the engine"],[0,"\n    }\n}"]],"start1":276,"start2":276,"length1":16,"length2":52}]],"length":418,"saved":false}
{"ts":1351799053914,"patch":[[{"diffs":[[0," loaded\n"],[1,"var engine = new "],[0,"Engine()"]],"start1":401,"start2":401,"length1":16,"length2":33},{"diffs":[[0,"ngine();"],[1,"\n"]],"start1":427,"start2":427,"length1":8,"length2":9}]],"length":436,"saved":false}
{"ts":1351799066495,"patch":[[{"diffs":[[0,"gine();\n"],[1,"engine.init();"]],"start1":428,"start2":428,"length1":8,"length2":22}]],"length":450,"saved":false}
{"ts":1351799098690,"patch":[[{"diffs":[[0,"\n\n//"],[-1,"initialization call to the engine to be executed after the script has loaded\nvar engine = new Engine();"],[1,"create the engine that will be used\nvar engine = new Engine();\n//make the call to initialize the engine"],[0,"\neng"]],"start1":328,"start2":328,"length1":111,"length2":111}]],"length":450,"saved":false}
{"ts":1351799183272,"patch":[[{"diffs":[[0," ship ps"],[1,"e"],[0,"udo clas"]],"start1":41,"start2":41,"length1":16,"length2":17},{"diffs":[[0,"ip pseudo class\n"],[-1,""],[0,"function Ship()\n"]],"start1":44,"start2":44,"length1":32,"length2":32},{"diffs":[[0," shot ps"],[1,"e"],[0,"udo clas"]],"start1":91,"start2":91,"length1":16,"length2":17},{"diffs":[[0,"ngine()\n"],[-1,""],[0,"{\n"],[1,"    //define init as a prototype of Engine so it isn't recreated each time an Engine object is created. This is good because the initialization code is entirely static.\n"],[0,"    this"]],"start1":225,"start2":225,"length1":18,"length2":187}]],"length":621,"saved":false}
{"ts":1351799204451,"patch":[[{"diffs":[[0,"Engine()"],[1,".init()"],[0,";\n//make"]],"start1":556,"start2":556,"length1":16,"length2":23}]],"length":628,"saved":false}
{"ts":1351799241524,"patch":[[{"diffs":[[0,")\n    {\n"],[1,"        var newEngine = new engine();\n"],[0,"        "]],"start1":439,"start2":439,"length1":16,"length2":54},{"diffs":[[0," be used"],[1," and initialize it."],[0,"\nvar eng"]],"start1":568,"start2":568,"length1":16,"length2":35},{"diffs":[[0,"ew E"],[-1,"ngine().init();\n//make the call to initialize the engine\ne"],[0,"ngine"],[1,"()"],[0,".ini"]],"start1":610,"start2":610,"length1":71,"length2":15}]],"length":629,"saved":false}
{"ts":1351799288657,"patch":[[{"diffs":[[0,"    "],[-1,"var newEngine = new engine();\n        //I am used to initialize"],[1,"//I am used to initialize the engine\n        var newEngine = new engine();\n        //Here I will check the local storage for previous game data and load it if found\n        \n        //finally I will return"],[0," the "],[1,"new "],[0,"engine\n"],[1,"        return newEngine;\n"],[0,"    "]],"start1":451,"start2":451,"length1":83,"length2":255}]],"length":801,"saved":false}
{"ts":1351799393600,"patch":[[{"diffs":[[0,")\n{\n    \n}\n\n"],[1,"function TurnData()\n{\n    \n}\n\n"],[0,"//the engine"]],"start1":124,"start2":124,"length1":24,"length2":54},{"diffs":[[0,"created."],[-1," "],[1,"\n    //"],[0,"This is "]],"start1":360,"start2":360,"length1":17,"length2":23},{"diffs":[[0,"static.\n"],[1,"    //The ideal way to initialize an engine is by calling new Engine().init() so as to initialize the engine with previous data. This acts a pseudo constructor for that purpose.\n"],[0,"    this"]],"start1":432,"start2":432,"length1":16,"length2":194},{"diffs":[[0,"f found\n"],[-1,""],[0,"        "],[1,"//TODO: Check local storage and initialize the engine appropriately"],[0,"\n       "]],"start1":826,"start2":826,"length1":24,"length2":91}]],"length":1082,"saved":false}
{"ts":1351799546492,"patch":[[{"diffs":[[0,"\n\n//the "],[-1,"ship "],[0,"pseudo c"]],"start1":34,"start2":34,"length1":21,"length2":16},{"diffs":[[0,"the pseudo class"],[1," that defines a ship on the grid."],[0,"\nfunction Ship()"]],"start1":38,"start2":38,"length1":32,"length2":65},{"diffs":[[0,"the "],[-1,"shot "],[0,"pseu"]],"start1":116,"start2":116,"length1":13,"length2":8},{"diffs":[[0,"lass"],[-1,"\nfunction Shot()\n{\n    \n}\n\nfunction TurnData()\n{\n    \n}\n\n//the engine that will interface with the GUI and manage the logic of the game\nfunction Engine()\n{"],[1," that defines a shot and how it will interact with the grids.\nfunction Shot()\n{\n    \n}\n\n//the pseudo class the represents the data to be returned when a turn is complete.\nfunction TurnData()\n{\n    \n}\n\n//the engine that will interface with the GUI and manage the logic of the game\nfunction Engine()\n{\n    //The grids to be used\n    //TODO: Add the grids\n    \n    //Watch value to represent who's turn it is\n    //TODO: implement a watch value\n    "],[0,"\n   "]],"start1":128,"start2":128,"length1":163,"length2":454}]],"length":1396,"saved":false}
{"ts":1351799603608,"patch":[[{"diffs":[[0,";\n    }\n"],[1,"    \n    this.fireShot = new Function(var x, var y, var shot)\n    {\n        \n    }\n"],[0,"}\n\n//cre"]],"start1":1295,"start2":1295,"length1":16,"length2":99}]],"length":1479,"saved":false}
{"ts":1351799619994,"patch":[[{"diffs":[[0,"ion("],[-1,"var x, var y, var"],[1,"x, y,"],[0," sho"]],"start1":1337,"start2":1337,"length1":25,"length2":13}]],"length":1467,"saved":false}
{"ts":1351799635561,"patch":[[{"diffs":[[0,"  \n    }"],[1,";"],[0,"\n}\n\n//cr"]],"start1":1365,"start2":1365,"length1":16,"length2":17}]],"length":1468,"saved":false}
{"ts":1351799684899,"patch":[[{"diffs":[[0,"   \n    "],[1,"this.fireShot = new Function(x, y, shot)\n    {\n        \n    };\n}\n\n"],[0,"//define"]],"start1":575,"start2":575,"length1":16,"length2":82},{"diffs":[[0,"se.\n    "],[-1,"this"],[1,"Engine"],[0,".prototy"]],"start1":994,"start2":994,"length1":20,"length2":22},{"diffs":[[0,"ne;\n"],[1,""],[0,"    }"],[-1,"\n    \n    this.fireShot = new Function(x, y, shot)\n    {\n        \n    };\n}"],[0,"\n\n//"]],"start1":1361,"start2":1361,"length1":87,"length2":13}]],"length":1462,"saved":false}
{"ts":1351799715752,"patch":[[{"diffs":[[0,"ion("],[-1,"x, y,"],[1,"var x, var y, var"],[0," sho"]],"start1":608,"start2":608,"length1":13,"length2":25},{"diffs":[[0,"reated.\n"],[-1,"    "],[0,"//This i"]],"start1":753,"start2":753,"length1":20,"length2":16},{"diffs":[[0,"static.\n"],[-1,"    "],[0,"//The id"]],"start1":820,"start2":820,"length1":20,"length2":16},{"diffs":[[0,"urpose.\n"],[-1,"    "],[0,"Engine.p"]],"start1":994,"start2":994,"length1":20,"length2":16},{"diffs":[[0,"ction()\n"],[-1,"    {\n    "],[1,"{\n"],[0,"    //I "]],"start1":1029,"start2":1029,"length1":26,"length2":18},{"diffs":[[0,"ine\n    "],[-1,"  "],[-1,"  "],[0,"var newE"]],"start1":1076,"start2":1076,"length1":20,"length2":16},{"diffs":[[0,"gine();\n"],[-1,"    "],[0,"    //He"]],"start1":1106,"start2":1106,"length1":20,"length2":16},{"diffs":[[0,"f found\n"],[-1,"    "],[0,"    //TO"]],"start1":1192,"start2":1192,"length1":20,"length2":16},{"diffs":[[0,"ely\n    "],[-1," "],[-1,"   "],[0,"//finall"]],"start1":1268,"start2":1268,"length1":20,"length2":16},{"diffs":[[0," engine\n"],[-1,"    "],[0,"    retu"]],"start1":1307,"start2":1307,"length1":20,"length2":16},{"diffs":[[0,"Engine;\n"],[-1,"    "],[0,"}\n\n//cre"]],"start1":1329,"start2":1329,"length1":20,"length2":16}]],"length":1430,"saved":false}
{"ts":1351799724066,"patch":[[{"diffs":[[0,"ion("],[-1,"var x, var y, var"],[1,"x, y,"],[0," sho"]],"start1":608,"start2":608,"length1":25,"length2":13}]],"length":1418,"saved":false}
{"ts":1351799772189,"patch":[[{"diffs":[[0,"reShot ="],[-1," new"],[0," Functio"]],"start1":590,"start2":590,"length1":20,"length2":16}]],"length":1414,"saved":false}
{"ts":1351799952588,"patch":[[{"diffs":[[0," value\n    \n"],[1,"    //this represents the logic behind firing a shot\n"],[0,"    this.fir"]],"start1":567,"start2":567,"length1":24,"length2":77},{"diffs":[[0,"t = "],[-1,"F"],[1,"f"],[0,"unct"]],"start1":648,"start2":648,"length1":9,"length2":9},{"diffs":[[0,"\n    };\n"],[1,"    \n    this.placeShip = function(startx,starty,endx,endy,ship)\n    {\n        \n    };\n"],[0,"}\n\n//def"]],"start1":687,"start2":687,"length1":16,"length2":103}]],"length":1554,"saved":false}
{"ts":1351800031998,"patch":[[{"diffs":[[0,"    };\n    \n"],[1,"    //this represents placing a ship on the player grid\n"],[0,"    this.pla"]],"start1":688,"start2":688,"length1":24,"length2":80},{"diffs":[[0,"\n    };\n"],[1,"    \n    //this represents the logic for returning the current player's shot history\n    this.getShotHistory = function()\n    {\n        \n    };\n    \n    this.getAvailableShots = function() {};\n"],[0,"}\n\n//def"]],"start1":830,"start2":830,"length1":16,"length2":209}]],"length":1803,"saved":false}
{"ts":1351800197958,"patch":[[{"diffs":[[0,"  //"],[-1,"this represents the logic behind firing a shot\n    this.fireShot = function(x, y, shot)\n    {\n        \n    };\n    \n    //this represents "],[1,"fire a shot at the opponent's ship grid\n    this.fireShot = function(x, y, shot) {};\n    \n    //"],[0,"plac"],[-1,"ing"],[1,"e"],[0," a s"]],"start1":581,"start2":581,"length1":152,"length2":109},{"diffs":[[0," on the "],[1,"current "],[0,"player"],[1,";s"],[0," grid\n  "]],"start1":693,"start2":693,"length1":22,"length2":32},{"diffs":[[0,"hip)"],[-1,"\n    {\n        \n    };\n    \n    //this represents the logic for returning"],[1," {};\n    \n    //return the shot history of"],[0," the"]],"start1":778,"start2":778,"length1":81,"length2":50},{"diffs":[[0,"ayer"],[-1,"'s shot h"],[1,"\n    this.getShotH"],[0,"istory"],[-1,"\n    this.getShotHistory"],[1," = function() {};\n    \n    //return the shot types that are available\n    this.getAvailableShots"],[0," = f"]],"start1":839,"start2":839,"length1":47,"length2":128},{"diffs":[[0,"on()"],[1," {};"],[0,"\n    "],[-1,"{"],[0,"\n    "],[-1,"    \n    };\n    \n    this.getAvailableShots = function() {};"],[1,"//What shots are on cooldown\n    this.getShotsOnCooldown = function() {};\n    \n    //Get Shot Grids\n    this.getShotGrids = function() {};\n    Get Ship Grid (For the active player)\n    Select Game Mode (int playerCount, bool modified)\n    Forfit (clear session)\n    Avaiable Ships"],[0,"\n}\n\n"]],"start1":972,"start2":972,"length1":79,"length2":302}]],"length":2043,"saved":false}
{"ts":1351800484508,"patch":[[{"diffs":[[0,"  //"],[-1,"What shots"],[1,"return the shot types that"],[0," are"]],"start1":988,"start2":988,"length1":18,"length2":34},{"diffs":[[0,"  //"],[-1,"Get S"],[1,"return the s"],[0,"hot "],[-1,"G"],[1,"g"],[0,"rids"]],"start1":1087,"start2":1087,"length1":18,"length2":25},{"diffs":[[0,"    "],[-1,"Get S"],[1,"\n    //return the s"],[0,"hip "],[-1,"G"],[1,"g"],[0,"rid "],[-1,"(F"],[1,"f"],[0,"or t"]],"start1":1152,"start2":1152,"length1":24,"length2":37},{"diffs":[[0,"ayer"],[-1,")"],[0,"\n    "],[-1,"Select Game Mode (int playerCount, bool modified)\n    Forfit (clear session)\n    "],[1,"this.getShipGrid = function() {};\n    \n    //clear the local storage and prepare the engine for a new game\n    this.forfit = function() {};\n    \n    //return a list of available ships\n    this.get"],[0,"Avai"],[1,"l"],[0,"able"],[-1," "],[0,"Ships"],[1," = function() {};"],[0,"\n}\n\n"]],"start1":1201,"start2":1201,"length1":109,"length2":240},{"diffs":[[0,"ngine;\n}"],[1,";\n\n//select the game mode and store in the local cache.\n//This should only be called from the front page when selecting the version of the game to run.\nEngine.prototype.selectGameMode = function(numberOfPlayers, modified)\n{\n    \n};"],[0,"\n\n//crea"]],"start1":2110,"start2":2110,"length1":16,"length2":247}]],"length":2441,"saved":false}
{"ts":1351800553694,"patch":[[{"diffs":[[0,"ne;\n};\n\n"],[1,"//prototype method used to load ships from a specified javascript file?\nEngine.prototype.loadShips = function(pathToShipsFile)\n{\n    \n};\n\n"],[0,"//select"]],"start1":2113,"start2":2113,"length1":16,"length2":154}]],"length":2579,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352051883681,"patch":[[{"diffs":[[0,"tation\n\n"],[1,"//Clone functionality for custom objects\nfunction clone(obj) {\n    if (null == obj || \"object\" != typeof obj) return obj;\n    var copy = obj.constructor();\n    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n    return copy;\n}\n\n///////////////////////////////\n// Custom Object Defenitions //\n///////////////////////////////\n\n"],[0,"//the ps"]],"start1":28,"start2":28,"length1":16,"length2":385},{"diffs":[[0,"on Ship("],[-1,")\n{\n    "],[1,"name, shot)\n{\n    var name = name;\n    var shot = shot;"],[0,"\n}\n\n//th"]],"start1":463,"start2":463,"length1":24,"length2":71},{"diffs":[[0,"nData()\n{\n    \n}"],[-1,""],[0,""],[1,"\n\n///////////////////////\n// BattleShip Engine //\n///////////////////////"],[0,"\n\n//the engine t"]],"start1":731,"start2":731,"length1":32,"length2":105}]],"length":3068,"saved":false}
{"ts":1352051909098,"patch":[[{"diffs":[[0,"me, shot"],[1,"s"],[0,")\n{\n    "]],"start1":473,"start2":473,"length1":16,"length2":17},{"diffs":[[0,"shot"],[1,"s"],[0," = shot"],[1,"s"],[0,";\n}\n"]],"start1":515,"start2":515,"length1":15,"length2":17}]],"length":3071,"saved":false}
{"ts":1352051930058,"patch":[[{"diffs":[[0,"ame;"],[-1,"\n    var shots = shots;"],[1," //the name of the ship type\n    var shots = shots; //an array of shot types available for this ship"],[0,"\n}\n\n"]],"start1":502,"start2":502,"length1":31,"length2":108}]],"length":3148,"saved":false}
{"ts":1352051967912,"patch":[[{"diffs":[[0,"is ship\n"],[1,"    var startx = 0;\n    var stary = 0;\n    var endx = 0;\n    var endy = 0;\n"],[0,"}\n\n//the"]],"start1":599,"start2":599,"length1":16,"length2":91}]],"length":3223,"saved":false}
{"ts":1352052030046,"patch":[[{"diffs":[[0,"    "],[-1,"var startx = 0;\n    var stary = 0;\n    var endx = 0;\n    var endy = 0;"],[1,"//The grid location of the ship (important for placing the ship on the grid)\n    var startx = 0;\n    var stary = 0;\n    var endx = 0;\n    var endy = 0;\n    \n    var setLocation = function(startx, starty, endx, endy)\n    {\n        this.startx = startx;\n    }"],[0,"\n}\n\n"]],"start1":607,"start2":607,"length1":78,"length2":265}]],"length":3410,"saved":false}
{"ts":1352052052719,"patch":[[{"diffs":[[0,"startx;\n"],[1,"        this.starty = starty;\n        \n        this.endx = endx;\n        this.endy =endy;\n"],[0,"    }\n}\n"]],"start1":855,"start2":855,"length1":16,"length2":106}]],"length":3500,"saved":false}
{"ts":1352052114141,"patch":[[{"diffs":[[0,"y = 0;\n    \n"],[1,"    //set the location of this ship\n"],[0,"    var setL"]],"start1":756,"start2":756,"length1":24,"length2":60},{"diffs":[[0,"ty, "],[-1,"endx, endy"],[1,"horizontal"],[0,")\n  "]],"start1":847,"start2":847,"length1":18,"length2":18},{"diffs":[[0,"ty;\n"],[-1,"        \n"],[0,"    "]],"start1":925,"start2":925,"length1":17,"length2":8},{"diffs":[[0,"his."],[-1,"endx = endx;\n        this.endy =endy"],[1,"horizontal = horizontal"],[0,";\n  "]],"start1":938,"start2":938,"length1":44,"length2":31}]],"length":3514,"saved":false}
{"ts":1352052123041,"patch":[[{"diffs":[[0,"var "],[-1,"endx = 0;\n    var endy = 0"],[1,"horizontal = false"],[0,";\n  "]],"start1":731,"start2":731,"length1":34,"length2":26}]],"length":3506,"saved":false}
{"ts":1352052145409,"patch":[[{"diffs":[[0,"ip(name,"],[1," length,"],[0," shots)\n"]],"start1":468,"start2":468,"length1":16,"length2":24},{"diffs":[[0,"r this ship\n"],[1,"    var length = length;\n"],[0,"    //The gr"]],"start1":603,"start2":603,"length1":24,"length2":49}]],"length":3539,"saved":false}
{"ts":1352052272786,"patch":[[{"diffs":[[0,"hip type"],[1,"."],[0,"\n    var"]],"start1":534,"start2":534,"length1":16,"length2":17},{"diffs":[[0,"le for this ship"],[1,"."],[0,"\n    var length "]],"start1":599,"start2":599,"length1":32,"length2":33},{"diffs":[[0,"gth;"],[-1,"\n   "],[0," //"],[-1,"The grid location of the ship (important for plac"],[1,"the pre-defined length of the ship. This is used when populat"],[0,"ing the "],[-1,"ship on the grid)\n    var startx = 0;\n    var stary = 0;\n    var horizontal = false;\n    \n    //set the location of this"],[1,"grid.\n    \n    //set the location of this ship. the startx and starty define where the ship starts, then based on length and the boolean horizontal it is possible to populate the grid with the"],[0," ship"],[1,"."],[0,"\n   "]],"start1":637,"start2":637,"length1":197,"length2":278},{"diffs":[[0,")\n    {\n"],[1,"        //The grid location of the ship (important for placing the ship on the grid)\n"],[0,"        "]],"start1":969,"start2":969,"length1":16,"length2":101}]],"length":3707,"saved":false}
{"ts":1352052323521,"patch":[[{"diffs":[[0,"    "],[-1,"var"],[1,"//"],[0," name"],[1,":"],[0," "],[-1,"= name; //"],[0,"the "]],"start1":494,"start2":494,"length1":27,"length2":17},{"diffs":[[0,"    "],[-1,"var"],[1,"//"],[0," shots"],[1,":"],[0," "],[-1,"= shots; //"],[0,"an a"]],"start1":534,"start2":534,"length1":29,"length2":18},{"diffs":[[0,"    "],[-1,"var length ="],[1,"//"],[0," length"],[-1,"; //"],[1,": "],[0,"the "]],"start1":596,"start2":596,"length1":31,"length2":19}]],"length":3674,"saved":false}
{"ts":1352052469415,"patch":[[{"diffs":[[0,"////////\n\n//the "],[-1,"pseudo "],[0,"class that defin"]],"start1":395,"start2":395,"length1":39,"length2":32},{"diffs":[[0,"\n    }\n}\n\n//the "],[-1,"pseudo "],[0,"class that defin"]],"start1":1119,"start2":1119,"length1":39,"length2":32},{"diffs":[[0,"\n\n//the "],[-1,"pseudo "],[0,"class th"]],"start1":1226,"start2":1226,"length1":23,"length2":16},{"diffs":[[0,"hod "],[-1,"used to load ships from a specified javascript file?"],[1,"that indicates ships available for mode 1"],[0,"\nEng"]],"start1":3210,"start2":3210,"length1":60,"length2":49},{"diffs":[[0,"ype.load"],[1,"Mode1"],[0,"Ships = "]],"start1":3269,"start2":3269,"length1":16,"length2":21},{"diffs":[[0,"ion("],[-1,"pathToShipsFil"],[1,")\n{\n    //TODO: define ships in mode1 (basic mod"],[0,"e)\n"],[-1,"{\n"],[0,"    "],[1,"var ships = new Array();"],[0,"\n};\n"]],"start1":3295,"start2":3295,"length1":31,"length2":87}]],"length":3703,"saved":false}
{"ts":1352052474360,"patch":[[{"diffs":[[0,"rray();\n"],[1,"    return ships;\n"],[0,"};\n\n//se"]],"start1":3371,"start2":3371,"length1":16,"length2":34}]],"length":3721,"saved":false}
{"ts":1352052502610,"patch":[[{"diffs":[[0,"ew Array();\n"],[1,"    ships[0];\n"],[0,"    return s"]],"start1":3367,"start2":3367,"length1":24,"length2":38}]],"length":3735,"saved":false}
{"ts":1352052587679,"patch":[[{"diffs":[[0,"ships[0]"],[-1,";"],[1," = new Ship(\"Battleship\", 4, new Array(\n        new Shot(),\n        new shot)\n    ;)"],[0,"\n    ret"]],"start1":3383,"start2":3383,"length1":17,"length2":100}]],"length":3818,"saved":false}
{"ts":1352052592650,"patch":[[{"diffs":[[0,"    new "],[-1,"s"],[1,"S"],[0,"hot"],[1,"()"],[0,")\n    ;)"]],"start1":3455,"start2":3455,"length1":20,"length2":22}]],"length":3820,"saved":false}
{"ts":1352052600268,"patch":[[{"diffs":[[0,"    "],[-1,";"],[0,")"],[1,";"],[0,"\n   "]],"start1":3471,"start2":3471,"length1":10,"length2":10}]],"length":3820,"saved":false}
{"ts":1352052619305,"patch":[[{"diffs":[[0,"ray("],[-1,");"],[0,"\n    "],[-1,"ships[0] ="],[1,"   "],[0," new"]],"start1":3372,"start2":3372,"length1":25,"length2":16},{"diffs":[[0," Array(\n        "],[1,"   "],[1," "],[0,"new Shot(),\n    "]],"start1":3414,"start2":3414,"length1":32,"length2":36},{"diffs":[[0,"Shot(),\n        "],[1,"    "],[0,"new Shot())\n    "]],"start1":3438,"start2":3438,"length1":32,"length2":36},{"diffs":[[0,"Shot())\n"],[1,"        );\n"],[0,"    );\n "]],"start1":3462,"start2":3462,"length1":16,"length2":27}]],"length":3830,"saved":false}
{"ts":1352052670719,"patch":[[{"diffs":[[0,"w Shot()"],[1,"\n            "],[0,")\n      "]],"start1":3460,"start2":3460,"length1":16,"length2":29},{"diffs":[[0,"       )"],[-1,";"],[1,","],[0,"\n    "],[1,")"],[0,");\n    r"]],"start1":3484,"start2":3484,"length1":22,"length2":23}]],"length":3844,"saved":false}
{"ts":1352052700390,"patch":[[{"diffs":[[0,"on Shot("],[-1,")"],[1,"name, cooldownLength);"],[0,"\n{\n    \n"]],"start1":1208,"start2":1208,"length1":17,"length2":38},{"diffs":[[0,"ay(\n"],[-1,"            new Shot(),\n"],[0,"    "]],"start1":3439,"start2":3439,"length1":32,"length2":8},{"diffs":[[0," ),\n    "],[-1,")"],[0,");\n    r"]],"start1":3487,"start2":3487,"length1":17,"length2":16}]],"length":3840,"saved":false}
{"ts":1352052719669,"patch":[[{"diffs":[[0,"gth);\n{\n    "],[1,"var shoot;"],[0,"\n}\n\n//the cl"]],"start1":1233,"start2":1233,"length1":24,"length2":34}]],"length":3850,"saved":false}
{"ts":1352052727238,"patch":[[{"diffs":[[0,"nLength)"],[-1,";"],[0,"\n{\n    v"]],"start1":1229,"start2":1229,"length1":17,"length2":16}]],"length":3849,"saved":false}
{"ts":1352052769319,"patch":[[{"diffs":[[0,"unction()\n{\n"],[1,"    var regularShot = new Shot(\"Regular Shot\", 1);\n"],[0,"    //TODO: "]],"start1":3321,"start2":3321,"length1":24,"length2":75},{"diffs":[[0,"ew Shot("],[1,"\"Regular Shot\""],[0,")\n      "]],"start1":3516,"start2":3516,"length1":16,"length2":30}]],"length":3914,"saved":false}
{"ts":1352052779389,"patch":[[{"diffs":[[0,"    "],[-1,"new Shot(\"R"],[1,"clone(r"],[0,"egular"],[-1," "],[0,"Shot"],[-1,"\""],[0,")"],[1,";"],[0,"\n   "]],"start1":3511,"start2":3511,"length1":32,"length2":27}]],"length":3909,"saved":false}
{"ts":1352052789669,"patch":[[{"diffs":[[0,"larShot)"],[-1,";"],[0,"\n       "]],"start1":3525,"start2":3525,"length1":17,"length2":16}]],"length":3908,"saved":false}
{"ts":1352052798549,"patch":[[{"diffs":[[0,"       )"],[-1,","],[0,"\n    );\n"]],"start1":3549,"start2":3549,"length1":17,"length2":16}]],"length":3907,"saved":false}
{"ts":1352052879701,"patch":[[{"diffs":[[0,"ip(\""],[-1,"Battleship\", 4"],[1,"Carrier\", 5, new Array(\n            clone(regularShot)\n            )\n        ),\n        new Ship(\"Battleship\", 4, new Array(\n            clone(regularShot)\n            )\n        ),\n        new Ship(\"Cruiser\", 3, new Array(\n            clone(regularShot)\n            )\n        ),\n        new Ship(\"Submarine\", 3, new Array(\n            clone(regularShot)\n            )\n        ),\n        new Ship(\"Destroyer\", 2"],[0,", ne"]],"start1":3472,"start2":3472,"length1":22,"length2":418}]],"length":4303,"saved":false}
{"ts":1352052936420,"patch":[[{"diffs":[[0,"unction()\n{\n"],[1,"    //define a regular shot\n"],[0,"    var regu"]],"start1":3321,"start2":3321,"length1":24,"length2":52},{"diffs":[[0,"    "],[-1,"//TODO: define ships in mode1 (basic mode)"],[1,"regularShot.shoot = function()\n    {\n        \n    }\n    "],[0,"\n   "]],"start1":3412,"start2":3412,"length1":50,"length2":64}]],"length":4345,"saved":false}
{"ts":1352052949931,"patch":[[{"diffs":[[0,"unction("],[1,"grid"],[0,")\n    {\n"]],"start1":3437,"start2":3437,"length1":16,"length2":20}]],"length":4349,"saved":false}
{"ts":1352052964771,"patch":[[{"diffs":[[0,"\n    }\n    \n"],[1,"    //define the ships in mode 1\n"],[0,"    var ship"]],"start1":3465,"start2":3465,"length1":24,"length2":57}]],"length":4382,"saved":false}
{"ts":1352053027728,"patch":[[{"diffs":[[0,"load"],[-1,"Mode1"],[0,"Ship"]],"start1":3303,"start2":3303,"length1":13,"length2":8},{"diffs":[[0,"hips = function("],[1,"ships"],[0,")\n{\n    //define"]],"start1":3308,"start2":3308,"length1":32,"length2":37},{"diffs":[[0,"n mode 1"],[1,". This array of ships will be coppied onto the grid of each players"],[0,"\n    var"]],"start1":3501,"start2":3501,"length1":16,"length2":83}]],"length":4449,"saved":false}
{"ts":1352053044798,"patch":[[{"diffs":[[0,"hat "],[-1,"indicates"],[1,"loads the"],[0," shi"]],"start1":3245,"start2":3245,"length1":17,"length2":17},{"diffs":[[0,"able"],[-1," for mode 1"],[0,"\nEng"]],"start1":3270,"start2":3270,"length1":19,"length2":8}]],"length":4438,"saved":false}
{"ts":1352053100690,"patch":[[{"diffs":[[0,"on(ships)\n{\n"],[1,"    \n};\n\n//select the game mode and store in the local cache.\n//This should only be called from the front page when selecting the version of the game to run.\nEngine.prototype.selectGameMode = function(numberOfPlayers, modified)\n{\n    \n};\n\nfunction mode1Ships()\n{\n"],[0,"    //define"]],"start1":3310,"start2":3310,"length1":24,"length2":287},{"diffs":[[0,"s;\n}"],[-1,";\n\n//select the game mode and store in the local cache.\n//This should only be called from the front page when selecting the version of the game to run.\nEngine.prototype.selectGameMode = function(numberOfPlayers, modified)\n{\n    \n};"],[0,"\n\n//"]],"start1":4374,"start2":4374,"length1":239,"length2":8}]],"length":4470,"saved":false}
{"ts":1352053129214,"patch":[[{"diffs":[[0,"ailable\n"],[1,"//ships is an array of ships available to be placed on the board at the start of the game\n"],[0,"Engine.p"]],"start1":3267,"start2":3267,"length1":16,"length2":106}]],"length":4560,"saved":false}
{"ts":1352053154319,"patch":[[{"diffs":[[0," Engine()\n{\n"],[1,"    //The available ships\n    \n"],[0,"    //The gr"]],"start1":1524,"start2":1524,"length1":24,"length2":55}]],"length":4591,"saved":false}
{"ts":1352053213250,"patch":[[{"diffs":[[0,"ilable ships"],[1," (this is an array of available ship objects)\n    //availableShips"],[0,"\n    \n    //"]],"start1":1549,"start2":1549,"length1":24,"length2":90}]],"length":4657,"saved":false}
{"ts":1352053235580,"patch":[[{"diffs":[[0,"hips)\n{\n    "],[1,"this.availableShips = ships;"],[0,"\n};\n\n//selec"]],"start1":3501,"start2":3501,"length1":24,"length2":52}]],"length":4685,"saved":false}
{"ts":1352053257720,"patch":[[{"diffs":[[0,"nction()"],[1,"\n    {\n        return this.availableShips;\n   "],[0," "],[-1,"{"],[0,"};\n}\n\n//"]],"start1":2626,"start2":2626,"length1":18,"length2":63}]],"length":4730,"saved":false}
{"ts":1352053284210,"patch":[[{"diffs":[[0,"   \n};\n\n"],[1,"//This defines all the ships available in mode 1 of the game\n"],[0,"function"]],"start1":3813,"start2":3813,"length1":16,"length2":77}]],"length":4791,"saved":false}
{"ts":1352053349920,"patch":[[{"diffs":[[0,".init();"],[1,"\n\n//testing code\nengine.loadShips(mode1Ships());"]],"start1":4783,"start2":4783,"length1":8,"length2":56}]],"length":4839,"saved":false}
{"ts":1352053367631,"patch":[[{"diffs":[[0,"\n\n//"],[-1,"testing code"],[1,"////////////////\n// testing code //\n//////////////////\n"],[0,"\neng"]],"start1":4791,"start2":4791,"length1":20,"length2":63}]],"length":4882,"saved":false}
{"ts":1352053377759,"patch":[[{"diffs":[[0,"//////\n\n"],[1,"//load the mode 1 ships\n"],[0,"engine.l"]],"start1":4843,"start2":4843,"length1":16,"length2":40}]],"length":4906,"saved":false}
{"ts":1352053390257,"patch":[[{"diffs":[[0,"hips());"],[1,"\n\n//get the available ships\n"]],"start1":4898,"start2":4898,"length1":8,"length2":36}]],"length":4934,"saved":false}
{"ts":1352053415860,"patch":[[{"diffs":[[0,"get the available ships\n"],[1,"var availableShips = engine.getAvailableShips();"]],"start1":4910,"start2":4910,"length1":24,"length2":72}]],"length":4982,"saved":false}
{"ts":1352053477798,"patch":[[{"diffs":[[0,"Ships();"],[1,"\n\n//iterate over the available ships and print their names to the console\nfor (var i; i < availableShips.length; i++)\n{\n    console.print(availableShips[i]);   \n}"]],"start1":4974,"start2":4974,"length1":8,"length2":170}]],"length":5144,"saved":false}
{"ts":1352053595710,"patch":[[{"diffs":[[0,"function"],[1," init"],[0,"()\n{\n   "]],"start1":3052,"start2":3052,"length1":16,"length2":21}]],"length":5149,"saved":false}
{"ts":1352053635290,"patch":[[{"diffs":[[0,"ngine = new "],[-1,"e"],[1,"E"],[0,"ngine();\n   "]],"start1":3123,"start2":3123,"length1":25,"length2":25}]],"length":5149,"saved":false}
{"ts":1352053650931,"patch":[[{"diffs":[[0,"function"],[-1," init"],[0,"()\n{\n   "]],"start1":3052,"start2":3052,"length1":21,"length2":16}]],"length":5144,"saved":false}
{"ts":1352053754731,"patch":[[{"diffs":[[0," newEngine ="],[-1," new"],[0," Engine();\n "]],"start1":3113,"start2":3113,"length1":28,"length2":24}]],"length":5140,"saved":false}
{"ts":1352053823350,"patch":[[{"diffs":[[0,"    "],[-1,"var shoot;"],[1,"//define what a shot does\n    //var shoot //this represents a shot"],[0,"\n}\n\n"]],"start1":1240,"start2":1240,"length1":18,"length2":74},{"diffs":[[0,"Engine ="],[1," new"],[0," Engine("]],"start1":3173,"start2":3173,"length1":16,"length2":20}]],"length":5200,"saved":false}
{"ts":1352053913362,"patch":[[{"diffs":[[0," grids\n    \n"],[1,"    //TODO: include a history of shots for each player\n    \n"],[0,"    //Watch "]],"start1":1735,"start2":1735,"length1":24,"length2":84},{"diffs":[[0,"  {\n        "],[1,"//TODO:implement a regular shot and how it interacts with the grid"],[0,"\n    }\n    \n"]],"start1":4142,"start2":4142,"length1":24,"length2":90}]],"length":5326,"saved":false}
{"ts":1352053948911,"patch":[[{"diffs":[[0,"Shot.shoot ="],[1," new"],[0," function(gr"]],"start1":4112,"start2":4112,"length1":24,"length2":28}]],"length":5330,"saved":false}
{"ts":1352053957224,"patch":[[{"diffs":[[0,"t = "],[-1,"new f"],[1,"F"],[0,"unct"]],"start1":4121,"start2":4121,"length1":13,"length2":9}]],"length":5326,"saved":false}
{"ts":1352053959623,"patch":[[{"diffs":[[0,"t = "],[-1,"F"],[1,"f"],[0,"unct"]],"start1":4121,"start2":4121,"length1":9,"length2":9}]],"length":5326,"saved":false}
{"ts":1352053983246,"patch":[[{"diffs":[[0,"oes\n    "],[-1,"//"],[0,"var shoo"]],"start1":1266,"start2":1266,"length1":18,"length2":16},{"diffs":[[0,"oot "],[-1,"//this represents a shot"],[1,"= function(grid) {};"],[0,"\n}\n\n"]],"start1":1280,"start2":1280,"length1":32,"length2":28}]],"length":5320,"saved":false}
{"ts":1352054015580,"patch":[[{"diffs":[[0,"ion(grid)\n    {\n"],[1,"        var i = 1;\n"],[0,"        //TODO:i"]],"start1":4124,"start2":4124,"length1":32,"length2":51}]],"length":5339,"saved":false}
{"ts":1352054018540,"patch":[[{"diffs":[[0," i = 1;\n"],[1,"        i++;\n"],[0,"        "]],"start1":4151,"start2":4151,"length1":16,"length2":29}]],"length":5352,"saved":false}
{"ts":1352054033870,"patch":[[{"diffs":[[0,"  {\n"],[-1,"        var i = 1;\n        i++;\n"],[0,"    "]],"start1":4136,"start2":4136,"length1":40,"length2":8}]],"length":5320,"saved":false}
{"ts":1352054250843,"patch":[[{"diffs":[[0,"ay(\n            "],[-1,"clone("],[0,"regularShot)\n   "]],"start1":4391,"start2":4391,"length1":38,"length2":32},{"diffs":[[0,"     regularShot"],[-1,")"],[0,"\n            )\n "]],"start1":4402,"start2":4402,"length1":33,"length2":32},{"diffs":[[0,"ay(\n            "],[-1,"clone("],[0,"regularShot)\n   "]],"start1":4485,"start2":4485,"length1":38,"length2":32},{"diffs":[[0,"     regularShot"],[-1,")"],[0,"\n            )\n "]],"start1":4496,"start2":4496,"length1":33,"length2":32},{"diffs":[[0,"ay(\n            "],[-1,"clone("],[0,"regularShot)\n   "]],"start1":4576,"start2":4576,"length1":38,"length2":32},{"diffs":[[0,"     regularShot"],[-1,")"],[0,"\n            )\n "]],"start1":4587,"start2":4587,"length1":33,"length2":32},{"diffs":[[0,"ay(\n            "],[-1,"clone("],[0,"regularShot)\n   "]],"start1":4669,"start2":4669,"length1":38,"length2":32},{"diffs":[[0,"     regularShot"],[-1,")"],[0,"\n            )\n "]],"start1":4680,"start2":4680,"length1":33,"length2":32},{"diffs":[[0,"        "],[-1,"clone("],[0,"regularS"]],"start1":4770,"start2":4770,"length1":22,"length2":16},{"diffs":[[0,"ularShot"],[-1,")"],[0,"\n       "]],"start1":4781,"start2":4781,"length1":17,"length2":16}]],"length":5285,"saved":false}
{"ts":1352054304431,"patch":[[{"diffs":[[0,"e.print("],[1,"i + \" > \" + "],[0,"availabl"]],"start1":5253,"start2":5253,"length1":16,"length2":28},{"diffs":[[0,"Ships[i]"],[1,".name"],[0,");   \n}"]],"start1":5282,"start2":5282,"length1":15,"length2":20}]],"length":5302,"saved":false}
{"ts":1352054337782,"patch":[[{"diffs":[[0,"console\n"],[1,"console.print(\"Going through the available ships\")\n"],[0,"for (var"]],"start1":5189,"start2":5189,"length1":16,"length2":67}]],"length":5353,"saved":false}
{"ts":1352054341534,"patch":[[{"diffs":[[0,"hips"],[1,"."],[0,"\")"],[1,";"],[0,"\nfor"]],"start1":5241,"start2":5241,"length1":10,"length2":12}]],"length":5355,"saved":false}
{"ts":1352054446423,"patch":[[{"diffs":[[0,"console."],[-1,"print"],[1,"log"],[0,"(\"Going "]],"start1":5197,"start2":5197,"length1":21,"length2":19},{"diffs":[[0,"console."],[-1,"print"],[1,"log"],[0,"(i + \" >"]],"start1":5298,"start2":5298,"length1":21,"length2":19}]],"length":5351,"saved":false}
{"ts":1352054476832,"patch":[[{"diffs":[[0," engine."],[-1,"getAvailable"],[1,"mode1"],[0,"Ships();"]],"start1":5095,"start2":5095,"length1":28,"length2":21}]],"length":5344,"saved":false}
{"ts":1352054487254,"patch":[[{"diffs":[[0,"Ships = "],[-1,"engine."],[0,"mode1Shi"]],"start1":5088,"start2":5088,"length1":23,"length2":16}]],"length":5337,"saved":false}
{"ts":1352054501885,"patch":[[{"diffs":[[0,"Ships = "],[-1,"mode1"],[1,"engine.getAvailable"],[0,"Ships();"]],"start1":5088,"start2":5088,"length1":21,"length2":35}]],"length":5351,"saved":false}
{"ts":1352054506379,"patch":[[{"diffs":[[0,"].name);"],[-1,"   "],[0,"\n}"]],"start1":5338,"start2":5338,"length1":13,"length2":10}]],"length":5348,"saved":false}
{"ts":1352054535182,"patch":[[{"diffs":[[0,"e ships."],[-1,"\""],[1," \" + availableShips"],[0,");\nfor ("]],"start1":5236,"start2":5236,"length1":17,"length2":35}]],"length":5366,"saved":false}
{"ts":1352054616074,"patch":[[{"diffs":[[0,"r (var i"],[1," = 0"],[0,"; i < av"]],"start1":5268,"start2":5268,"length1":16,"length2":20}]],"length":5370,"saved":false}
{"ts":1352054643676,"patch":[[{"diffs":[[0,")\n{\n    "],[1,"var name = name;"],[0,"// name:"]],"start1":483,"start2":483,"length1":16,"length2":32}]],"length":5386,"saved":false}
{"ts":1352054674294,"patch":[[{"diffs":[[0,"s[i]"],[-1,"."],[1,"[\""],[0,"name"],[1,"\"]"],[0,");\n}"]],"start1":5373,"start2":5373,"length1":13,"length2":16}]],"length":5389,"saved":false}
{"ts":1352054682724,"patch":[[{"diffs":[[0,"s[i]"],[-1,"[\"name\"]"],[0,");\n}"]],"start1":5373,"start2":5373,"length1":16,"length2":8}]],"length":5381,"saved":false}
{"ts":1352054695855,"patch":[[{"diffs":[[0,"    "],[-1,"var name = name;"],[0,"// n"]],"start1":487,"start2":487,"length1":24,"length2":8}]],"length":5365,"saved":false}
{"ts":1352054748547,"patch":[[{"diffs":[[0,"ps[i]);\n"],[1,"    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) console.log(attr);\n    }\n"],[0,"}"]],"start1":5356,"start2":5356,"length1":9,"length2":100}]],"length":5456,"saved":false}
{"ts":1352054766997,"patch":[[{"diffs":[[0,"attr in "],[-1,"obj) {\n        if (obj"],[1,"availableShips[i]) {\n        if (availableShips[i]"],[0,".hasOwnP"]],"start1":5377,"start2":5377,"length1":38,"length2":66}]],"length":5484,"saved":false}
{"ts":1352054815117,"patch":[[{"diffs":[[0,"    "],[-1," if (availableShips[i].hasOwnProperty(attr))"],[0," con"]],"start1":5409,"start2":5409,"length1":52,"length2":8}]],"length":5440,"saved":false}
{"ts":1352054834213,"patch":[[{"diffs":[[0,"ships. \""],[-1," + availableShips"],[0,");\nfor ("]],"start1":5238,"start2":5238,"length1":33,"length2":16}]],"length":5423,"saved":false}
{"ts":1352054951104,"patch":[[{"diffs":[[0,")\n{\n    "],[1,"this.name = name;"],[0,"// name:"]],"start1":483,"start2":483,"length1":16,"length2":33},{"diffs":[[0,"pe.\n    "],[1,"this.shots = shots;"],[0,"// shots"]],"start1":540,"start2":540,"length1":16,"length2":35},{"diffs":[[0,"ip.\n    "],[1,"this.length = length"],[0,"// lengt"]],"start1":621,"start2":621,"length1":16,"length2":36}]],"length":5479,"saved":false}
{"ts":1352054958444,"patch":[[{"diffs":[[0,"= length"],[1,";"],[0,"// lengt"]],"start1":641,"start2":641,"length1":16,"length2":17}]],"length":5480,"saved":false}
{"ts":1352054978424,"patch":[[{"diffs":[[0,"p(name, "],[-1,"l"],[1,"shipL"],[0,"ength, s"]],"start1":462,"start2":462,"length1":17,"length2":21},{"diffs":[[0,"his."],[-1,"l"],[1,"shipL"],[0,"ength = "],[-1,"l"],[1,"shipL"],[0,"engt"]],"start1":634,"start2":634,"length1":18,"length2":26},{"diffs":[[0,"ngth;// "],[-1,"l"],[1,"shipL"],[0,"ength: t"]],"start1":657,"start2":657,"length1":17,"length2":21}]],"length":5496,"saved":false}
{"ts":1352055002758,"patch":[[{"diffs":[[0,"Ships[i]"],[1,".name"],[0,");\n    f"]],"start1":5409,"start2":5409,"length1":16,"length2":21}]],"length":5501,"saved":false}
{"ts":1352055015205,"patch":[[{"diffs":[[0,"e);\n"],[-1,"    for (var attr in availableShips[i]) {\n        console.log(attr);\n    }\n"],[0,"}"]],"start1":5421,"start2":5421,"length1":80,"length2":5}]],"length":5426,"saved":false}
{"ts":1352055189837,"patch":[[{"diffs":[[0,")\n{\n    "],[1,"//TODO"],[0,"\n};\n\n//T"]],"start1":3991,"start2":3991,"length1":16,"length2":22}]],"length":5432,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352897570160,"patch":[[{"diffs":[[0,"ion\n"],[-1,"\n//Clone functionality for custom objects"],[1,"/** \n *      Example ship grid with numbering for reference (x1,y2 to x2,y2)\n *      Carrier     :   0,0 to 4,0\n *      Battleship  :   0,1 to 0,4\n *      Cruiser     :   5,4 to 5,6\n *      Submarine   :   2,7 to 4,7\n *      Destroyer   :   8,7 to 8,8\n * \n *      0   1   2   3   4   5   6   7   8   9\n *  0   C   C   C   C   C   x   x   x   x   x\n *  1   B   x   x   x   x   x   x   x   x   x\n *  2   B   x   x   x   x   x   x   x   x   x\n *  3   B   x   x   x   x   x   x   x   x   x\n *  4   B   x   x   x   x   C   x   x   x   x\n *  5   x   x   x   x   x   C   x   x   x   x\n *  6   x   x   x   x   x   C   x   x   x   x\n *  7   x   x   S   S   S   x   x   x   D   x\n *  8   x   x   x   x   x   x   x   x   D   x\n *  9   x   x   x   x   x   x   x   x   x   x\n * \n *      Example Empty Shot Grid\n *      (0) indicates fog of war (nethier a hit or miss)\n * \n *      0   1   2   3   4   5   6   7   8   9\n *  0   0   0   0   0   0   0   0   0   0   0\n *  1   0   0   0   0   0   0   0   0   0   0\n *  2   0   0   0   0   0   0   0   0   0   0\n *  3   0   0   0   0   0   0   0   0   0   0\n *  4   0   0   0   0   0   0   0   0   0   0\n *  5   0   0   0   0   0   0   0   0   0   0\n *  6   0   0   0   0   0   0   0   0   0   0\n *  7   0   0   0   0   0   0   0   0   0   0\n *  8   0   0   0   0   0   0   0   0   0   0\n *  9   0   0   0   0   0   0   0   0   0   0\n * \n *      Example Sunk Shot Grid\n *      (1) indicates a miss\n *      (2) indicates a hit\n * \n *      0   1   2   3   4   5   6   7   8   9\n *  0   2   2   2   2   2   1   1   1   1   1\n *  1   2   1   1   1   1   1   1   1   1   1\n *  2   2   1   1   1   1   1   1   1   1   1\n *  3   2   1   1   1   1   1   1   1   1   1\n *  4   2   1   1   1   1   2   1   1   1   1\n *  5   1   1   1   1   1   2   1   1   1   1\n *  6   1   1   1   1   1   2   1   1   1   1\n *  7   1   1   2   2   2   1   1   1   2   1\n *  8   1   1   1   1   1   1   1   1   2   1\n *  9   1   1   1   1   1   1   1   1   1   1\n */\n\n//Clone functionality for custom objects\n//doesn't clone methods unfortunately, no real way to fix that"],[0,"\nfun"]],"start1":31,"start2":31,"length1":49,"length2":2083},{"diffs":[[0,"obj)"],[-1," "],[1,"\n"],[0,"{\n    "],[-1,"if (null == obj || \"object\" != typeof obj) return obj;\n    var copy = obj.constructor();\n    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];"],[1,"return JSON.parse(JSON.stringify(obj));\n}\n\nfunction cloneFunction(func)\n{\n    //this is evil, but necessary to duplicate a function as far as I know\n    eval(\"var cloneFunc = \" +  func.toString()); // CREATE THE COPY*\n    return eval;\n}\n\n//this is a player agnostic function for placing a ship on a specific grid\nfunction placeShipOnGrid(x, y, ship, grid)\n{\n    //place the ship vertically\n    if (ship.isVertical)\n    {\n        //place the ship vertically\n        for (var posY = y; posY < y + ship.length; posY++)\n        {\n            grid[x][posY] = ship;\n        }\n    }\n    //place the ship horizontally\n    else\n    {\n        //place the ship horizontally\n        for (var posX = x; posX < x + ship.length; posX++)\n        {\n            grid[posX][y] = ship;\n        }\n    }\n}\n\nfunction createEmptyGridArray(size)\n{\n    var newGrid new Array();\n    for (var x = 0; x < size; x++)\n    {\n        newGrid[x] = new Array();\n        for (var y = 0; y < size; y++)\n        {\n            newGrid[x][y] = 0;\n        }"],[0,"\n   "]],"start1":2126,"start2":2126,"length1":193,"length2":1031},{"diffs":[[0,"urn "],[-1,"copy"],[1,"newGrid"],[0,";\n}\n"]],"start1":3167,"start2":3167,"length1":12,"length2":15},{"diffs":[[0,"//////////\n\n"],[1,"//Array of shot messages based on shot impact on the grid\nvar ShotMessages = Array();\nShotMessages[0] = \"FogOfWar\";\nShotMessages[1] = \"Miss\";\nShotMessages[2] = \"Hit\";\nShotMessages[3] = \"RevealMiss\";\nShotMessages[4] = \"RevealHit\";\n\n"],[0,"//the class "]],"start1":3268,"start2":3268,"length1":24,"length2":255},{"diffs":[[0," = name;"],[1," "],[0,"// name:"]],"start1":3610,"start2":3610,"length1":16,"length2":17},{"diffs":[[0,"= shots;"],[1," "],[0,"// shots"]],"start1":3670,"start2":3670,"length1":16,"length2":17},{"diffs":[[0,"pLength;"],[1," "],[0,"// shipL"]],"start1":3762,"start2":3762,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"\n    //set the location of this ship. the startx and starty define where the ship starts, then based on length and the boolean horizontal it is possible to populate the grid with the ship.\n    var setLocation = function(startx, starty,"],[1,"this.damage = 0; //a simple damage counter. When this counter equals the length it is destroyed\n    this.isVertical = false; //indicates if the ship is positioned vertically or"],[0," hor"]],"start1":3861,"start2":3861,"length1":243,"length2":184},{"diffs":[[0,"ntal"],[-1,")"],[1,"ly"],[0,"\n    "],[-1,"{\n        //The grid location of the ship (important for placing the ship on the grid)\n "],[1,"\n    //Indicates if the ship is destroyed \n"],[0,"    "],[-1,"   "],[0,"this."],[-1,"startx = startx;"],[1,"isDestroyed\n    {"],[0,"\n   "]],"start1":4048,"start2":4048,"length1":130,"length2":84},{"diffs":[[0,"    "],[1,"if ("],[0,"this."],[-1,"starty = starty;\n        this.horizontal = horizontal"],[1,"damage >= this.shipLength) { return true; }\n        return false"],[0,";\n  "]],"start1":4133,"start2":4133,"length1":66,"length2":81},{"diffs":[[0,"    var "],[-1,"shoot"],[1,"fire"],[0," = funct"]],"start1":4362,"start2":4362,"length1":21,"length2":20},{"diffs":[[0,"te.\n"],[-1,"function TurnData("],[1,"//Drew: not sure how to approach this yet, just a mockup consideration\nfunction TurnData()\n{\n    \n}\n\n//clone a ship and its function\nfunction cloneShip(originalShip)\n{\n    \n}\n\n//clone a shot and its functions\nfunction cloneShot(originalShot"],[0,")\n{\n"]],"start1":4471,"start2":4471,"length1":26,"length2":248},{"diffs":[[0,"\n    \n    //"],[1," "],[0,"The grids to"]],"start1":4990,"start2":4990,"length1":24,"length2":25},{"diffs":[[0,"used"],[1," //"],[0,"\n    //"],[-1,"TODO: Add the grids\n    \n    //TODO: include a history of shots for each player\n    \n    //Watch value to represent who's turn it is\n    //TODO: implement a watch value\n    \n    //fire a shot at the opponent's ship grid\n    this.fireShot = function(x, y, shot) {};\n    \n    //place a ship on the current player;s grid\n    this.placeShip = function(startx,starty,endx,endy,ship) {};\n    \n    //return the shot history of the current player\n    this.getShotHistory = function() {"],[1,"Player1 Grids\n    this.player1ShipGrid = new Array();\n    this.player1ShotGrid = new Array();\n    //Player2 Grids\n    this.player2ShipGrid = new Array();\n    this.player2ShotGrid = new Array();\n    \n    //a history of shots for each player\n    this.player1ShotHistory = new Array();\n    this.player2ShotHistory = new Array();\n    \n    //an array of ships for each player\n    this.player1Ships = new Array();\n    this.player2Ships = new Array();\n    \n    //Watch value to represent who's turn it is\n    this.isFirstPlayer = true;\n    \n    //turn counter\n    //initialized to 0 so that when we change players to setup ship it ends up at one for the first turn\n    this.turnCounter = 0;\n    \n    //fire a shot at the opponent's ship grid\n    this.fireShot = function(x, y, shot)\n    {\n        var message\n        //firing logic if this is the first player shooting\n        if (this.isFirstPlayer)\n        {\n            message = shot.fire(x, y, this.player2ShipGrid, this.player1ShotGrid);\n            this.player1ShotHistory.push(\"\" + message);\n        }\n        //firing logic if this is the second player shooting\n        else \n        {\n            message = shot.fire(x, y, this.player1ShipGrid, this.player2ShotGrid);\n        }\n        \n    };\n    \n    //place a ship on the current player;s grid\n    this.placeShip = function(startx,starty,isVertical,ship)\n    {\n        //The grid location of the ship (important for placing the ship on the grid)\n        ship.startx = startx;\n        ship.starty = starty;\n        ship.isVertical = isVertical;\n        \n        //create a clone so we don't get reference errors\n        var shipClone = clone(ship);\n        \n        //sort by player\n        if (this.isFirstPlayer)\n        {\n            //store the ship for the player at the end of the ship array\n            this.player1Ships.push(shipClone)\n            //now populate the array with the ship\n            placeShipOnGrid(startx, starty, shipClone, this.player1ShipGrid);\n        }\n        else\n        {\n            //store the ship for the player at the end of the ship array\n            this.player2Ships.push(shipClone)\n            //now populate the array with the ship\n            placeShipOnGrid(startx, starty, shipClone, this.player2ShipGrid);\n        }\n    };\n    \n    //return the shot history of the current player\n    this.getShotHistory = function()\n    {\n        if (this.isFirstPlayer) { return this.player1ShotHistory; }\n        return this.player2ShotHistory;\n    "],[0,"};\n "]],"start1":5019,"start2":5019,"length1":492,"length2":2506},{"diffs":[[0,") {};\n    \n    /"],[-1,"/r"],[1,"**\n     * R"],[0,"eturn"],[1,"s"],[0," the shot grids\n"]],"start1":7713,"start2":7713,"length1":39,"length2":49},{"diffs":[[0,"e shot grids"],[1," of the current player\n     */"],[0,"\n    this.ge"]],"start1":7749,"start2":7749,"length1":24,"length2":54},{"diffs":[[0,"ids = function()"],[1,"\n    {\n        if (this.isFirstPlayer) { return this.player1ShotGrid; }\n        return this.player2ShotGrid;\n   "],[0," "],[-1,"{"],[0,"};\n    \n    //re"]],"start1":7810,"start2":7810,"length1":34,"length2":145},{"diffs":[[0,";\n    \n    /"],[-1,"/r"],[1,"**\n     * R"],[0,"eturn"],[1,"s"],[0," the ship gr"]],"start1":7940,"start2":7940,"length1":31,"length2":41},{"diffs":[[0,"the "],[-1,"active player"],[1,"current player\n     */"],[0,"\n   "]],"start1":7988,"start2":7988,"length1":21,"length2":30},{"diffs":[[0,"rid = function()"],[1,"\n    {\n        if (this.isFirstPlayer) { return this.player1ShipGrid; }\n        return this.player2ShipGrid;\n   "],[0," "],[-1,"{"],[0,"};\n    \n    //cl"]],"start1":8032,"start2":8032,"length1":34,"length2":145},{"diffs":[[0,"ew game\n"],[1,"    //TODO: implement this\n"],[0,"    this"]],"start1":8229,"start2":8229,"length1":16,"length2":43},{"diffs":[[0,"\n    };\n"],[1,"    \n    //trigger a player switch\n    this.changePlayers = function()\n    {\n        //change to the second player\n        if (this.isFirstPlayer) { this.isFirstPlayer = false; }\n        //checnge to first player and increment the turn counter\n        else\n        { \n            this.isFirstPlayer = true;\n            this.turnCounter++;\n        }\n    }\n"],[0,"}\n\n//def"]],"start1":8422,"start2":8422,"length1":16,"length2":371},{"diffs":[[0,"w Engine();\n"],[1,"    \n    // This is test code. Remove me when this is properly implemented //\n    \n    //initialize the starting arrays with nothing of size 10x10\n    newEngine.player1ShipGrid = createEmptyGridArray(10);\n    newEngine.player1ShotGrid = createEmptyGridArray(10);\n    newEngine.player2ShipGrid = createEmptyGridArray(10);\n    newEngine.player2ShotGrid = createEmptyGridArray(10);\n    \n    //load the mode 1 ships\n    newEngine.loadShips(mode1Ships());\n    var ships = newEngine.getAvailableShips();\n    \n    //place ships for player 1\n    newEngine.placeShip(0, 0, false, ships[0]);\n    newEngine.placeShip(0, 1, true, ships[1]);\n    newEngine.placeShip(5, 4, true, ships[2]);\n    newEngine.placeShip(2, 7, false, ships[3]);\n    newEngine.placeShip(8, 7, true, ships[4]);\n    \n    //change to the second player\n    newEngine.changePlayers();\n    //place ships for player 2\n    newEngine.placeShip(1, 0, false, ships[0]);\n    newEngine.placeShip(0, 2, true, ships[1]);\n    newEngine.placeShip(6, 4, true, ships[2]);\n    newEngine.placeShip(2, 8, false, ships[3]);\n    newEngine.placeShip(9, 8, true, ships[4]);\n    \n    //change back to player 1\n    newEngine.changePlayers();\n    \n"],[0,"    //Here I"]],"start1":9229,"start2":9229,"length1":24,"length2":1204},{"diffs":[[0,"to run.\n"],[1,"//basically this is used to switch between single and multi player, and toggle game mode\n"],[0,"Engine.p"]],"start1":11013,"start2":11013,"length1":16,"length2":105},{"diffs":[[0,"layers, "],[-1,"m"],[1,"isM"],[0,"odified)"]],"start1":11162,"start2":11162,"length1":17,"length2":19},{"diffs":[[0,"  //TODO"],[1,":"],[0,"\n};\n\n//T"]],"start1":11186,"start2":11186,"length1":16,"length2":17},{"diffs":[[0,"larShot."],[-1,"shoot"],[1,"fire"],[0," = funct"]],"start1":11372,"start2":11372,"length1":21,"length2":20},{"diffs":[[0," = function("],[-1,"g"],[1,"x, y, targetShipGrid, shotG"],[0,"rid)\n    {\n "]],"start1":11384,"start2":11384,"length1":25,"length2":51},{"diffs":[[0,"\n\n//"],[-1,"create the engine that will be used and initialize it."],[1,"///////////////////////\n// Section for AI Code //\n/////////////////////////\n\n//TODO: Yeah, you know...\n\n///////////////////////////\n// Now Start The Engines //\n///////////////////////////\n\n//create the engine that will be used and initialize it.\n//init is called to initialize the engine if it already setup or create new data for the engine"],[0,"\nvar"]],"start1":12134,"start2":12134,"length1":62,"length2":349},{"diffs":[[0,"//\n\n"],[-1,"//load the mode 1 ships\nengine.loadShips(mode1Ships());\n\n"],[0,"//ge"]],"start1":12569,"start2":12569,"length1":65,"length2":8}]],"length":12877,"saved":false}
{"ts":1352897777861,"patch":[[{"diffs":[[0," return "],[-1,"eval"],[1,"cloneFunc"],[0,";\n}\n\n//t"]],"start1":2358,"start2":2358,"length1":20,"length2":25},{"diffs":[[0,"inalShip)\n{\n    "],[1,"var clonedShip = clone(originalShip);\n    clonedShip"],[0,"\n}\n\n//clone a sh"]],"start1":4636,"start2":4636,"length1":32,"length2":84}]],"length":12934,"saved":false}
{"ts":1352897802632,"patch":[[{"diffs":[[0,"ion(func)\n{\n"],[1,"    var cloneFunc;\n"],[0,"    //this i"]],"start1":2199,"start2":2199,"length1":24,"length2":43},{"diffs":[[0,"  eval(\""],[-1,"var "],[0,"cloneFun"]],"start1":2307,"start2":2307,"length1":20,"length2":16}]],"length":12949,"saved":false}
{"ts":1352897814117,"patch":[[{"diffs":[[0,"y(obj));\n}\n\n"],[1,"//clone a specific function\n"],[0,"function clo"]],"start1":2168,"start2":2168,"length1":24,"length2":52}]],"length":12977,"saved":false}
{"ts":1352897914736,"patch":[[{"diffs":[[0,"p);\n    "],[-1,"clonedShip"],[1,"//walk through the shots and clone each\n    var clonedShots = new Array();\n    for(var i = 0; i < originalShip.shots.length; i++)\n    {\n        \n    }"],[0,"\n}\n\n//cl"]],"start1":4729,"start2":4729,"length1":26,"length2":166}]],"length":13117,"saved":false}
{"ts":1352897956544,"patch":[[{"diffs":[[0,"        "],[-1,"\n    }"],[1,"clonedShots[i] = cloneFunction(originalShip.shots[i]);\n    }\n    clonedShip.shots = clonedShots;"],[0,"\n}\n\n//cl"]],"start1":4873,"start2":4873,"length1":22,"length2":112}]],"length":13207,"saved":false}
{"ts":1352898073231,"patch":[[{"diffs":[[0,"   }\n}\n\n"],[1,"//Create an empty grid array\n"],[0,"function"]],"start1":2962,"start2":2962,"length1":16,"length2":45},{"diffs":[[0,"dShots;\n"],[1,"    return clonedShip;\n"],[0,"}\n\n//clo"]],"start1":4999,"start2":4999,"length1":16,"length2":39},{"diffs":[[0,"inalShot)\n{\n"],[1,"    var clonedShot = clone(originalShot);\n    clonedShot.fire = cloneFunction(originalShot.fire);\n"],[0,"    \n}\n\n////"]],"start1":5089,"start2":5089,"length1":24,"length2":122}]],"length":13357,"saved":false}
{"ts":1352898079486,"patch":[[{"diffs":[[0,".fire);\n    "],[1,"return clonedShot;"],[0,"\n}\n\n////////"]],"start1":5191,"start2":5191,"length1":24,"length2":42}]],"length":13375,"saved":false}
{"ts":1352898142475,"patch":[[{"diffs":[[0,"t\", 1);\n"],[1,"    //because of the way cloning objects works in javascript, each shot object can only have the fire function, all logic for firing should be in this function.\n"],[0,"    regu"]],"start1":11854,"start2":11854,"length1":16,"length2":177}]],"length":13536,"saved":false}
{"ts":1352898179085,"patch":[[{"diffs":[[0,"unction("],[-1,"g"],[1,"x, y, targetShipGrid, shotG"],[0,"rid) {};"]],"start1":4455,"start2":4455,"length1":17,"length2":43}]],"length":13562,"saved":false}
{"ts":1352898204424,"patch":[[{"diffs":[[0,"hot does"],[1,". This is the only function allowed  in this class so that cloning it is possible"],[0,"\n    var"]],"start1":4430,"start2":4430,"length1":16,"length2":97}]],"length":13643,"saved":false}
{"ts":1352898249960,"patch":[[{"diffs":[[0,"fit = function()"],[1,"\n    {\n        this.isFirstPlayer = true;\n        this.turnCounter = 0;\n        \n   "],[0," "],[-1,"{"],[0,"};\n    \n    //re"]],"start1":8881,"start2":8881,"length1":34,"length2":117}]],"length":13726,"saved":false}
{"ts":1352898260603,"patch":[[{"diffs":[[0,"er = 0;\n        "],[1,"//TODO: clear data from the local storage"],[0,"\n    };\n    \n   "]],"start1":8961,"start2":8961,"length1":32,"length2":73}]],"length":13767,"saved":false}
{"ts":1352898424021,"patch":[[{"diffs":[[0,"    "],[-1,"return this.a"],[1,"var clonedAvailableShips = new Array();\n        //return clone of the array of ships\n        for (var i = 0; i < this.availableShips.length; i++)\n        {\n            clonedAvailableShips[i] = cloneShip(this.availableShips[i]);\n        }\n        return clonedA"],[0,"vail"]],"start1":9120,"start2":9120,"length1":21,"length2":269}]],"length":14015,"saved":false}
{"ts":1352898467071,"patch":[[{"diffs":[[0,"layer) { return "],[1,"clone("],[0,"this.player1Shot"]],"start1":8463,"start2":8463,"length1":32,"length2":38},{"diffs":[[0,"yer1ShotGrid"],[1,")"],[0,"; }\n        "]],"start1":8493,"start2":8493,"length1":24,"length2":25},{"diffs":[[0,"\n        return "],[1,"clone("],[0,"this.player2Shot"]],"start1":8509,"start2":8509,"length1":32,"length2":38},{"diffs":[[0,"yer2ShotGrid"],[1,")"],[0,";\n    };\n   "]],"start1":8539,"start2":8539,"length1":24,"length2":25},{"diffs":[[0,"layer) { return "],[1,"clone("],[0,"this.player1Ship"]],"start1":8699,"start2":8699,"length1":32,"length2":38},{"diffs":[[0,"ShipGrid"],[1,")"],[0,"; }\n    "]],"start1":8733,"start2":8733,"length1":16,"length2":17},{"diffs":[[0,"\n        return "],[1,"clone("],[0,"this.player2Ship"]],"start1":8745,"start2":8745,"length1":32,"length2":38},{"diffs":[[0,"ShipGrid"],[1,")"],[0,";\n    };"]],"start1":8779,"start2":8779,"length1":16,"length2":17}]],"length":14043,"saved":false}
{"ts":1352898501631,"patch":[[{"diffs":[[0,"wnLength)\n{\n"],[1,"    var cooldownLength = cooldownLength;\n"],[0,"    //define"]],"start1":4397,"start2":4397,"length1":24,"length2":65}]],"length":14084,"saved":false}
{"ts":1352898568301,"patch":[[{"diffs":[[0,".isDestroyed"],[-1,""],[0,""],[1," = function()"],[0,"\n    {\n     "]],"start1":4187,"start2":4187,"length1":24,"length2":37},{"diffs":[[0,"false;\n    }"],[-1,""],[0,""],[1,";"],[0,"\n}\n\n//the cl"]],"start1":4295,"start2":4295,"length1":24,"length2":25},{"diffs":[[0,"hot("],[-1,"name, c"],[1,"shotName, shotC"],[0,"ooldown"],[-1,"Length"],[0,")\n{\n"]],"start1":4395,"start2":4395,"length1":28,"length2":30},{"diffs":[[0,"h = "],[-1,"c"],[1,"shotC"],[0,"ooldown"],[-1,"Length;"],[1,";\n    var name = shotNamel"],[0,"\n   "]],"start1":4446,"start2":4446,"length1":23,"length2":46}]],"length":14123,"saved":false}
{"ts":1352898569531,"patch":[[{"diffs":[[0,"shotName"],[-1,"l"],[1,";"],[0,"\n    //d"]],"start1":4479,"start2":4479,"length1":17,"length2":17}]],"length":14123,"saved":false}
{"ts":1352898576250,"patch":[[{"diffs":[[0,"otName;\n"],[1,"    \n"],[0,"    //de"]],"start1":4481,"start2":4481,"length1":16,"length2":21}]],"length":14128,"saved":false}
{"ts":1352898654603,"patch":[[{"diffs":[[0,"Cooldown)\n{\n"],[1,"    var name = shotName;\n"],[0,"    var cool"]],"start1":4413,"start2":4413,"length1":24,"length2":49},{"diffs":[[0,"wn;\n    var "],[-1,"na"],[1,"cooldownTi"],[0,"me"],[1,"r"],[0," = "],[-1,"shotName"],[1,"0"],[0,";\n    \n    /"]],"start1":4485,"start2":4485,"length1":39,"length2":41}]],"length":14155,"saved":false}
{"ts":1352898753290,"patch":[[{"diffs":[[0,"id) {};\n"],[1,"    \n    var isAvailable = function()\n    {\n        if (this.cooldownTimer == 0) { return true; }\n        return false;\n    };\n"],[0,"}\n\n//the"]],"start1":4684,"start2":4684,"length1":16,"length2":143}]],"length":14282,"saved":false}
{"ts":1352898773900,"patch":[[{"diffs":[[0,"d) {};\n    \n"],[1,"    //determine if the shot is ready to be fired again\n"],[0,"    var isAv"]],"start1":4685,"start2":4685,"length1":24,"length2":79}]],"length":14337,"saved":false}
{"ts":1352898827589,"patch":[[{"diffs":[[0,"n false;\n    };\n"],[1,"    \n    var fired = function()\n    {\n        this.cooldownTimer = cooldownLength;\n    };\n"],[0,"}\n\n//the class t"]],"start1":4858,"start2":4858,"length1":32,"length2":122}]],"length":14427,"saved":false}
{"ts":1352898851069,"patch":[[{"diffs":[[0,"wnTimer "],[-1,"="],[1,"<"],[0,"= 0) { r"]],"start1":4814,"start2":4814,"length1":17,"length2":17},{"diffs":[[0,"    };\n    \n"],[1,"    //set the cooldown timer\n"],[0,"    var fire"]],"start1":4867,"start2":4867,"length1":24,"length2":53}]],"length":14456,"saved":false}
{"ts":1352898861530,"patch":[[{"diffs":[[0,"wnTimer "],[-1,"<"],[1,"="],[0,"= 0) { r"]],"start1":4814,"start2":4814,"length1":17,"length2":17}]],"length":14456,"saved":false}
{"ts":1352898935958,"patch":[[{"diffs":[[0,"nLength;\n    };\n"],[1,"    \n    //deincrement the cooldown timer\n    var decCooldown = function()\n    {\n        if (cooldownTimer > 0) { cooldownTimer--; }\n    };\n"],[0,"}\n\n//the class t"]],"start1":4977,"start2":4977,"length1":32,"length2":172}]],"length":14596,"saved":false}
{"ts":1352898945729,"patch":[[{"diffs":[[0,"e cooldown timer"],[1,", but only if it isn't ready"],[0,"\n    var decCool"]],"start1":5018,"start2":5018,"length1":32,"length2":60}]],"length":14624,"saved":false}
{"ts":1352898961208,"patch":[[{"diffs":[[0,"Timer =="],[1,"="],[0," 0) { re"]],"start1":4816,"start2":4816,"length1":16,"length2":17}]],"length":14625,"saved":false}
{"ts":1352899079269,"patch":[[{"diffs":[[0,"Shot.fire);\n"],[1,"    clonedShot.isAvailable = cloneFunction(originalShot.isAvailable);\n    clonedShot.fired = cloneFunction(originalShot.fired);\n    clonedShot.decCooldown = cloneFunction(originalShot.decCooldown);\n"],[0,"    return c"]],"start1":5876,"start2":5876,"length1":24,"length2":222}]],"length":14823,"saved":false}
{"ts":1352899105691,"patch":[[{"diffs":[[0,"tPlayer)"],[1,"\n        {\n          "],[0," "],[-1,"{"],[0," this.is"]],"start1":10353,"start2":10353,"length1":18,"length2":38},{"diffs":[[0,"= false;"],[1,"\n       "],[0," }\n     "]],"start1":10403,"start2":10403,"length1":16,"length2":24}]],"length":14851,"saved":false}
{"ts":1352899210058,"patch":[[{"diffs":[[0,"nedShot;\n}\n\n"],[1,"//walk through deincrement all the timers on the shots in all the ships\nfunction decShipShotTimers(ships)\n{\n    \n}\n\n"],[0,"////////////"]],"start1":6100,"start2":6100,"length1":24,"length2":140}]],"length":14967,"saved":false}
{"ts":1352899353402,"patch":[[{"diffs":[[0,"hips)\n{\n    "],[1,"for (var i = 0; i < ships.length; i++)\n    {\n        for (var j = 0; j < ships[i].shots.length; j++)\n        {\n            ships[i][j].decCooldown();\n        }\n    }"],[0,"\n"],[-1,""],[0,"}\n\n/////////"]],"start1":6212,"start2":6212,"length1":25,"length2":190},{"diffs":[[0,".push(shipClone)"],[1,";"],[0,"\n            //n"]],"start1":8531,"start2":8531,"length1":32,"length2":33},{"diffs":[[0,"ipClone)"],[1,";"],[0,"\n       "]],"start1":8821,"start2":8821,"length1":16,"length2":17},{"diffs":[[0,"ayer)\n        {\n"],[1,"            decShipShotTimers(this.player1Ships);\n"],[0,"            this"]],"start1":10639,"start2":10639,"length1":32,"length2":82},{"diffs":[[0,";\n        }\n"],[-1,""],[0,"    }"],[1,";"],[0,"\n}\n\n//define"]],"start1":10913,"start2":10913,"length1":29,"length2":30}]],"length":15185,"saved":false}
{"ts":1352899362890,"patch":[[{"diffs":[[0,"     { \n"],[1,"            decShipShotTimers(this.player2Ships);\n"],[0,"        "]],"start1":10836,"start2":10836,"length1":16,"length2":66}]],"length":15235,"saved":false}
{"ts":1352899387925,"patch":[[{"diffs":[[0,"his."],[-1,"isFirstPlayer = true;\n            this.turnCounter++"],[1,"turnCounter++;\n            this.isFirstPlayer = true"],[0,";\n  "]],"start1":10907,"start2":10907,"length1":60,"length2":60}]],"length":15235,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352955890017,"patch":[[{"diffs":[[0,"ce (x1,y"],[-1,"2"],[1,"1"],[0," to x2,y"]],"start1":92,"start2":92,"length1":17,"length2":17}]],"length":15235,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353209345154,"patch":[[{"diffs":[[0,"  eval(\""],[1,"var "],[0,"cloneFun"]],"start1":2335,"start2":2335,"length1":16,"length2":20},{"diffs":[[0,"osY++)\n        {"],[1," "],[0,"\n            gri"]],"start1":2698,"start2":2698,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"//TODO:implement a regular shot and how it interacts with the grid\n    }"],[1,"    regularShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //implement a regular shot and how it interacts with the grid\n\n\t\t\tif (shotGrid[x][y] ==1 || shotGrid[x][y] ==2)\n\t{\n\t\talert(\"Cell already targeted\");\n\t}\n\telse if (targetShipGrid[x][y] == \"0\")\n\t{\n\t\ttargetShipGrid[x][y] = 1;\n\t\tshotGrid[x][y] = 1;\n\t\treturn ShotMessages[1];\n\t}\n\telse if (targetShipGrid[x][y] !== \"0\")\n\t{\n\t\ttargetShipGrid[x][y] = 2;\n\t\tshotGrid[x][y] = 2;\n\t\tShip.damage++;\n\t\treturn ShotMessages[2];\n\t\t\n\t}\n\t\t\n    };\n    };"],[0,"\n   "]],"start1":13801,"start2":13801,"length1":80,"length2":517}]],"length":15677,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353286565974,"patch":[[{"diffs":[[0,"ipGrid[x][y]"],[-1," ="],[1,".damage = targetShipGrid[x][y].damage +"],[0," 1;\n\t\tshotGr"]],"start1":14087,"start2":14087,"length1":26,"length2":63}]],"length":15714,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353543520217,"patch":[[{"diffs":[[0,"ion\n"],[-1,"f"],[1,"F"],[0,"unction"],[-1," "],[1,".prototype."],[0,"clone"],[-1,"F"],[1," = f"],[0,"unction("],[-1,"func)\n{\n    var cloneFunc;\n    //this is evil, but necessary to duplicate a function as far as I know\n    eval(\"var cloneFunc = \" +  func.toString()); // CREATE THE COPY*"],[1,") {\n    var fct = this;\n    var clone = function() {\n        return fct.apply(this, arguments);\n    };\n    clone.prototype = fct.prototype;\n    for (property in fct) {\n        if (fct.hasOwnProperty(property) && property !== 'prototype') {\n            clone[property] = fct[property];\n        }\n    }"],[0,"\n   "]],"start1":2204,"start2":2204,"length1":201,"length2":344},{"diffs":[[0,"lone"],[-1,"Func"],[0,";\n}"],[1,";"],[0,"\n\n//"]],"start1":2557,"start2":2557,"length1":15,"length2":12},{"diffs":[[0,"    "],[-1,"for (var posY = y; posY < y + ship.length"],[1,"var endY = y + ship.shipLength;\n        var posY = y;\n        for (posY; posY < endY"],[0,"; po"]],"start1":2790,"start2":2790,"length1":49,"length2":92},{"diffs":[[0,"    "],[-1,"for (var posX = x; posX < x + ship.length"],[1,"var endX = x + ship.shipLength;\n        var posX = x;\n        for (posX; posX < endX"],[0,"; po"]],"start1":3040,"start2":3040,"length1":49,"length2":92},{"diffs":[[0,"newGrid "],[-1,"new Array()"],[1,"= []"],[0,";\n    fo"]],"start1":3276,"start2":3276,"length1":27,"length2":20},{"diffs":[[0,"id[x] = "],[-1,"new Array()"],[1,"[]"],[0,";\n      "]],"start1":3344,"start2":3344,"length1":27,"length2":18},{"diffs":[[0,"sages = "],[-1,"Array()"],[1,"[]"],[0,";\nShotMe"]],"start1":3641,"start2":3641,"length1":23,"length2":18},{"diffs":[[0,"  {\n        "],[-1,"if ("],[1,"return "],[0,"this.damage "]],"start1":4425,"start2":4425,"length1":28,"length2":31},{"diffs":[[0,"ngth"],[-1,") { return true; }\n        return false;\n    };"],[1,";\n    };\n\n    //decrement the cooldown on all shots for this ship\n    this.decCooldown = function()\n    {\n        for (var i = 0; i < shots.length; i++)\n        {\n            shots[i].decCooldown();\n        }\n    }"],[0,"\n}\n\n"]],"start1":4470,"start2":4470,"length1":55,"length2":222},{"diffs":[[0,")\n{\n    "],[-1,"var "],[1,"this."],[0,"name = s"]],"start1":4801,"start2":4801,"length1":20,"length2":21},{"diffs":[[0,"otName;\n    "],[-1,"var "],[1,"this."],[0,"cooldownLeng"]],"start1":4823,"start2":4823,"length1":28,"length2":29},{"diffs":[[0,"wn;\n    "],[-1,"var "],[1,"this."],[0,"cooldown"]],"start1":4867,"start2":4867,"length1":20,"length2":21},{"diffs":[[0,"ossible\n    "],[-1,"var "],[1,"this."],[0,"fire = funct"]],"start1":5007,"start2":5007,"length1":28,"length2":29},{"diffs":[[0,"ain\n    "],[-1,"var "],[1,"this."],[0,"isAvaila"]],"start1":5132,"start2":5132,"length1":20,"length2":21},{"diffs":[[0,"  {\n        "],[-1,"if ("],[1,"return "],[0,"this.cooldow"]],"start1":5172,"start2":5172,"length1":28,"length2":31},{"diffs":[[0,"== 0"],[-1,") { return true; }\n        return false"],[0,";\n  "]],"start1":5211,"start2":5211,"length1":47,"length2":8},{"diffs":[[0,"mer\n    "],[-1,"var "],[1,"this."],[0,"fired = "]],"start1":5254,"start2":5254,"length1":20,"length2":21},{"diffs":[[0,"Timer = "],[1,"this."],[0,"cooldown"]],"start1":5313,"start2":5313,"length1":16,"length2":21},{"diffs":[[0,"ady\n    "],[-1,"var "],[1,"this."],[0,"decCoold"]],"start1":5415,"start2":5415,"length1":20,"length2":21},{"diffs":[[0,"    if ("],[1,"this."],[0,"cooldown"]],"start1":5463,"start2":5463,"length1":16,"length2":21},{"diffs":[[0," > 0) { "],[1,"this."],[0,"cooldown"]],"start1":5489,"start2":5489,"length1":16,"length2":21},{"diffs":[[0,"onedShots = "],[-1,"new Array()"],[1,"[]"],[0,";\n    for(va"]],"start1":5871,"start2":5871,"length1":35,"length2":26},{"diffs":[[0,"s[i] = clone"],[-1,"Function"],[1,"Shot"],[0,"(originalShi"]],"start1":5966,"start2":5966,"length1":32,"length2":28},{"diffs":[[0,"dShots;\n"],[1,"    clonedShip.decCooldown = originalShip.decCooldown.clone();\n"],[0,"    retu"]],"start1":6041,"start2":6041,"length1":16,"length2":79},{"diffs":[[0,"Shot.fire = "],[-1,"cloneFunction("],[0,"originalShot"]],"start1":6258,"start2":6258,"length1":38,"length2":24},{"diffs":[[0,"hot.fire"],[1,".clone("],[0,");\n    c"]],"start1":6279,"start2":6279,"length1":16,"length2":23},{"diffs":[[0,"lable = "],[-1,"cloneFunction("],[0,"original"]],"start1":6318,"start2":6318,"length1":30,"length2":16},{"diffs":[[0,"vailable"],[1,".clone("],[0,");\n    c"]],"start1":6342,"start2":6342,"length1":16,"length2":23},{"diffs":[[0,"fired = "],[-1,"cloneFunction("],[0,"original"]],"start1":6375,"start2":6375,"length1":30,"length2":16},{"diffs":[[0,"ot.fired"],[1,".clone("],[0,");\n    c"]],"start1":6393,"start2":6393,"length1":16,"length2":23},{"diffs":[[0,"n = "],[-1,"cloneFunction("],[0,"orig"]],"start1":6436,"start2":6436,"length1":22,"length2":8},{"diffs":[[0,"Cooldown"],[1,".clone("],[0,");\n    r"]],"start1":6456,"start2":6456,"length1":16,"length2":23},{"diffs":[[0,"    "],[-1,"for (var j = 0; j < ships[i].shots.length; j++)\n        {\n            ships[i][j"],[1,"ships[i"],[0,"].de"]],"start1":6661,"start2":6661,"length1":88,"length2":15},{"diffs":[[0,"Cooldown();\n"],[-1,"        }\n"],[0,"    }\n}\n\n///"]],"start1":6677,"start2":6677,"length1":34,"length2":24},{"diffs":[[0,"1ShipGrid = "],[-1,"new Array()"],[1,"[]"],[0,";\n    this.p"]],"start1":7033,"start2":7033,"length1":35,"length2":26},{"diffs":[[0,"1ShotGrid = "],[-1,"new Array()"],[1,"[]"],[0,";\n    //Play"]],"start1":7064,"start2":7064,"length1":35,"length2":26},{"diffs":[[0,"2ShipGrid = "],[-1,"new Array()"],[1,"[]"],[0,";\n    this.p"]],"start1":7115,"start2":7115,"length1":35,"length2":26},{"diffs":[[0,"tGrid = "],[-1,"new Array()"],[1,"[]"],[0,";\n    \n "]],"start1":7150,"start2":7150,"length1":27,"length2":18},{"diffs":[[0,"otHistory = "],[-1,"new Array()"],[1,"[]"],[0,";\n    this.p"]],"start1":7226,"start2":7226,"length1":35,"length2":26},{"diffs":[[0,"story = "],[-1,"new Array()"],[1,"[]"],[0,";\n    \n "]],"start1":7264,"start2":7264,"length1":27,"length2":18},{"diffs":[[0,"yer1Ships = "],[-1,"new Array()"],[1,"[]"],[0,";\n    this.p"]],"start1":7333,"start2":7333,"length1":35,"length2":26},{"diffs":[[0,"yer2Ships = "],[-1,"new Array()"],[1,"[]"],[0,";\n    \n    /"]],"start1":7361,"start2":7361,"length1":35,"length2":26},{"diffs":[[0," message"],[-1,""],[1," = \"\";"],[0,"\n       "]],"start1":7725,"start2":7725,"length1":16,"length2":22},{"diffs":[[0,"y.push(\""],[-1,""],[1,"player1: \" + x + \",\" + y + \" "],[0,"\" + mess"]],"start1":7959,"start2":7959,"length1":16,"length2":45},{"diffs":[[0,"ayer2ShotGrid);\n"],[1,"            this.player2ShotHistory.push(\"player2: \" + x + \",\" + y + \" \" + message);\n"],[0,"        }\n      "]],"start1":8172,"start2":8172,"length1":32,"length2":117},{"diffs":[[0,"      }\n"],[-1,"        \n"],[0,"    };\n "]],"start1":8275,"start2":8275,"length1":25,"length2":16},{"diffs":[[0,"lone"],[1,"Ship"],[0,"(ship)"],[-1,";"],[0,"\n   "]],"start1":8685,"start2":8685,"length1":15,"length2":18},{"diffs":[[0,"s = "],[-1,"new Array()"],[1,"[]"],[0,";\n  "]],"start1":10585,"start2":10585,"length1":19,"length2":10},{"diffs":[[0,"  {\n"],[-1,"            regularShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n"],[0,"    "]],"start1":14126,"start2":14126,"length1":86,"length2":8},{"diffs":[[0,"rid\n"],[-1,"\n\t\t\t"],[1,"        "],[0,"if ("]],"start1":14196,"start2":14196,"length1":12,"length2":16},{"diffs":[[0,"x][y] =="],[1,"= "],[0,"1 || sho"]],"start1":14221,"start2":14221,"length1":16,"length2":18},{"diffs":[[0,"] =="],[1,"= "],[0,"2)\n"],[-1,"\t{\n\t\t"],[1,"        {\n            "],[0,"aler"]],"start1":14249,"start2":14249,"length1":16,"length2":35},{"diffs":[[0,"eted\");\n"],[-1,"\t}\n\t"],[1,"        }\n        "],[0,"else if "]],"start1":14304,"start2":14304,"length1":20,"length2":34},{"diffs":[[0,"][y]"],[-1," == \"0\")\n\t{\n\t\ttargetShipGrid[x][y].damage = targetShipGrid[x][y].damage + 1;\n\t\t"],[1,".name === 0)\n        {\n            "],[0,"shot"]],"start1":14355,"start2":14355,"length1":87,"length2":43},{"diffs":[[0,"y] = 1;\n"],[-1,"\t\t"],[1,"            "],[0,"return S"]],"start1":14406,"start2":14406,"length1":18,"length2":28},{"diffs":[[0,"ges[1];\n"],[-1,"\t}\n\t"],[1,"        }\n        "],[0,"else if "]],"start1":14442,"start2":14442,"length1":20,"length2":34},{"diffs":[[0,"][y]"],[-1," !== \"0\")\n\t{\n\t\ttargetShipGrid[x][y] = 2;\n\t\t"],[1,".name !== 0)\n        {\n            targetShipGrid[x][y].damage++;\n            "],[0,"shot"]],"start1":14493,"start2":14493,"length1":51,"length2":86},{"diffs":[[0," 2;\n"],[-1,"\t\tShip.damage++;\n\t\t"],[1,"            "],[0,"retu"]],"start1":14591,"start2":14591,"length1":27,"length2":20},{"diffs":[[0,"2];\n"],[-1,"\t\t\n\t}\n\t\t\n"],[1,"    "],[0,"    }"],[-1,";"],[0,"\n   "]],"start1":14627,"start2":14627,"length1":23,"length2":17},{"diffs":[[0,"l be cop"],[-1,"p"],[0,"ied onto"]],"start1":14710,"start2":14710,"length1":17,"length2":16},{"diffs":[[0,"players\n    "],[-1,"var ships ="],[1,"return"],[0," new Array(\n"]],"start1":14744,"start2":14744,"length1":35,"length2":30},{"diffs":[[0," );\n"],[-1,"    return ships;\n"],[0,"}\n\n/"]],"start1":15238,"start2":15238,"length1":26,"length2":8},{"diffs":[[0,"//\n\n"],[-1,"//TODO: Yeah, you know...\n\n///////////////////////////\n// Now Start The Engines //\n///////////////////////////\n\n//create the engine that will be used and initialize it.\n//init is called to initialize the engine if it already setup or create new data for the engine\nvar engine = new Engine().init();\n\n//////////////////\n// testing code //\n//////////////////\n\n//get the available ships\nvar availableShips = engine.getAvailableShips();\n\n//iterate over the available ships and print their names to the console\nconsole.log(\"Go"],[1,"\n\n//We generate a random number between 0-4 in order to generate a starting point for AI shot selection.\n//This should limit the ability of the opponent to plan ship position to avoid shots.\n//This will begin firing in the upper right corner of the board.\nvar randomInt = Math.floor(Math.random()*5);\nvar xCoord = (9 - randomInt);\nvar yCoord = 0;\n\n\n//This searches for enemy ships by firing in a pattern as long as no ships are found\n function huntingShot()\n{\n    //We use x and y as starting coordinates and begin firing in a diagonal line (x+1, y+1) on cells which !=0 until an edge is reached.\n//When an edge is reached we begin a new diagonal by moving five cells to the left on the x-axis and diagonally firing again.\n//When an edge is reached we begin a new diagonal by moving left to x=0 and diagonally firing again from x=0, y=randomInt.\n//If (randomInt+5) < 9 we perform one more diagonal run\n\n    //TODO  implement regularShot.fire in a searching pattern to locate enemy ships\n\n\n}\n\n//method for sinking an enemy ship once located with hunting shot\nfunction killingShot()\n{\n//Create functions to locate orientation of found ship\n\n//TODO implement firing shots for each directional check.\n    this.fireNorth = function()\n    {\n        yCoord--;\n\n    };\n    this.fireEast = function()\n    {\n        xCoord++;\n\n    };\n    this.fireSouth = function()\n    {\n        yCoord++;\n\n    };\n    this.fireWest = function()\n    {\n        xCoord--;\n\n    };\n\n\n/**\n *   once ship is hit we search for orientation. We limit shots to cells with"],[0,"in"],[-1,"g"],[0," th"],[-1,"rough the available ships. \");\nfor (var i = 0; i < availableShips.length; i++)\n{\n    console.log(i + \" > \" + availableShips[i].name);\n}"],[1,"e grid which are affected by fog of war.\n *\n * //While a ship is hit but not sunk we check one cell north of it\n *   if (y-1 > 0 and [x][y-1] == 0)\n *      {\n *      fireNorth();\n *      }\n *\n *   else if (x+1 < 10 and [x+1][y] == 0)\n *      {\n *      fireEast();\n *      }\n *\n *   else if (x-1 > 0 and [x-1][y] == 0)\n *      {\n *      fireSouth();\n *      }\n *\n *   else if (y+1 < 10 and [x][y+1] == 0)\n *      {\n *      fireWest();\n *      }\n*/\n// TODO: Continue implementation of killingShot with strategy following results from orientation shots.\n}\n\n\n//As long as no ships have been hit we continue with hunting shots\n\nif (huntingShot !== ShotMessages[2])\n{\n    huntingShot();\n}\nelse\n{\n    killingShot();\n}\n\n\n\n///////////////////////////\n// Now Start The Engines //\n///////////////////////////\n\n//create the engine that will be used and initialize it.\n//init is called to initialize the engine if it already setup or create new data for the engine\nvar engine = new Engine().init();"]],"start1":15320,"start2":15320,"length1":666,"length2":2528}]],"length":17848,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353647315787,"patch":[[{"diffs":[[0,"orizontally\n"],[1,"    this.isModeOne = true; //indicates the current mode, which is used to pre-load ship resources and the like\n"],[0,"    \n    //I"]],"start1":4330,"start2":4330,"length1":24,"length2":135},{"diffs":[[0," \n    //"],[1,"TODO:"],[0," This is"]],"start1":11890,"start2":11890,"length1":16,"length2":21},{"diffs":[[0,"nted //\n"],[-1,"    \n"],[0,"    //in"]],"start1":11962,"start2":11962,"length1":21,"length2":16},{"diffs":[[0," //TODO:"],[1," initialize AI if only one player\n    //TODO: set the correct booleans for modes 1 and 2 also load the correct ships"],[0,"\n};\n\n//T"]],"start1":13833,"start2":13833,"length1":16,"length2":132}]],"length":18075,"saved":false}
{"ts":1353647344278,"patch":[[{"diffs":[[0,")\n    );\n}\n\n"],[1,"//This defines all the ships available in mode 1 of the game\nfunction mode2Ships()\n{\n    //define a regular shot\n    var regularShot = new Shot(\"Regular Shot\", 1);\n    //because of the way cloning objects works in javascript, each shot object can only have the fire function, all logic for firing should be in this function.\n    regularShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //implement a regular shot and how it interacts with the grid\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            alert(\"Cell already targeted\");\n        }\n        else if (targetShipGrid[x][y].name === 0)\n        {\n            shotGrid[x][y] = 1;\n            return ShotMessages[1];\n        }\n        else if (targetShipGrid[x][y].name !== 0)\n        {\n            targetShipGrid[x][y].damage++;\n            shotGrid[x][y] = 2;\n            return ShotMessages[2];\n        }\n    };\n    \n    //define special shots\n    \n    //define the ships in mode 1. This array of ships will be copied onto the grid of each players\n    return new Array(\n        new Ship(\"Carrier\", 5, new Array(\n            regularShot\n            )\n        ),\n        new Ship(\"Battleship\", 4, new Array(\n            regularShot\n            )\n        ),\n        new Ship(\"Cruiser\", 3, new Array(\n            regularShot\n            )\n        ),\n        new Ship(\"Submarine\", 3, new Array(\n            regularShot\n            )\n        ),\n        new Ship(\"Destroyer\", 2, new Array(\n            regularShot\n            )\n        )\n    );\n}\n\n"],[0,"////////////"]],"start1":15460,"start2":15460,"length1":24,"length2":1566}]],"length":19617,"saved":false}
{"ts":1353647445395,"patch":[[{"diffs":[[0,"t ships\n"],[1,"    //load mode 2 ships\n    if (isModified)\n    {\n        this.availableShips = mode2Ships();\n        this.isModeOne = false;\n    }\n    //load mode 1 ships and set booleans\n    else\n    {\n        this.availableShips = mode1Ships();\n        this.isModeOne = true;\n    }\n"],[0,"};\n\n//Th"]],"start1":13950,"start2":13950,"length1":16,"length2":285}]],"length":19886,"saved":false}
{"ts":1353649071164,"patch":[[{"diffs":[[0,"layers, "],[-1,"isModified"],[1,"modeOne"],[0,")\n{\n    "]],"start1":13808,"start2":13808,"length1":26,"length2":23},{"diffs":[[0,"if ("],[-1,"isModified"],[1,"modeOne"],[0,")\n  "]],"start1":13983,"start2":13983,"length1":18,"length2":15},{"diffs":[[0,"Ships = mode"],[-1,"2"],[1,"1"],[0,"Ships();\n   "]],"start1":14024,"start2":14024,"length1":25,"length2":25},{"diffs":[[0,"deOne = "],[-1,"fals"],[1,"tru"],[0,"e;\n    }"]],"start1":14063,"start2":14063,"length1":20,"length2":19},{"diffs":[[0,"ableShips = mode"],[-1,"1"],[1,"2"],[0,"Ships();\n       "]],"start1":14157,"start2":14157,"length1":33,"length2":33},{"diffs":[[0,"his.isModeOne = "],[-1,"tru"],[1,"fals"],[0,"e;\n    }\n};\n\n//T"]],"start1":14192,"start2":14192,"length1":35,"length2":36}]],"length":19880,"saved":false}
{"ts":1353649104187,"patch":[[{"diffs":[[0,"       this."],[-1,"available"],[1,"load"],[0,"Ships = mode"]],"start1":14003,"start2":14003,"length1":33,"length2":28},{"diffs":[[0,"       this."],[-1,"available"],[1,"load"],[0,"Ships = mode"]],"start1":14135,"start2":14135,"length1":33,"length2":28}]],"length":19870,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353858017713,"patch":[[{"diffs":[[0,"riately\n"],[1,"    \n    //TODO: Load Ships from local storage\n    \n    //TODO: synchronize loaded ships with grids\n    \n"],[0,"    //fi"]],"start1":13217,"start2":13217,"length1":16,"length2":121}]],"length":19975,"saved":false}
{"ts":1353862681033,"patch":[[{"diffs":[[0,"ne;\n};\n\n"],[1,"//For storing objects in the local storage\nStorage.prototype.setObject = function(key, value) {\n    this.setItem(key, JSON.stringify(value));\n}\n\n//For retriving objects from local storage. Returns a null if there is no object at the key\nStorage.prototype.getObject = function(key) {\n    var value = this.getItem(key);\n    return value && JSON.parse(value);\n}\n\n"],[0,"//this i"]],"start1":2559,"start2":2559,"length1":16,"length2":376}]],"length":20335,"saved":false}
{"ts":1353863257168,"patch":[[{"diffs":[[0,"   }\n    };\n"],[1,"    \n    //This must be called to save the state when switching pages\n    this.saveToLocalStorage = function()\n    {\n        \n    }\n"],[0,"}\n\n//define "]],"start1":11779,"start2":11779,"length1":24,"length2":156}]],"length":20467,"saved":false}
{"ts":1353863489722,"patch":[[{"diffs":[[0,"\n}\n\n"],[-1,"//the class the represents the data to be returned when a turn is complete.\n//Drew: not sure how to approach this yet, just a mockup consideration\nfunction TurnData()\n{\n    \n}\n\n"],[0,"//cl"]],"start1":5998,"start2":5998,"length1":185,"length2":8},{"diffs":[[0,"  {\n        "],[1,"sessionStorage.gameStateSaved = \"true\";"],[0,"\n    }\n}\n\n//"]],"start1":11727,"start2":11727,"length1":24,"length2":63}]],"length":20329,"saved":false}
{"ts":1353863554532,"patch":[[{"diffs":[[0,"  //"],[-1,"TODO: Check local storage and initialize the engine appropriately"],[1,"check if there is any current game state stored\n    if (sessionStorage.gameStateSaved)\n    {"],[0,"\n   "]],"start1":13509,"start2":13509,"length1":73,"length2":100},{"diffs":[[0," grids\n    \n"],[1,"    }\n"],[0,"    //finall"]],"start1":13699,"start2":13699,"length1":24,"length2":30}]],"length":20362,"saved":false}
{"ts":1353863602403,"patch":[[{"diffs":[[0,"aved)\n    {\n"],[1,"        //only load state if the value is true\n        if (sessionStorage.gameStateSaved === \"true\")\n        {\n"],[0,"    \n    //T"]],"start1":13594,"start2":13594,"length1":24,"length2":135},{"diffs":[[0," with grids\n"],[1,"        }\n"],[0,"    \n    }\n "]],"start1":13805,"start2":13805,"length1":24,"length2":34}]],"length":20483,"saved":false}
{"ts":1353863642883,"patch":[[{"diffs":[[0,"true;\n        }\n"],[1,"        //save the current game state;\n        sessionStorage.gameStateSaved = \"true\";\n        this.saveToLocalStorage();\n"],[0,"    };\n    \n    "]],"start1":11591,"start2":11591,"length1":32,"length2":154}]],"length":20605,"saved":false}
{"ts":1353863648701,"patch":[[{"diffs":[[0,"te;\n"],[-1,"        sessionStorage.gameStateSaved = \"true\";\n"],[0,"    "]],"start1":11642,"start2":11642,"length1":56,"length2":8}]],"length":20557,"saved":false}
{"ts":1353863676943,"patch":[[{"diffs":[[0,"cal storage\n"],[1,"        //indicate that the data should not be loaded from session data\n        sessionStorage.gameStateSaved = \"false\";\n"],[0,"    };\n    \n"]],"start1":10739,"start2":10739,"length1":24,"length2":145}]],"length":20678,"saved":false}
{"ts":1353863709935,"patch":[[{"diffs":[[0," 0;\n"],[-1,"        //TODO: clear data from the local storage\n"],[0,"    "]],"start1":10697,"start2":10697,"length1":58,"length2":8},{"diffs":[[0,"rue\";\n    }\n"],[1,"    \n    //clear the local storage\n    this.clearLocalStorage = function()\n    {\n        sessionStorage.gameStateSaved = \"false\";\n    }\n"],[0,"}\n\n//define "]],"start1":11918,"start2":11918,"length1":24,"length2":160}]],"length":20764,"saved":false}
{"ts":1353863723044,"patch":[[{"diffs":[[0,"    "],[-1,"sessionStorage.gameStateSaved = \"false\""],[1,"this.clearLocalStorage()"],[0,";\n  "]],"start1":10777,"start2":10777,"length1":47,"length2":32}]],"length":20749,"saved":false}
{"ts":1353863734100,"patch":[[{"diffs":[[0,"  //"],[-1,"indicate that the data should not be loaded"],[1,"clear the data"],[0," fro"]],"start1":10707,"start2":10707,"length1":51,"length2":22},{"diffs":[[0,"session "],[-1,"data"],[1,"storage"],[0,"\n       "]],"start1":10731,"start2":10731,"length1":20,"length2":23}]],"length":20723,"saved":false}
{"ts":1353863840034,"patch":[[{"diffs":[[0,"d = \"true\";\n"],[1,"        sessionStorage.setObject(\"gameEngine\", this)\n"],[0,"    }\n    \n "]],"start1":11871,"start2":11871,"length1":24,"length2":77}]],"length":20776,"saved":false}
{"ts":1353863860062,"patch":[[{"diffs":[[0," = \"false\";\n"],[1,"        sessionStorage.gameEngine = \"\";\n"],[0,"    }\n}\n\n//d"]],"start1":12060,"start2":12060,"length1":24,"length2":64}]],"length":20816,"saved":false}
{"contributors":["nerian.drew@gmail.com"],"silentsave":false,"ts":1354313093350,"patch":[[{"diffs":[[0,"tion\n/**"],[-1," "],[1,""],[0,"\n *     "]],"start1":30,"start2":30,"length1":17,"length2":16},{"diffs":[[0,"o 8,8\n *"],[-1," "],[1,""],[0,"\n *     "]],"start1":280,"start2":280,"length1":17,"length2":16},{"diffs":[[0,"x   x\n *"],[-1," "],[1,""],[0,"\n *     "]],"start1":789,"start2":789,"length1":17,"length2":16},{"diffs":[[0,"miss)\n *"],[-1," "],[1,""],[0,"\n *     "]],"start1":881,"start2":881,"length1":17,"length2":16},{"diffs":[[0,"0   0\n *"],[-1," "],[1,""],[0,"\n *     "]],"start1":1390,"start2":1390,"length1":17,"length2":16},{"diffs":[[0,"a hit\n *"],[-1," "],[1,""],[0,"\n *     "]],"start1":1481,"start2":1481,"length1":17,"length2":16},{"diffs":[[0,"osY++)\n        {"],[-1," "],[1,""],[0,"\n            gri"]],"start1":3235,"start2":3235,"length1":33,"length2":32},{"diffs":[[0,"lly\n"],[-1,"    this.isModeOne = true; //indicates the current mode, which is used to pre-load ship resources and the like\n    "],[1,""],[0,"\n   "]],"start1":4691,"start2":4691,"length1":123,"length2":8},{"diffs":[[0,"nTimer = 0;\n"],[-1,"    "],[1,""],[0,"\n    //defin"]],"start1":5236,"start2":5236,"length1":28,"length2":24},{"diffs":[[0,"otGrid) {};\n"],[-1,"    "],[1,""],[0,"\n    //deter"]],"start1":5409,"start2":5409,"length1":28,"length2":24},{"diffs":[[0,"= 0;\n    };\n"],[-1,"    "],[1,""],[0,"\n    //set t"]],"start1":5553,"start2":5553,"length1":28,"length2":24},{"diffs":[[0,"nLength;\n    };\n"],[-1,"    "],[1,""],[0,"\n    //deincreme"]],"start1":5670,"start2":5670,"length1":36,"length2":32},{"diffs":[[0,"leShips\n"],[-1,"    "],[1,""],[0,"\n    // "]],"start1":7110,"start2":7110,"length1":20,"length2":16},{"diffs":[[0,"tGrid = [];\n"],[-1,"    "],[1,""],[0,"\n    //a his"]],"start1":7302,"start2":7302,"length1":28,"length2":24},{"diffs":[[0,"story = [];\n"],[-1,"    "],[1,""],[0,"\n    //an ar"]],"start1":7412,"start2":7412,"length1":28,"length2":24},{"diffs":[[0,"s = [];\n"],[-1,"    "],[1,""],[0,"\n    //W"]],"start1":7513,"start2":7513,"length1":20,"length2":16},{"diffs":[[0,"= true;\n"],[-1,"    "],[1,""],[0,"\n    //t"]],"start1":7593,"start2":7593,"length1":20,"length2":16},{"diffs":[[0,"er = 0;\n"],[-1,"    "],[1,""],[0,"\n    //f"]],"start1":7744,"start2":7744,"length1":20,"length2":16},{"diffs":[[0,"    else"],[-1," "],[1,""],[0,"\n       "]],"start1":8217,"start2":8217,"length1":17,"length2":16},{"diffs":[[0,"   }\n    };\n"],[-1,"    "],[1,""],[0,"\n    //place"]],"start1":8409,"start2":8409,"length1":28,"length2":24},{"diffs":[[0,"rtx;"],[-1,"\n        ship.starty = starty;\n        ship.isVertical = isVertical;\n        "],[1," //store the starting x location of the ship\n        ship.starty = starty; //store the starting y location of the ship\n        ship.isVertical = isVertical; //store if the ship is vertical or not\n"],[0,"\n   "]],"start1":8647,"start2":8647,"length1":85,"length2":204},{"diffs":[[0,"p(ship)\n"],[-1,"        "],[1,""],[0,"\n       "]],"start1":8938,"start2":8938,"length1":24,"length2":16},{"diffs":[[0,"       }\n    };\n"],[-1,"    "],[1,""],[0,"\n    //return th"]],"start1":9546,"start2":9546,"length1":36,"length2":32},{"diffs":[[0," };\n"],[1,"\n"],[0,"    "],[-1,"\n    //return the shot types that are available\n    this.getAvailableShots = function() {};\n    "],[1,"//return the shot types that are available for the current player\n    this.getAvailableShots = function()\n    {\n\n        var availableShots = [];\n        var i = 0;\n        //get the first player's available shots\n        if (this.isFirstPlayer)\n        {\n            for (var j = 0; j < this.player1Ships.length; j++)\n            {\n                var ship = this.player1Ships[j];\n                for (var k = 0; k < ship.shots.length; k++)\n                {\n                    var shot = ship.shots[k];\n                    if (shot.isAvailable());\n                    {\n                        availableShots[i++] = shot;\n                    }\n                }\n            }\n        }\n        //get the second player's available shots\n        else\n        {\n            for (var j = 0; j < this.player2Ships.length; j++)\n            {\n                var ship = this.player2Ships[j];\n                for (var k = 0; k < ship.shots.length; k++)\n                {\n                    var shot = ship.shots[k];\n                    if (shot.cooldownTimer === 0)\n                    {\n                        availableShots[i++] = shot;\n                    }\n                }\n            }\n        }\n        return availableShots;\n    };\n\n    //get the ships available for the current player\n    this.getPlayerShips = function()\n    {\n        if (this.isFirstPlayer)\n        {\n            return this.player1Ships;\n        }\n        else\n        {\n            return this.player2Ships;\n        }\n    }\n"],[0,"\n   "]],"start1":9769,"start2":9769,"length1":108,"length2":1515},{"diffs":[[0,"on()"],[-1," {};"],[1,"\n    {\n"],[0,"\n    "],[1,"};\n"],[0,"\n   "]],"start1":11366,"start2":11366,"length1":17,"length2":23},{"diffs":[[0,"id);\n    };\n"],[-1,"    "],[1,""],[0,"\n    /**\n   "]],"start1":11606,"start2":11606,"length1":28,"length2":24},{"diffs":[[0,"id);\n    };\n"],[-1,"    "],[1,""],[0,"\n    //clear"]],"start1":11838,"start2":11838,"length1":28,"length2":24},{"diffs":[[0,"    };\n    \n"],[1,"    this.isGameOver = function()\n    {\n        \n    }\n\n"],[0,"    //return"]],"start1":12126,"start2":12126,"length1":24,"length2":79},{"diffs":[[0,"ips;\n    };\n"],[-1,"    "],[1,""],[0,"\n    //trigg"]],"start1":12548,"start2":12548,"length1":28,"length2":24},{"diffs":[[0,"ayer)\n        {\n"],[1,"            //decrement all shot timers for current players ships\n"],[0,"            decS"]],"start1":12697,"start2":12697,"length1":32,"length2":98},{"diffs":[[0,".player1Ships);\n"],[1,"            this.turnCounter++;\n"],[0,"            this"]],"start1":12813,"start2":12813,"length1":32,"length2":64},{"diffs":[[0,"    //ch"],[-1,"ec"],[1,"a"],[0,"nge to f"]],"start1":12915,"start2":12915,"length1":18,"length2":17},{"diffs":[[0,"       {"],[-1," "],[1,""],[0,"\n       "]],"start1":12989,"start2":12989,"length1":17,"length2":16},{"diffs":[[0,"e();\n    };\n"],[-1,"    "],[1,""],[0,"\n    //This "]],"start1":13198,"start2":13198,"length1":28,"length2":24},{"diffs":[[0,"unction()\n    {\n"],[1,"        //indicate that the engine was retrieved from sessionStorage\n        this.fromStorage = true;\n"],[0,"        sessionS"]],"start1":13307,"start2":13307,"length1":32,"length2":134},{"diffs":[[0,"this)\n    }\n"],[-1,"    "],[1,""],[0,"\n    //clear"]],"start1":13520,"start2":13520,"length1":28,"length2":24},{"diffs":[[0,"    "],[-1,"sessionStorage.gameStateSaved"],[1,"this.fromStorage"],[0," = "],[-1,"\""],[0,"false"],[-1,"\""],[0,";\n  "]],"start1":13613,"start2":13613,"length1":47,"length2":32},{"diffs":[[0,"age."],[-1,"gameEngine = \"\";"],[1,"clear(); //clear session storage"],[0,"\n   "]],"start1":13662,"start2":13662,"length1":24,"length2":40},{"diffs":[[0,"();\n"],[1,"\n"],[0,"    "],[-1,"\n    //TODO: This is test code. Remove me when this is properly implemented //\n    //initialize the starting arrays with nothing of size 10x10\n    newEngine.player1ShipGrid = createEmptyGridArray(10);\n"],[1,"//Here I will check the local storage for previous game data and load it if found\n    //check if there is any current game state stored\n    if (sessionStorage.gameStateSaved && sessionStorage.gameStateSaved === \"true\")\n    {\n        //TODO: Remove me later, I am test code\n        alert(\"Found session data to load from\");\n\n        //get saved state\n        var savedState = sessionStorage.getObject(\"gameEngine\");\n\n        //set engine variables from saved state\n        newEngine.isFirstPlayer = savedState.isFirstPlayer;\n        newEngine.isModeOne = savedState.isModeOne;\n        newEngine.numberOfPlayers = savedState.numberOfPlayers;\n        newEngine.turnCounter = savedState.turnCounter;\n        newEngine.fromStorage = savedState.fromStorage;\n\n        //copy shot histories over\n        newEngine.player1ShotHistory = savedState.player1ShotHistory;\n    "],[0,"    "]],"start1":14157,"start2":14157,"length1":213,"length2":875},{"diffs":[[0,"ayer"],[-1,"1"],[1,"2"],[0,"Shot"],[-1,"Grid = createEmptyGridArray(10);\n"],[1,"History = savedState.player2ShotHistory;\n\n        //copy shot grids\n    "],[0,"    "]],"start1":15044,"start2":15044,"length1":46,"length2":85},{"diffs":[[0,"ayer"],[-1,"2Ship"],[1,"1Shot"],[0,"Grid = "],[-1,"createEmptyGridArray(10);\n"],[1,"savedState.player1ShotGrid;\n    "],[0,"    "]],"start1":15141,"start2":15141,"length1":46,"length2":52},{"diffs":[[0,"d = "],[-1,"createEmptyGridArray(10);"],[1,"savedState.player2ShotGrid;\n"],[0,"\n    "],[-1,"\n"],[0,"    //"],[-1,"load the mode 1 ships\n    newEngine.loadShips(mode1Ships());\n    var ships = newEngine.getAvailableShips();\n    \n    //place ships for player 1\n    newEngine.placeShip(0, 0, false, ships[0]);\n    newEngine.placeShip(0, 1, true, ships[1]);\n    newEngine.placeShip(5, 4, true, ships[2]);\n    newEngine.placeShip(2, 7, false, ships[3]);\n    newEngine.placeShip(8, 7, true, ships[4]);\n    \n    //change to the second player\n    newEngine.changePlayers();\n    //place ships for player 2\n    newEngine.placeShip(1, 0, false, ships[0]);\n    newEngine.placeShip(0, 2, true, ships[1]);\n    newEngine.placeShip(6, 4, true, ships[2]);\n    newEngine.placeShip(2, 8, false, ships[3]);\n    newEngine.placeShip(9, 8, true, ships[4]);\n    \n    //change back to player 1\n    newEngine.changePlayers();\n    \n    //Here I will check the local storage for previous game data and load it if found\n    //check if there is any current game state stored\n    if (sessionStorage.gameStateSaved)\n    {\n        //only load state if the value is true\n        if (sessionStorage.gameStateSaved === \"true\")\n        {\n    \n    //TODO: Load Ships from local storage\n    \n    //TODO: synchronize loaded ships with grids\n        }\n    "],[1,"copy the ship grids which will be updated further down\n        newEngine.player1ShipGrid = savedState.player1ShipGrid;\n        newEngine.player2ShipGrid = savedState.player2ShipGrid;\n\n        //initialize with the proper ships and shots\n        newEngine.selectGameMode(newEngine.numberOfPlayers, newEngine.isModeOne);\n\n        //create mapping of available ships to be used for populating player listings\n        var availableShipsClone = newEngine.getAvailableShips();\n        var availableShipsMap = new Object();\n        for (var j = 0; j < availableShipsClone.length; j++)\n        {\n            var availableShip = availableShipsClone[j];\n            availableShipsMap[availableShip.name] = availableShip;\n        }\n\n        //synchronize loaded ship and shot info with engine, then place ships\n        //process: load player 1 ship array from saved state\n        newEngine.isFirstPlayer = true;\n        for (var i = 0; i < savedState.player1Ships.length; i++)\n        {\n            //first player ship that is missing shot functions\n            var oldShip = savedState.player1Ships[i];\n\n            //then clone a ship of the appropriate type from the available ships\n            var newShip = cloneShip(availableShipsMap[oldShip.name]);\n\n            //then populate the correct damage and shot data\n            newShip.damage = oldShip.damage;\n            newShip.isVertical = oldShip.isVertical;\n            newShip.startx = oldShip.startx;\n            newShip.starty = oldShip.starty;\n\n            //then copy all the shot data\n            for (var k = 0; k < newShip.shots.length; k++)\n            {\n                newShip.shots[k].cooldownLength = oldShip.shots[k].cooldownLength;\n                newShip.shots[k].cooldownTimer = oldShip.shots[k].cooldownTimer;\n            }\n\n            //then place it on the board\n            newEngine.placeShip(newShip.startx, newShip.starty, newShip.isVertical, newShip);\n        }\n\n        //same for player 2\n        newEngine.isFirstPlayer = false;\n        for (var i = 0; i < savedState.player2Ships.length; i++)\n        {\n            //first player ship that is missing shot functions\n            var oldShip = savedState.player2Ships[i];\n\n            //then clone a ship of the appropriate type from the available ships\n            var newShip = cloneShip(availableShipsMap[oldShip.name]);\n\n            //then populate the correct damage and shot data\n            newShip.damage = oldShip.damage;\n            newShip.isVertical = oldShip.isVertical;\n            newShip.startx = oldShip.startx;\n            newShip.starty = oldShip.starty;\n\n            //then copy all the shot data\n            for (var k = 0; k < newShip.shots.length; k++)\n            {\n                newShip.shots[k].cooldownLength = oldShip.shots[k].cooldownLength;\n                newShip.shots[k].cooldownTimer = oldShip.shots[k].cooldownTimer;\n            }\n\n            //then place it on the board\n            newEngine.placeShip(newShip.startx, newShip.starty, newShip.isVertical, newShip);\n        }\n\n        //change back to the correct player we loaded from\n        newEngine.isFirstPlayer = savedState.isFirstPlayer;\n    }\n    else\n    {\n        //initialize the starting arrays with nothing of size 10x10\n        newEngine.player1ShipGrid = createEmptyGridArray(10);\n        newEngine.player1ShotGrid = createEmptyGridArray(10);\n        newEngine.player2ShipGrid = createEmptyGridArray(10);\n        newEngine.player2ShotGrid = createEmptyGridArray(10);"],[0,"\n   "]],"start1":15217,"start2":15217,"length1":1245,"length2":3542},{"diffs":[[0,"ode "],[-1,"2 ships\n    if (modeOne)\n    {\n        this.loadShips = mode1Ships();\n        this.isModeOne = true;\n    }\n    //load mode 1 ships and set booleans\n    else\n    {\n        this.loadShips = mode2Ships();\n        this.isModeOne = false"],[1,"1 ships and set booleans\n    if (modeOne)\n    {\n        this.loadShips(mode1Ships());\n        //Watch value for the current mode\n        this.isModeOne = true;\n    }\n    //load mode 2 ships and set booleans\n    else\n    {\n        this.loadShips(mode2Ships());\n        this.isModeOne = false;\n    }\n\n    //initialize the AI as player 2\n    if (numberOfPlayers == 1)\n    {\n        this.numberOfPlayers = 1;\n    }\n    else if (numberOfPlayers == 2)\n    {\n        this.numberOfPlayers = 2;\n    }\n    else\n    {\n        alert(\"Invalid number of players: \" + numberOfPlayers)"],[0,";\n  "]],"start1":19504,"start2":19504,"length1":240,"length2":577},{"diffs":[[0,"       }\n    };\n"],[-1,"    "],[1,""],[0,"\n    //define th"]],"start1":20986,"start2":20986,"length1":36,"length2":32},{"diffs":[[0,"larShot\n        "],[-1,"    "],[1,""],[0,")\n        ),\n   "]],"start1":21182,"start2":21182,"length1":36,"length2":32},{"diffs":[[0,"larShot\n        "],[-1,"    "],[1,""],[0,")\n        ),\n   "]],"start1":21272,"start2":21272,"length1":36,"length2":32},{"diffs":[[0,"larShot\n        "],[-1,"    "],[1,""],[0,")\n        ),\n   "]],"start1":21359,"start2":21359,"length1":36,"length2":32},{"diffs":[[0,"larShot\n        "],[-1,"    "],[1,""],[0,")\n        ),\n   "]],"start1":21448,"start2":21448,"length1":36,"length2":32},{"diffs":[[0,"larShot\n        "],[-1,"    "],[1,""],[0,")\n        )\n    "]],"start1":21537,"start2":21537,"length1":36,"length2":32},{"diffs":[[0,"   }\n    };\n"],[-1,"    "],[1,""],[0,"\n    //defin"]],"start1":22476,"start2":22476,"length1":28,"length2":24},{"diffs":[[0,"l shots\n"],[-1,"    "],[1,""],[0,"\n    //d"]],"start1":22508,"start2":22508,"length1":20,"length2":16},{"diffs":[[0,"larShot\n        "],[-1,"    "],[1,""],[0,")\n        ),\n   "]],"start1":22696,"start2":22696,"length1":36,"length2":32},{"diffs":[[0,"larShot\n        "],[-1,"    "],[1,""],[0,")\n        ),\n   "]],"start1":22786,"start2":22786,"length1":36,"length2":32},{"diffs":[[0,"larShot\n        "],[-1,"    "],[1,""],[0,")\n        ),\n   "]],"start1":22873,"start2":22873,"length1":36,"length2":32},{"diffs":[[0,"larShot\n        "],[-1,"    "],[1,""],[0,")\n        ),\n   "]],"start1":22962,"start2":22962,"length1":36,"length2":32},{"diffs":[[0,"hot\n        "],[-1,"    "],[1,""],[0,")\n        )\n"]],"start1":23055,"start2":23055,"length1":28,"length2":24},{"diffs":[[0,"e found\n"],[-1," "],[1,""],[0,"function"]],"start1":23594,"start2":23594,"length1":17,"length2":16},{"diffs":[[0,";\n\n\n"],[-1,"/**\n *   once ship is hit we search for orientation. We limit shots to cells within the grid which are affected by fog of war.\n *\n * //While a ship is hit but not sunk we check one cell north of it\n *   if (y-1 > 0 and [x][y-1] == 0)\n *      {\n *      fireNorth();\n *      }\n *\n *   else if (x+1 < 10 and [x+1][y] == 0)\n *      {\n *      fireEast();\n *      }\n *\n *   else if (x-1 > 0 and [x-1][y] == 0)\n *      {\n *      fireSouth();\n *      }\n *\n *   else if (y+1 < 10 and [x][y+1] == 0)\n"],[1,"    /**\n     *   once ship is hit we search for orientation. We limit shots to cells within the grid which are affected by fog of war.\n     *\n     * //While a ship is hit but not sunk we check one cell north of it\n     *   if (y-1 > 0 and [x][y-1] == 0)\n     *      {\n *      fireNorth();\n *      }\n     *\n     *   else if (x+1 < 10 and [x+1][y] == 0)\n     *      {\n *      fireEast();\n *      }\n     *\n     *   else if (x-1 > 0 and [x-1][y] == 0)\n     *      {\n *      fireSouth();\n *      }\n     *\n     *   else if (y+1 < 10 and [x][y+1] == 0)\n    "],[0," *  "]],"start1":24616,"start2":24616,"length1":498,"length2":558},{"diffs":[[0,"      }\n"],[1,"     "],[0,"*/\n// TO"]],"start1":25202,"start2":25202,"length1":16,"length2":21}]],"length":25756,"saved":false}
{"ts":1354313316528,"patch":[[{"diffs":[[0,"  {\n        "],[1,"//check if the current player has no ships"],[0,"\n    }\n\n    "]],"start1":12173,"start2":12173,"length1":24,"length2":66}]],"length":25798,"saved":false}
{"ts":1354313334107,"patch":[[{"diffs":[[0,"as no ships\n"],[1,"        if (this.isFirstPlayer)\n        {\n            \n        }\n        else\n        {\n            \n        }\n"],[0,"    }\n\n    /"]],"start1":12216,"start2":12216,"length1":24,"length2":135}]],"length":25909,"saved":false}
{"ts":1354313355396,"patch":[[{"diffs":[[0,"as no ships\n"],[1,"        //check first players ship\n"],[0,"        if ("]],"start1":12216,"start2":12216,"length1":24,"length2":59}]],"length":25944,"saved":false}
{"ts":1354313385372,"patch":[[{"diffs":[[0,"     \n        }\n"],[1,"        //check second players ship\n"],[0,"        else\n   "]],"start1":12312,"start2":12312,"length1":32,"length2":68}]],"length":25980,"saved":false}
{"ts":1354313632777,"patch":[[{"diffs":[[0,"  {\n            "],[1,"var i = 0;\n            while (i < player1Ships.length)\n            {\n                \n            }"],[0,"\n        }\n     "]],"start1":12301,"start2":12301,"length1":32,"length2":131}]],"length":26079,"saved":false}
{"ts":1354313634925,"patch":[[{"diffs":[[0,"                "],[1,"i++;"],[0,"\n            }\n "]],"start1":12386,"start2":12386,"length1":32,"length2":36}]],"length":26083,"saved":false}
{"ts":1354313647999,"patch":[[{"diffs":[[0,")\n            {\n"],[1,"                \n"],[0,"                "]],"start1":12370,"start2":12370,"length1":32,"length2":49},{"diffs":[[0,";\n            }\n"],[1,"            return true;\n"],[0,"        }\n      "]],"start1":12422,"start2":12422,"length1":32,"length2":57},{"diffs":[[0,"//////\n\n"],[1,"function"],[0,"\n\n//We g"]],"start1":23529,"start2":23529,"length1":16,"length2":24}]],"length":26133,"saved":false}
{"ts":1354313700430,"patch":[[{"diffs":[[0,"                "],[1,"if (!player1Ships[i].isDestroyed())\n                {\n                    return false;\n                }"],[0,"\n               "]],"start1":12386,"start2":12386,"length1":32,"length2":137},{"diffs":[[0,"function"],[1," firingLogic()\n{"],[0,"\n\n//We g"]],"start1":23642,"start2":23642,"length1":16,"length2":32},{"diffs":[[0,"e found\n"],[-1,"function"],[0," hunting"]],"start1":24092,"start2":24092,"length1":24,"length2":16},{"diffs":[[0," huntingShot"],[1," = function"],[0,"()\n{\n    //W"]],"start1":24100,"start2":24100,"length1":24,"length2":35},{"diffs":[[0,"t();\n}\n\n"],[1,"}"],[0,"\n\n//////"]],"start1":25976,"start2":25976,"length1":16,"length2":17}]],"length":26258,"saved":false}
{"ts":1354313710230,"patch":[[{"diffs":[[0,"le (i < "],[1,"this."],[0,"player1S"]],"start1":12343,"start2":12343,"length1":16,"length2":21},{"diffs":[[0,"   if (!"],[1,"this."],[0,"player1S"]],"start1":12404,"start2":12404,"length1":16,"length2":21}]],"length":26268,"saved":false}
{"ts":1354313729825,"patch":[[{"diffs":[[0,")\n            {\n"],[1,"                //if one ship isn't destroyed then the the game is still going\n"],[0,"                "]],"start1":12375,"start2":12375,"length1":32,"length2":111},{"diffs":[[0,"hips\n\n\n}"],[1,";"],[0,"\n\n//meth"]],"start1":24739,"start2":24739,"length1":16,"length2":17}]],"length":26348,"saved":false}
{"ts":1354313744337,"patch":[[{"diffs":[[0,"            "],[1,"var i = 0;\n            while (i < this.player2Ships.length)\n            {\n                //if one ship isn't destroyed then the the game is still going\n                if (!this.player2Ships[i].isDestroyed())\n                {\n                    return false;\n                }\n                i++;\n            }\n            return true;"],[0,"\n        }\n "]],"start1":12726,"start2":12726,"length1":24,"length2":363},{"diffs":[[0," found\n "],[1,"firingL"],[0,"huntingS"]],"start1":24521,"start2":24521,"length1":16,"length2":23}]],"length":26694,"saved":false}
{"ts":1354313752242,"patch":[[{"diffs":[[0," found\n "],[-1,"firingL"],[0,"huntingS"]],"start1":24521,"start2":24521,"length1":23,"length2":16}]],"length":26687,"saved":false}
{"ts":1354313756851,"patch":[[{"diffs":[[0,"};\n    \n"],[1,"    //\n"],[0,"    this"]],"start1":12130,"start2":12130,"length1":16,"length2":23}]],"length":26694,"saved":false}
{"ts":1354313772618,"patch":[[{"diffs":[[0," \n    //"],[1,"returns true if the current player has no ships left"],[0,"\n    thi"]],"start1":12136,"start2":12136,"length1":16,"length2":68}]],"length":26746,"saved":false}
{"ts":1354313967312,"patch":[[{"diffs":[[0,"    "],[-1,"alert(\"Cell already targeted\");"],[1,"return ShotMessages[shotGrid[x][y]]"],[0,"\n   "]],"start1":23077,"start2":23077,"length1":39,"length2":43},{"diffs":[[0,"e found\n"],[-1," "],[1,"this."],[0,"huntingS"]],"start1":24583,"start2":24583,"length1":17,"length2":21},{"diffs":[[0,"ng shot\n"],[-1,"function "],[1,"this."],[0,"killingS"]],"start1":25214,"start2":25214,"length1":25,"length2":21},{"diffs":[[0,"lingShot"],[1," = function"],[0,"()\n{\n//C"]],"start1":25230,"start2":25230,"length1":16,"length2":27},{"diffs":[[0,"shots.\n}"],[-1,""],[0,""],[1,";"],[0,"\n\n\n//As "]],"start1":26319,"start2":26319,"length1":16,"length2":17},{"diffs":[[0,"ts\n\nif ("],[1,"this."],[0,"huntingS"]],"start1":26395,"start2":26395,"length1":16,"length2":21},{"diffs":[[0,")\n{\n    "],[1,"this."],[0,"huntingS"]],"start1":26439,"start2":26439,"length1":16,"length2":21},{"diffs":[[0,"e\n{\n    "],[1,"this."],[0,"killingS"]],"start1":26472,"start2":26472,"length1":16,"length2":21}]],"length":26777,"saved":false}
{"ts":1354313980837,"patch":[[{"diffs":[[0,"== 2)\n        {\n"],[1,"            //return \n"],[0,"            retu"]],"start1":23053,"start2":23053,"length1":32,"length2":54}]],"length":26799,"saved":false}
{"ts":1354313994238,"patch":[[{"diffs":[[0,"== 0)\n        {\n"],[1,"            //\n"],[0,"            shot"]],"start1":23193,"start2":23193,"length1":32,"length2":47},{"diffs":[[0,"== 0)\n        {\n"],[1,"            //\n"],[0,"            targ"]],"start1":23346,"start2":23346,"length1":32,"length2":47}]],"length":26829,"saved":false}
{"ts":1354314005893,"patch":[[{"diffs":[[0,"    "],[-1,"alert(\"Cell already targeted\");"],[1,"return ShotMessages[shotGrid[x][y]]"],[0,"\n   "]],"start1":21591,"start2":21591,"length1":39,"length2":43}]],"length":26833,"saved":false}
{"ts":1354314008142,"patch":[[{"diffs":[[0,"[shotGrid[x][y]]"],[1,";"],[0,"\n        }\n     "]],"start1":21614,"start2":21614,"length1":32,"length2":33}]],"length":26834,"saved":false}
{"ts":1354314012530,"patch":[[{"diffs":[[0,"d[x][y]]"],[1,";"],[0,"\n       "]],"start1":23135,"start2":23135,"length1":16,"length2":17}]],"length":26835,"saved":false}
{"ts":1354314063379,"patch":[[{"diffs":[[0,"/return "],[1,"the value for the existing cell"],[0,"\n       "]],"start1":23087,"start2":23087,"length1":16,"length2":47}]],"length":26866,"saved":false}
{"ts":1354314071166,"patch":[[{"diffs":[[0,"urn the "],[1,"message for the "],[0,"value fo"]],"start1":23091,"start2":23091,"length1":16,"length2":32}]],"length":26882,"saved":false}
{"ts":1354314099696,"patch":[[{"diffs":[[0,"ay(\n            "],[1,"    "],[0,"regularShot\n    "]],"start1":22483,"start2":22483,"length1":32,"length2":36},{"diffs":[[0,"    regularShot\n"],[1,"    "],[0,"        )\n      "]],"start1":22499,"start2":22499,"length1":32,"length2":36}]],"length":26890,"saved":false}
{"ts":1354314108974,"patch":[[{"diffs":[[0,"ay(\n            "],[1,"    "],[0,"regularShot\n    "]],"start1":22128,"start2":22128,"length1":32,"length2":36},{"diffs":[[0,"    regularShot\n"],[1,"    "],[0,"        )\n      "]],"start1":22144,"start2":22144,"length1":32,"length2":36},{"diffs":[[0,"ay(\n            "],[1,"    "],[0,"regularShot\n    "]],"start1":22226,"start2":22226,"length1":32,"length2":36},{"diffs":[[0,"    regularShot\n"],[1,"    "],[0,"        )\n      "]],"start1":22242,"start2":22242,"length1":32,"length2":36},{"diffs":[[0,"ay(\n            "],[1,"    "],[0,"regularShot\n    "]],"start1":22321,"start2":22321,"length1":32,"length2":36},{"diffs":[[0,"    regularShot\n"],[1,"    "],[0,"        )\n      "]],"start1":22337,"start2":22337,"length1":32,"length2":36},{"diffs":[[0,"ay(\n            "],[1,"    "],[0,"regularShot\n    "]],"start1":22418,"start2":22418,"length1":32,"length2":36},{"diffs":[[0,"    regularShot\n"],[1,"    "],[0,"        )\n      "]],"start1":22434,"start2":22434,"length1":32,"length2":36}]],"length":26922,"saved":false}
{"ts":1354314130993,"patch":[[{"diffs":[[0,"ay(\n            "],[1,"    "],[0,"regularShot\n    "]],"start1":23786,"start2":23786,"length1":32,"length2":36},{"diffs":[[0,"    regularShot\n"],[1,"    "],[0,"        )\n      "]],"start1":23802,"start2":23802,"length1":32,"length2":36},{"diffs":[[0,"ay(\n            "],[1,"    "],[0,"regularShot\n    "]],"start1":23884,"start2":23884,"length1":32,"length2":36},{"diffs":[[0,"    regularShot\n"],[1,"    "],[0,"        )\n      "]],"start1":23900,"start2":23900,"length1":32,"length2":36},{"diffs":[[0,"ay(\n            "],[1,"    "],[0,"regularShot\n    "]],"start1":23979,"start2":23979,"length1":32,"length2":36},{"diffs":[[0,"    regularShot\n"],[1,"    "],[0,"        )\n      "]],"start1":23995,"start2":23995,"length1":32,"length2":36},{"diffs":[[0,"ay(\n            "],[1,"    "],[0,"regularShot\n    "]],"start1":24076,"start2":24076,"length1":32,"length2":36},{"diffs":[[0,"    regularShot\n"],[1,"    "],[0,"        )\n      "]],"start1":24092,"start2":24092,"length1":32,"length2":36},{"diffs":[[0,"ay(\n            "],[1,"    "],[0,"regularShot\n    "]],"start1":24173,"start2":24173,"length1":32,"length2":36},{"diffs":[[0,"    regularShot\n"],[1,"    "],[0,"        )\n      "]],"start1":24189,"start2":24189,"length1":32,"length2":36}]],"length":26962,"saved":false}
{"ts":1354314514349,"patch":[[{"diffs":[[0,"        }\n    };"],[1,"\n    \n    \n    "],[0,"\n\n    //define s"]],"start1":23581,"start2":23581,"length1":32,"length2":47},{"diffs":[[0,"e ships in mode "],[-1,"1"],[1,"2"],[0,". This array of "]],"start1":23657,"start2":23657,"length1":33,"length2":33},{"diffs":[[0,"        "],[-1,"new Ship(\"Carrier"],[1,"//carrier\n        new Ship(\"Stardust Goliath"],[0,"\", 5, ne"]],"start1":23763,"start2":23763,"length1":33,"length2":60},{"diffs":[[0,"   )\n        ),\n"],[1,"        //battleship\n"],[0,"        new Ship"]],"start1":23869,"start2":23869,"length1":32,"length2":53},{"diffs":[[0,"   )\n        ),\n"],[1,"        //cruiser\n"],[0,"        new Ship"]],"start1":23988,"start2":23988,"length1":32,"length2":50},{"diffs":[[0,"   )\n        ),\n"],[1,"        //submarine\n"],[0,"        new Ship"]],"start1":24101,"start2":24101,"length1":32,"length2":52},{"diffs":[[0,"    )\n        ),"],[-1,""],[0,""],[1,"\n        //destroyer"],[0,"\n        new Shi"]],"start1":24217,"start2":24217,"length1":32,"length2":52}]],"length":27083,"saved":false}
{"ts":1354314524903,"patch":[[{"diffs":[[0,"  new Ship(\""],[-1,"Battleship"],[1,"Galaxy Ravager"],[0,"\", 4, new Ar"]],"start1":23912,"start2":23912,"length1":34,"length2":38}]],"length":27087,"saved":false}
{"ts":1354314534763,"patch":[[{"diffs":[[0,"      new Ship(\""],[-1,"Cruis"],[1,"Scrap Harvest"],[0,"er\", 3, new Arra"]],"start1":24028,"start2":24028,"length1":37,"length2":45}]],"length":27095,"saved":false}
{"ts":1354314554533,"patch":[[{"diffs":[[0," new Ship(\"S"],[-1,"ubmarine"],[1,"tar Destroyer"],[0,"\", 3, new Ar"]],"start1":24156,"start2":24156,"length1":32,"length2":37},{"diffs":[[0,"  new Ship(\""],[-1,"Destroye"],[1,"Intercepto"],[0,"r\", 2, new A"]],"start1":24277,"start2":24277,"length1":32,"length2":34}]],"length":27102,"saved":false}
{"ts":1354314764455,"patch":[[{"diffs":[[0,"   \n"],[-1,"    \n\n"],[0,"    "]],"start1":23604,"start2":23604,"length1":14,"length2":8},{"diffs":[[0,"al shots"],[1,"\n    "],[0,"\n\n    //"]],"start1":23626,"start2":23626,"length1":16,"length2":21}]],"length":27101,"saved":false}
{"ts":1354314799744,"patch":[[{"diffs":[[0,"ots\n    "],[1,"var goliathShot = new Shot(\"Photon Bomb Run\", 1);"],[0,"\n\n    //"]],"start1":23631,"start2":23631,"length1":16,"length2":65}]],"length":27150,"saved":false}
{"ts":1354314808901,"patch":[[{"diffs":[[0,"b Run\", "],[-1,"1"],[1,"8"],[0,");\n\n    "]],"start1":23677,"start2":23677,"length1":17,"length2":17}]],"length":27150,"saved":false}
{"ts":1354314895626,"patch":[[{"diffs":[[0,"un\", 8);"],[1,"\n    \n    var ravagerShot = new Shot(\"Black Hole\", 12);\n    \n    var harvesterShot = new Shot(\"Scrap Radar\", 6);\n    \n    var goliathShot = new Shot(\"Photon Bomb Run\", 8);\n    \n    var goliathShot = new Shot(\"Photon Bomb Run\", 8);"],[0,"\n\n    //"]],"start1":23680,"start2":23680,"length1":16,"length2":246}]],"length":27380,"saved":false}
{"ts":1354314959278,"patch":[[{"diffs":[[0,");\n    \n    var "],[-1,"goliath"],[1,"destroyer"],[0,"Shot = new Shot("]],"start1":23798,"start2":23798,"length1":39,"length2":41},{"diffs":[[0," Shot(\"P"],[-1,"hoton Bomb Run\", 8"],[1,"lasma Salvo\", 4"],[0,");\n    \n"]],"start1":23833,"start2":23833,"length1":34,"length2":31}]],"length":27379,"saved":false}
{"ts":1354314981795,"patch":[[{"diffs":[[0,");\n    \n    var "],[-1,"goliath"],[1,"interceptor"],[0,"Shot = new Shot("]],"start1":23856,"start2":23856,"length1":39,"length2":43},{"diffs":[[0,"= new Shot(\""],[-1,"Photon Bomb Run"],[1,"Homing Missile"],[0,"\", 8);\n\n    "]],"start1":23888,"start2":23888,"length1":39,"length2":38}]],"length":27382,"saved":false}
{"ts":1354315051398,"patch":[[{"diffs":[[0,"ssile\", "],[-1,"8"],[1,"6"],[0,");\n\n    "]],"start1":23909,"start2":23909,"length1":17,"length2":17}]],"length":27382,"saved":false}
{"ts":1354315076120,"patch":[[{"diffs":[[0,"ecial shots\n"],[1,"    //Carrier Special Shot\n"],[0,"    var goli"]],"start1":23623,"start2":23623,"length1":24,"length2":51},{"diffs":[[0," Run\", 8);\n    \n"],[1,"    //Battleship Special Shot\n"],[0,"    var ravagerS"]],"start1":23705,"start2":23705,"length1":32,"length2":62},{"diffs":[[0,"\", 12);\n    "],[-1,""],[0,""],[1,"\n    //Cruiser Special Shot"],[0,"\n    var har"]],"start1":23793,"start2":23793,"length1":24,"length2":51}]],"length":27466,"saved":false}
{"ts":1354315093625,"patch":[[{"diffs":[[0,"adar\", 6);\n    \n"],[1,"    //Submarine Special Shot\n"],[0,"    var destroye"]],"start1":23874,"start2":23874,"length1":32,"length2":61},{"diffs":[[0,"\", 4);\n    \n"],[1,"    //Interceptor Special Shot\n"],[0,"    var inte"]],"start1":23965,"start2":23965,"length1":24,"length2":55}]],"length":27526,"saved":false}
{"ts":1354315102443,"patch":[[{"diffs":[[0,"    regularShot\n"],[1,"                , goliathShot\n"],[0,"            )\n  "]],"start1":24268,"start2":24268,"length1":32,"length2":62}]],"length":27556,"saved":false}
{"ts":1354315112618,"patch":[[{"diffs":[[0,"    regularShot\n"],[1,"                , ravagerShot\n"],[0,"            )\n  "]],"start1":24421,"start2":24421,"length1":32,"length2":62}]],"length":27586,"saved":false}
{"ts":1354315119962,"patch":[[{"diffs":[[0,"    regularShot\n"],[1,"                , harvesterShot\n"],[0,"            )\n  "]],"start1":24572,"start2":24572,"length1":32,"length2":64}]],"length":27618,"saved":false}
{"ts":1354315125721,"patch":[[{"diffs":[[0,"    regularShot\n"],[1,"                , destroyerShot\n"],[0,"            )\n  "]],"start1":24726,"start2":24726,"length1":32,"length2":64}]],"length":27650,"saved":false}
{"ts":1354315132786,"patch":[[{"diffs":[[0,"    regularShot\n"],[1,"                , interceptorShot\n"],[0,"            )\n  "]],"start1":24877,"start2":24877,"length1":32,"length2":66}]],"length":27684,"saved":false}
{"ts":1354315212326,"patch":[[{"diffs":[[0,"    "],[-1,"\n    //Battleship Special Shot\n    var ravagerShot = new Shot(\"Black Hole\", 12);\n    \n    //Cruiser Special Shot\n    var harvesterShot = new Shot(\"Scrap Radar\", 6);\n    \n    //Submarine Special Shot\n    var destroyerShot = new Shot(\"Plasma Salvo\", 4);\n    \n    //Interceptor Special Shot\n    var interceptorShot = new Shot(\"Homing Missile\", 6);"],[1,"goliathShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        \n    }\n    \n    //Battleship Special Shot\n    var ravagerShot = new Shot(\"Black Hole\", 12);\n    ravagerShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        \n    }\n    \n    //Cruiser Special Shot\n    var harvesterShot = new Shot(\"Scrap Radar\", 6);\n    harvesterShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        \n    }\n    \n    //Submarine Special Shot\n    var destroyerShot = new Shot(\"Plasma Salvo\", 4);\n    destroyerShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        \n    }\n    \n    //Interceptor Special Shot\n    var interceptorShot = new Shot(\"Homing Missile\", 6);\n    interceptorShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        \n    }"],[0,"\n\n  "]],"start1":23716,"start2":23716,"length1":352,"length2":785},{"diffs":[[0,"    "],[-1,"//TODO  implement regularShot.fire in a searching pattern to locate enemy ships"],[0,"\n\n\n}"]],"start1":26406,"start2":26406,"length1":87,"length2":8}]],"length":28038,"saved":false}
{"ts":1354315224574,"patch":[[{"diffs":[[0,"{\n        \n    }"],[1,";"],[0,"\n"],[-1,""],[0,"    \n    //Battl"]],"start1":23784,"start2":23784,"length1":33,"length2":34},{"diffs":[[0,"{\n        \n    }"],[1,";"],[0,"\n    \n    //Crui"]],"start1":23955,"start2":23955,"length1":32,"length2":33},{"diffs":[[0,"{\n        \n    }"],[1,";"],[0,"\n    \n    //Subm"]],"start1":24127,"start2":24127,"length1":32,"length2":33},{"diffs":[[0,"      \n    }"],[1,";"],[0,"\n    \n    //"]],"start1":24306,"start2":24306,"length1":24,"length2":25},{"diffs":[[0,"       \n"],[-1,""],[0,"    }"],[1,";"],[0,"\n\n    //"]],"start1":24488,"start2":24488,"length1":21,"length2":22}]],"length":28043,"saved":false}
{"ts":1354315539004,"patch":[[{"diffs":[[0," mode2Ships()\n{\n"],[1,"    //Array of shot messages based on shot impact on the grid\n    // ShotMessages[0] = \"FogOfWar\";\n    // ShotMessages[1] = \"Miss\";\n    // ShotMessages[2] = \"Hit\";\n    // ShotMessages[3] = \"RevealMiss\";\n    // ShotMessages[4] = \"RevealHit\";\n    \n"],[0,"    //define a r"]],"start1":22650,"start2":22650,"length1":32,"length2":278},{"diffs":[[0," a regular shot\n"],[-1,""],[0,"    var regularS"]],"start1":22924,"start2":22924,"length1":32,"length2":32},{"diffs":[[0," //i"],[-1,"mplement a regular shot and how it interacts with the grid"],[1,"f the cell is already hit or miss"],[0,"\n   "]],"start1":23229,"start2":23229,"length1":66,"length2":41},{"diffs":[[0,"[y]];\n        }\n"],[1,"        //if the cell hasn't been shot \n"],[0,"        else if "]],"start1":23447,"start2":23447,"length1":32,"length2":72},{"diffs":[[0,")\n    {\n        "],[1,"//Shot hits 3 consecutive places. Player chooses a starting grid point\n        //and a direction? How will this be handled from input via UI?"],[0,"\n    };\n    \n   "]],"start1":24039,"start2":24039,"length1":32,"length2":173},{"diffs":[[0,")\n    {\n        "],[1,"//Shot hits in a central location and then hits one grid point\n        //in each direction up, right, down, left from chosen location"],[0,"\n    };\n    \n   "]],"start1":24351,"start2":24351,"length1":32,"length2":165},{"diffs":[[0,"Grid)\n    {\n"],[-1,""],[0,"        "],[1,"//Shot hits in a central location"],[0,"\n    };\n    "]],"start1":24652,"start2":24652,"length1":32,"length2":65}]],"length":28611,"saved":false}
{"ts":1354315571183,"patch":[[{"diffs":[[0,"ot hits "],[-1,"in a central location"],[0,"\n    };\n"]],"start1":24676,"start2":24676,"length1":37,"length2":16}]],"length":28590,"saved":false}
{"ts":1354315580199,"patch":[[{"diffs":[[0," //Shot "],[-1,"hit"],[1,"i"],[0,"s \n    }"]],"start1":24671,"start2":24671,"length1":19,"length2":17}]],"length":28588,"saved":false}
{"ts":1354315584813,"patch":[[{"diffs":[[0,"};\n    \n"],[-1,"    \n"],[0,"    //de"]],"start1":23856,"start2":23856,"length1":21,"length2":16},{"diffs":[[0,"Shot is "],[1,"fired a"],[0,"\n    };\n"]],"start1":24669,"start2":24669,"length1":16,"length2":23}]],"length":28590,"saved":false}
{"ts":1354315605715,"patch":[[{"diffs":[[0,"already "],[-1,"hit or miss"],[1,"miss or hit"],[0,"\n       "]],"start1":23247,"start2":23247,"length1":27,"length2":27},{"diffs":[[0," fired a"],[1,"t location and if it would be a hit, it reveals grid\n        //"],[0,"\n    };\n"]],"start1":24676,"start2":24676,"length1":16,"length2":79}]],"length":28653,"saved":false}
{"ts":1354315626809,"patch":[[{"diffs":[[0,"etShipGrid[x][y]"],[-1,".name"],[0," === 0)\n        "]],"start1":23524,"start2":23524,"length1":37,"length2":32},{"diffs":[[0,"d\n        //"],[1,"points to the up, right, down, left locations if they would be a hit\n        //or not as well"],[0,"\n    };\n    "]],"start1":24730,"start2":24730,"length1":24,"length2":117}]],"length":28741,"saved":false}
{"ts":1354315637129,"patch":[[{"diffs":[[0," as well"],[1,". Hits similar to B"],[0,"\n    };\n"]],"start1":24827,"start2":24827,"length1":16,"length2":35}]],"length":28760,"saved":false}
{"ts":1354315644994,"patch":[[{"diffs":[[0,"id[x][y]"],[-1,".name"],[0," === 0)\n"]],"start1":21671,"start2":21671,"length1":21,"length2":16},{"diffs":[[0,"lar to B"],[1,"lack Hole but hits as reveal hit or "],[0,"\n    };\n"]],"start1":24841,"start2":24841,"length1":16,"length2":52}]],"length":28791,"saved":false}
{"ts":1354315960060,"patch":[[{"diffs":[[0,"ocation\n"],[1,"        //if the cell is already miss or hit\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            //return the message for the value for the existing cell\n            return ShotMessages[shotGrid[x][y]];\n        }\n        //if the cell hasn't been shot \n        else if (targetShipGrid[x][y] === 0)\n        {\n            //\n            shotGrid[x][y] = 1;\n            return ShotMessages[1];\n        }\n        else if (targetShipGrid[x][y].name !== 0)\n        {\n            //\n            targetShipGrid[x][y].damage++;\n            shotGrid[x][y] = 2;\n            return ShotMessages[2];\n        }\n"],[0,"    };\n"],[-1,""],[0,"    \n   "]],"start1":24478,"start2":24478,"length1":23,"length2":648},{"diffs":[[0,"l hit or"],[-1," "],[1,"\n        //reveal miss instead of true hit or miss."],[0,"\n    };\n"]],"start1":25501,"start2":25501,"length1":17,"length2":67},{"diffs":[[0,")\n    {\n        "],[1,"//Player independently chooses 3 locations for \"regular\" shots    "],[0,"\n    };\n    \n   "]],"start1":25719,"start2":25719,"length1":32,"length2":98},{"diffs":[[0,")\n    {\n"],[-1,""],[0,"        "],[1,"//Player chooses a cell location. Spaces that have already been hit are\n        //invalid locations for homing missile to hit. Homing missile hits the\n        //\"closest\" grid space that would be a hit from chosen cell location"],[0,"\n    };\n"]],"start1":25968,"start2":25968,"length1":24,"length2":251}]],"length":29759,"saved":false}
{"contributors":["tylerj714@gmail.com","nerian.drew@gmail.com"],"silentsave":false,"ts":1354322897135,"patch":[[{"diffs":[[0,"ayer1ShotGrid);\n"],[1,"            if (message instanceof Array)\n            {\n                var i = 0;\n                while ( i < message.length )\n                {\n                    this.player1ShotHistory.push(\"player1: \" + x + \",\" + y + \" \" + message[i]);\n                    i++;\n                }\n            }\n            else\n            {\n    "],[0,"            this"]],"start1":8041,"start2":8041,"length1":32,"length2":366},{"diffs":[[0,"\" \" + message);\n"],[1,"            }\n"],[0,"        }\n      "]],"start1":8460,"start2":8460,"length1":32,"length2":46},{"diffs":[[0,"ayer2ShotGrid);\n"],[1,"            if (message instanceof Array)\n            {\n                var i = 0;\n                while ( i < message.length )\n                {\n                    this.player2ShotHistory.push(\"player2: \" + x + \",\" + y + \" \" + message[i]);\n                    i++;\n                }\n            }\n            else\n            {\n    "],[0,"            this"]],"start1":8651,"start2":8651,"length1":32,"length2":366},{"diffs":[[0,"\" \" + message);\n"],[1,"            }\n"],[0,"        }\n    };"]],"start1":9070,"start2":9070,"length1":32,"length2":46},{"diffs":[[0,"\n\n//"],[-1,"This defines all the ships available in mode 1 of the game\nfunction mode1Ships()\n{\n    //define a regular shot\n    var regularShot = new Shot(\"Regular Shot\", 1);\n    //because of the way cloning objects works in javascript, each shot object can only have the fire function, all logic for firing should be in this function.\n    regularShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //implement a regular shot and how it interacts with the grid\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {"],[1,"handle regular shots\nfunction fireGenericShot(x, y, targetShipGrid, shotGrid)\n{\n    //if the cell is already miss or hit\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            //return the message for the value for the existing cell"],[0,"\n   "]],"start1":21744,"start2":21744,"length1":538,"length2":265},{"diffs":[[0,"[y]];\n        }\n"],[1,"        //if there isn't a ship in the cell it is a miss\n"],[0,"        else if "]],"start1":22049,"start2":22049,"length1":32,"length2":89},{"diffs":[[0,"s[1];\n        }\n"],[1,"        // if it is a ship then it is a hit\n"],[0,"        else if "]],"start1":22239,"start2":22239,"length1":32,"length2":76},{"diffs":[[0,"etShipGrid[x][y]"],[-1,".name"],[0," !== 0)\n        "]],"start1":22320,"start2":22320,"length1":37,"length2":32},{"diffs":[[0,"== 0)\n        {\n"],[1,"            //\n"],[0,"            targ"]],"start1":22338,"start2":22338,"length1":32,"length2":47},{"diffs":[[0,"s[2];\n        }\n"],[1,"        else\n        {\n            //this shouldn't happen\n        }\n}\n\n//This defines all the ships available in mode 1 of the game\nfunction mode1Ships()\n{\n    //define a regular shot\n    var regularShot = new Shot(\"Regular Shot\", 1);\n    //because of the way cloning objects works in javascript, each shot object can only have the fire function, all logic for firing should be in this function.\n    regularShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        return fireGenericShot(x, y, targetShipGrid, shotGrid);\n"],[0,"    };\n\n    //de"]],"start1":22474,"start2":22474,"length1":32,"length2":563},{"diffs":[[0,"    "],[-1,"//if the cell is already miss or hit\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            //return the message for the value for the existing cell\n            return ShotMessages[shotGrid[x][y]];\n        }\n        //if the cell hasn't been shot \n        else if (targetShipGrid[x][y] === 0)\n        {\n            //\n            shotGrid[x][y] = 1;\n            return ShotMessages[1];\n        }\n        else if (targetShipGrid[x][y].name !== 0)\n        {\n            //\n            targetShipGrid[x][y].damage++;\n            shotGrid[x][y] = 2;\n            return ShotMessages[2];\n        }"],[1,"return fireGenericShot(x, y, targetShipGrid, shotGrid);"],[0,"\n   "]],"start1":24286,"start2":24286,"length1":624,"length2":63},{"diffs":[[0,"ipGrid, shotGrid"],[-1,")\n    {"],[1,", isVertical)\n    {\n        //needs special attention"],[0,"\n        //Shot "]],"start1":24512,"start2":24512,"length1":39,"length2":85},{"diffs":[[0,"via UI?\n"],[1,"        var shotMessages = [];\n        if (isVertical)\n        {\n            shotMessages[0] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n            shotMessages[1] = fireGenericShot(x, y+1, targetShipGrid, shotGrid);\n            shotMessages[2] = fireGenericShot(x, y+2, targetShipGrid, shotGrid);\n        }\n        else\n        {\n            shotMessages[0] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n            shotMessages[1] = fireGenericShot(x+1, y, targetShipGrid, shotGrid);\n            shotMessages[2] = fireGenericShot(x+2, y, targetShipGrid, shotGrid);\n        }\n        return shotMessages;\n"],[0,"    };\n "]],"start1":24724,"start2":24724,"length1":16,"length2":635},{"diffs":[[0,"    "],[-1,"//if the cell is already miss or hit\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            //return the message for the value for the existing cell\n            return ShotMessages["],[1,"var shotMessages = [];\n        shotMessages[0] = fireGenericShot(x, y-1, targetShipGrid, shotGrid);\n        shotMessages[1] = fireGenericShot(x, y, targetShipGrid, "],[0,"shotGrid"],[-1,"[x][y]]"],[1,")"],[0,";\n  "]],"start1":25659,"start2":25659,"length1":229,"length2":181},{"diffs":[[0,"    "],[-1,"}\n        //if the cell hasn't been shot \n        else if (targetShipGrid[x][y] === 0)\n        {\n            //\n            shotGrid[x][y] = 1;\n            return ShotMessages[1];\n        }\n        else if (targetShipGrid[x][y].name !== 0)\n        {\n            //\n            targetShipGrid[x][y].damage++;\n            shotGrid[x][y] = 2;\n    "],[1,"shotMessages[2] = fireGenericShot(x, y+1, targetShipGrid, shotGrid);\n        shotMessages[3] = fireGenericShot(x-1, y, targetShipGrid, shotGrid);\n        shotMessages[4] = fireGenericShot(x+1, y, targetShipGrid, shotGrid);\n"],[0,"    "]],"start1":25842,"start2":25842,"length1":352,"length2":231},{"diffs":[[0,"\n        return "],[-1,"S"],[1,"s"],[0,"hotMessages[2];\n"]],"start1":26068,"start2":26068,"length1":33,"length2":33},{"diffs":[[0,"urn shotMessages"],[-1,"[2]"],[0,";\n        }\n    "]],"start1":26080,"start2":26080,"length1":35,"length2":32},{"diffs":[[0,"ssages;\n        "],[-1,"}"],[0,"\n    };\n    \n   "]],"start1":26090,"start2":26090,"length1":33,"length2":32},{"diffs":[[0,"r miss.\n"],[1,"        var shotMessages = [];\n        shotMessages[0] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n        shotMessages[1] = fireGenericShot(x+1, y, targetShipGrid, shotGrid);\n        shotMessages[2] = fireGenericShot(x-1, y, targetShipGrid, shotGrid);\n        shotMessages[3] = fireGenericShot(x, y+1, targetShipGrid, shotGrid);\n        shotMessages[4] = fireGenericShot(x, y-1, targetShipGrid, shotGrid);\n        return shotMessages;\n        \n"],[0,"    };\n "]],"start1":26549,"start2":26549,"length1":16,"length2":468},{"diffs":[[0,"r\" shots"],[1,"\n"],[0,"    "],[1,"    //needs special attention"],[0,"\n    };\n"]],"start1":27237,"start2":27237,"length1":20,"length2":50},{"diffs":[[0,"5);\nvar "],[-1,"x"],[1,"startX"],[0,"Coord = "]],"start1":28993,"start2":28993,"length1":17,"length2":22},{"diffs":[[0,"var "],[-1,"yCoord = 0"],[1,"startYCoord = 0;\n\nvar xCoord = startXCoord;\nvar yCoord = startYCoord"],[0,";\n\n\n"]],"start1":29032,"start2":29032,"length1":18,"length2":76},{"diffs":[[0,"un\n\n"],[1,"\n"],[0,"    \n"],[-1,"\n\n};"],[1,"    if (xCoord>=0 && yCoord<=9)\n    {\n        regularShot.fire(xCoord, xCoord, player1ShipGrid, player2ShotGrid);\n        xCoord--;\n        yCoord++;\n    }\n        else if (startXCoord-5>=0 && xCoord>=0 && yCoord<=9)\n        {\n            xCoord = startXCoord-5;\n            yCoord = startYCoord;\n            regularShot.fire(xCoord, xCoord, player1ShipGrid, player2ShotGrid);\n            xCoord--;\n            yCoord++;\n        }    \n        else\n        {\n            \n        }\n        };\n"],[0,"\n\n//"]],"start1":29664,"start2":29664,"length1":17,"length2":506},{"diffs":[[0,"ng shot\n"],[-1,"this."],[1,"function "],[0,"killingS"]],"start1":30226,"start2":30226,"length1":21,"length2":25},{"diffs":[[0," killingShot"],[-1," = function("],[1,"(xCoord, yCoord"],[0,")\n{\n//Create"]],"start1":30242,"start2":30242,"length1":36,"length2":39},{"diffs":[[0,"       yCoord--;"],[1,"\n        regularShot.fire(xCoord, xCoord, player1ShipGrid, player2ShotGrid);"],[0,"\n\n    };\n    thi"]],"start1":30426,"start2":30426,"length1":32,"length2":108},{"diffs":[[0,";\n\n\n    "],[-1,"/**"],[0,"\n     "],[-1,"*"],[1,"//"],[0,"   once "]],"start1":30715,"start2":30715,"length1":26,"length2":24},{"diffs":[[0,"r.\n     "],[-1,"*"],[0,"\n     "],[-1,"*"],[0," //While"]],"start1":30849,"start2":30849,"length1":24,"length2":22},{"diffs":[[0,"    "],[-1,"*"],[0,"   if "],[1,"("],[0,"(y-1"],[1,")"],[0," > 0 "],[-1,"and "],[1,"&& player2ShotGrid"],[0,"[x]["]],"start1":30930,"start2":30930,"length1":28,"length2":43},{"diffs":[[0,"d[x][y-1] =="],[1,"="],[0," 0)\n     *  "]],"start1":30968,"start2":30968,"length1":24,"length2":25},{"diffs":[[0,"-1] === 0)\n     "],[-1,"*"],[0,"      {\n *      "]],"start1":30974,"start2":30974,"length1":33,"length2":32},{"diffs":[[0,"         {\n "],[-1,"*"],[1,"    "],[0,"      "],[1,"this."],[0,"fireNorth();"]],"start1":30987,"start2":30987,"length1":31,"length2":39},{"diffs":[[0,"reNorth();\n "],[-1,"*"],[1,"    "],[0,"      }\n    "]],"start1":31016,"start2":31016,"length1":25,"length2":28},{"diffs":[[0,"     }\n     "],[-1,"*"],[0,"\n     "],[-1,"*"],[0,"   else if ("]],"start1":31033,"start2":31033,"length1":32,"length2":30},{"diffs":[[0," if "],[1,"("],[0,"(x+1"],[1,")"],[0," < 10 "],[-1,"and "],[1,"&& player2ShotGrid"],[0,"[x+1"]],"start1":31058,"start2":31058,"length1":22,"length2":38},{"diffs":[[0,"tGrid[x+1][y] =="],[1,"="],[0," 0)\n     *      "]],"start1":31087,"start2":31087,"length1":32,"length2":33},{"diffs":[[0,"[y] === 0)\n     "],[-1,"*"],[0,"      {\n *      "]],"start1":31097,"start2":31097,"length1":33,"length2":32},{"diffs":[[0,"         {\n "],[-1,"*"],[0,"      "],[1,"    this."],[0,"fireEast();\n"]],"start1":31110,"start2":31110,"length1":31,"length2":39},{"diffs":[[0,"ireEast();\n "],[-1,"*"],[1,"    "],[0,"      }\n    "]],"start1":31138,"start2":31138,"length1":25,"length2":28},{"diffs":[[0,"     }\n     "],[-1,"*"],[0,"\n     "],[-1,"*"],[0,"   else if ("]],"start1":31155,"start2":31155,"length1":32,"length2":30},{"diffs":[[0,"x-1 > 0 "],[-1,"and "],[1,"&& player2ShotGrid"],[0,"[x-1][y]"]],"start1":31185,"start2":31185,"length1":20,"length2":34},{"diffs":[[0,"d[x-1][y] =="],[1,"="],[0," 0)\n     *  "]],"start1":31210,"start2":31210,"length1":24,"length2":25},{"diffs":[[0,"[y] === 0)\n     "],[-1,"*"],[0,"      {\n *      "]],"start1":31216,"start2":31216,"length1":33,"length2":32},{"diffs":[[0,"         {\n "],[-1,"*"],[1,"   "],[0,"      "],[1," this."],[0,"fireSouth();"]],"start1":31229,"start2":31229,"length1":31,"length2":39},{"diffs":[[0,");\n "],[-1,"*"],[1,"   "],[0,"      "],[1," "],[0,"}\n     "],[-1,"*"],[0,"\n     "],[-1,"*"],[0,"   e"]],"start1":31266,"start2":31266,"length1":30,"length2":31},{"diffs":[[0,"+1 < 10 "],[-1,"and "],[1,"&& player2ShotGrid"],[0,"[x][y+1]"]],"start1":31306,"start2":31306,"length1":20,"length2":34},{"diffs":[[0,"[y+1] =="],[1,"="],[0," 0)\n    "]],"start1":31335,"start2":31335,"length1":16,"length2":17},{"diffs":[[0,"0)\n     "],[-1,"*"],[0,"      {\n"]],"start1":31345,"start2":31345,"length1":17,"length2":16},{"diffs":[[0,"     {\n "],[-1,"*"],[1," "],[0,"      "],[1,"   this."],[0,"fireWest"]],"start1":31354,"start2":31354,"length1":23,"length2":31},{"diffs":[[0,");\n "],[-1,"*"],[1," "],[0,"      "],[1,"   "],[0,"}\n     "],[-1,"*/"],[0,"\n// "]],"start1":31386,"start2":31386,"length1":24,"length2":25},{"diffs":[[0,"shots.\n}"],[-1,";\n"],[0,""],[1,""],[0,"\n\n//As l"]],"start1":31505,"start2":31505,"length1":18,"length2":16}]],"length":31961,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354341059080,"patch":[[{"diffs":[[0,"d);\n"],[-1,"            if (message instanceof Array)\n            {\n                var i = 0;\n                while ( i < message.length )\n                {\n                    this.player1ShotHistory.push(\"player1: \" + x + \",\" + y + \" \" + message[i]);\n                    i++;\n                }\n            }\n            else\n            {\n    "],[0,"    "]],"start1":8053,"start2":8053,"length1":342,"length2":8},{"diffs":[[0,"+ message);\n"],[-1,"            }\n"],[0,"        }\n  "]],"start1":8130,"start2":8130,"length1":38,"length2":24},{"diffs":[[0,"d);\n"],[-1,"            if (message instanceof Array)\n            {\n                var i = 0;\n                while ( i < message.length )\n                {\n                    this.player2ShotHistory.push(\"player2: \" + x + \",\" + y + \" \" + message[i]);\n                    i++;\n                }\n            }\n            else\n            {\n    "],[0,"    "]],"start1":8315,"start2":8315,"length1":342,"length2":8},{"diffs":[[0,"ssage);\n"],[-1,"            }\n"],[0,"        "]],"start1":8396,"start2":8396,"length1":30,"length2":16},{"diffs":[[0,"\n\n//"],[-1,"handle regular shots\nfunction fireGenericShot(x, y, targetShipGrid, shotGrid)\n{\n    //if the cell is already miss or hit\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            //return the message for the value for the existing cell"],[1,"This defines all the ships available in mode 1 of the game\nfunction mode1Ships()\n{\n    //define a regular shot\n    var regularShot = new Shot(\"Regular Shot\", 1);\n    //because of the way cloning objects works in javascript, each shot object can only have the fire function, all logic for firing should be in this function.\n    regularShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //implement a regular shot and how it interacts with the grid\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {"],[0,"\n   "]],"start1":21048,"start2":21048,"length1":265,"length2":538},{"diffs":[[0,"  }\n"],[-1,"        //if there isn't a ship in the cell it is a miss\n"],[0,"    "]],"start1":21638,"start2":21638,"length1":65,"length2":8},{"diffs":[[0,"  }\n"],[-1,"        // if it is a ship then it is a hit\n"],[0,"    "]],"start1":21771,"start2":21771,"length1":52,"length2":8},{"diffs":[[0,"id[x][y]"],[1,".name"],[0," !== 0)\n"]],"start1":21804,"start2":21804,"length1":16,"length2":21},{"diffs":[[0,"  {\n"],[-1,"            //\n"],[0,"    "]],"start1":21831,"start2":21831,"length1":23,"length2":8},{"diffs":[[0,"  }\n"],[-1,"        else\n        {\n            //this shouldn't happen\n        }\n}\n\n//This defines all the ships available in mode 1 of the game\nfunction mode1Ships()\n{\n    //define a regular shot\n    var regularShot = new Shot(\"Regular Shot\", 1);\n    //because of the way cloning objects works in javascript, each shot object can only have the fire function, all logic for firing should be in this function.\n    regularShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        return fireGenericShot(x, y, targetShipGrid, shotGrid);\n"],[0,"    "]],"start1":21952,"start2":21952,"length1":539,"length2":8},{"diffs":[[0,"    "],[-1,"return fireGenericShot(x, y, targetShipGrid, shotGrid);"],[1,"//if the cell is already miss or hit\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            //return the message for the value for the existing cell\n            return ShotMessages[shotGrid[x][y]];\n        }\n        //if the cell hasn't been shot \n        else if (targetShipGrid[x][y] === 0)\n        {\n            //\n            shotGrid[x][y] = 1;\n            return ShotMessages[1];\n        }\n        else if (targetShipGrid[x][y].name !== 0)\n        {\n            //\n            targetShipGrid[x][y].damage++;\n            shotGrid[x][y] = 2;\n            return ShotMessages[2];\n        }"],[0,"\n   "]],"start1":23221,"start2":23221,"length1":63,"length2":624},{"diffs":[[0,"Grid"],[-1,", isVertical)\n    {\n        //needs special attention"],[1,")\n    {"],[0,"\n   "]],"start1":24020,"start2":24020,"length1":61,"length2":15},{"diffs":[[0,"    "],[-1,"    var shotMessages = [];\n        if (isVertical)\n        {\n            shotMessages[0] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n            shotMessages[1] = fireGenericShot(x, y+1, targetShipGrid, shotGrid);\n            shotMessages[2] = fireGenericShot(x, y+2, targetShipGrid, shotGrid);\n        }\n        else\n        {\n            shotMessages[0] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n            shotMessages[1] = fireGenericShot(x+1, y, targetShipGrid, shotGrid);\n            shotMessages[2] = fireGenericShot(x+2, y, targetShipGrid, shotGrid);\n        }\n        return shotMessages;\n    };\n    \n    //Battleship Special Shot\n    var ravagerShot = new Shot(\"Black Hole\", 12);\n    ravagerShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //Shot hits in a central location and then hits one grid point\n        //in each direction up, right, down, left from chosen location\n        var shotMessages = [];\n        shotMessages[0] = fireGenericShot(x, y-1, targetShipGrid, shotGrid);\n        shotMessages[1] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n        shotMessages[2] = fireGenericShot(x, y+1, targetShipGrid, shotGrid);\n        shotMessages[3] = fireGenericShot(x-1, y, targetShipGrid, shotGrid);\n        shotMessages[4] = fireGenericShot(x+1, y, targetShipGrid, shotGrid);\n"],[1,"};\n    \n    //Battleship Special Shot\n    var ravagerShot = new Shot(\"Black Hole\", 12);\n    ravagerShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //Shot hits in a central location and then hits one grid point\n        //in each direction up, right, down, left from chosen location\n        //if the cell is already miss or hit\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            //return the message for the value for the existing cell\n            return ShotMessages[shotGrid[x][y]];\n        }\n        //if the cell hasn't been shot \n        else if (targetShipGrid[x][y] === 0)\n        {\n            //\n            shotGrid[x][y] = 1;\n            return ShotMessages[1];\n        }\n        else if (targetShipGrid[x][y].name !== 0)\n        {\n            //\n            targetShipGrid[x][y].damage++;\n            shotGrid[x][y] = 2;\n    "],[0,"    "]],"start1":24182,"start2":24182,"length1":1341,"length2":891},{"diffs":[[0,"         return "],[-1,"s"],[1,"S"],[0,"hotMessages;\n   "]],"start1":25068,"start2":25068,"length1":33,"length2":33},{"diffs":[[0,"urn ShotMessages"],[1,"[2]"],[0,";\n        \n    }"]],"start1":25080,"start2":25080,"length1":32,"length2":35},{"diffs":[[0,"ges[2];\n        "],[1,"}"],[0,"\n    };\n    \n   "]],"start1":25093,"start2":25093,"length1":32,"length2":33},{"diffs":[[0,"ss.\n"],[-1,"        var shotMessages = [];\n        shotMessages[0] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n        shotMessages[1] = fireGenericShot(x+1, y, targetShipGrid, shotGrid);\n        shotMessages[2] = fireGenericShot(x-1, y, targetShipGrid, shotGrid);\n        shotMessages[3] = fireGenericShot(x, y+1, targetShipGrid, shotGrid);\n        shotMessages[4] = fireGenericShot(x, y-1, targetShipGrid, shotGrid);\n        return shotMessages;\n        \n"],[0,"    "]],"start1":25557,"start2":25557,"length1":460,"length2":8},{"diffs":[[0,"hots"],[-1,"\n"],[0,"    "],[-1,"    //needs special attention"],[0,"\n   "]],"start1":25793,"start2":25793,"length1":42,"length2":12},{"diffs":[[0,"m()*5);\n"],[1,"//"],[0,"var star"]],"start1":27511,"start2":27511,"length1":16,"length2":18},{"diffs":[[0,"omInt);\n"],[1,"//"],[0,"var star"]],"start1":27548,"start2":27548,"length1":16,"length2":18},{"diffs":[[0,"d = 0;\n\n"],[1,"//"],[0,"var xCoo"]],"start1":27572,"start2":27572,"length1":16,"length2":18},{"diffs":[[0,"XCoord;\n"],[1,"//"],[0,"var yCoo"]],"start1":27600,"start2":27600,"length1":16,"length2":18},{"diffs":[[0,"oord;\n\n\n"],[1,"//This function fires in a diagonal x+1, y+1 pattern with the starting point specified in the parameters   \nthis.checkDiagonal = function(xCoord, yCoord)\n{\n    while (xCoord<=9 && yCoord>=0)\n    {\n        mode1Ships.regularShot.fire(xCoord, yCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n        xCoord++;\n        yCoord++;\n    }\n};\n\n//NOTE: There must be a better way to go about performing this. I can't find the pattern right now, however.\n//These calls will perform diagonal searching with the parameters given indicating the starting point. \n//These shots should check most cells on the board\n\n\n\n"],[0,"//This s"]],"start1":27630,"start2":27630,"length1":16,"length2":627},{"diffs":[[0,"ion()\n{\n"],[-1,"    "],[0,"//We use"]],"start1":28358,"start2":28358,"length1":20,"length2":16},{"diffs":[[0,"un\n\n"],[-1,"\n    \n    if (xCoord>=0 && yCoord<=9)\n    {\n        regularShot.fire(xCoord, xCoord, player1ShipGrid, player2ShotGrid);\n        xCoord--;\n        yCoord++;\n    }\n        else if (startXCoord-5>=0 && xCoord>=0 && yCoord<=9)\n        {\n            xCoord = startXCoord-5;\n            yCoord = startYCoord;\n            regularShot.fire(xCoord, xCoord, player1ShipGrid, player2ShotGrid);\n            xCoord--;\n            yCoord++;\n        }    \n        else\n        {\n            \n        }\n        "],[1,"this.checkDiagonal(0,(9-randomInt));\n\nthis.checkDiagonal(0,(4-randomInt));\n\nthis.checkDiagonal((1+randomInt),0 );\n\nthis.checkDiagonal((6+randomInt),0 );\n\nthis.checkDiagonal(0,(7-randomInt));\n\nthis.checkDiagonal(0,(2-randomInt));\n\nthis.checkDiagonal((3+randomInt),0 );\n\nthis.checkDiagonal((8+randomInt),0 );\n\nthis.checkDiagonal(0,(8-randomInt));\n\nthis.checkDiagonal(0,(3-randomInt));\n\nthis.checkDiagonal((2+randomInt),0 );\n\nthis.checkDiagonal((7+randomInt),0 );\n\nthis.checkDiagonal(0,(6-randomInt));\n\nthis.checkDiagonal(0,(1-randomInt));\n\nthis.checkDiagonal((randomInt),0 );\n\nthis.checkDiagonal((5+randomInt),0 );\n\n"],[0,"};\n\n"],[-1,"\n"],[0,"//me"]],"start1":28801,"start2":28801,"length1":508,"length2":626},{"diffs":[[0,"ng shot\n"],[-1,"function "],[1,"this."],[0,"killingS"]],"start1":29481,"start2":29481,"length1":25,"length2":21},{"diffs":[[0,"lingShot"],[1," = function"],[0,"(xCoord,"]],"start1":29497,"start2":29497,"length1":16,"length2":27},{"diffs":[[0,"oord--;\n        "],[1,"mode1Ships."],[0,"regularShot.fire"]],"start1":29697,"start2":29697,"length1":32,"length2":43},{"diffs":[[0,"xCoord, "],[1,"engine."],[0,"player1S"]],"start1":29749,"start2":29749,"length1":16,"length2":23},{"diffs":[[0,"ipGrid, "],[1,"engine."],[0,"player2S"]],"start1":29773,"start2":29773,"length1":16,"length2":23},{"diffs":[[0,"++;\n"],[-1,"\n    };\n    this.fireSouth = function()\n    {\n        yCoord++;\n\n    };\n    this.fireWest = function()\n    {\n        xCoord--;\n"],[1,"        mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n    };\n    this.fireSouth = function()\n    {\n        yCoord++;\n        mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n    };\n    this.fireWest = function()\n    {\n        xCoord--;\n        mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);"],[0,"\n   "]],"start1":29865,"start2":29865,"length1":135,"length2":435},{"diffs":[[0,"  if ((y"],[1,"Coord"],[0,"-1) > 0 "]],"start1":30522,"start2":30522,"length1":16,"length2":21},{"diffs":[[0,"Coord-1) > 0 && "],[1,"engine."],[0,"player2ShotGrid["]],"start1":30530,"start2":30530,"length1":32,"length2":39},{"diffs":[[0,"otGrid[x"],[-1,"][y"],[1,"Coord][yCoord"],[0,"-1] === "]],"start1":30562,"start2":30562,"length1":19,"length2":29},{"diffs":[[0,"e if ((x"],[1,"Coord"],[0,"+1) < 10"]],"start1":30666,"start2":30666,"length1":16,"length2":21},{"diffs":[[0,"oord+1) < 10 && "],[1,"engine."],[0,"player2ShotGrid["]],"start1":30675,"start2":30675,"length1":32,"length2":39},{"diffs":[[0,"id[x"],[-1,"+1][y"],[1,"Coord+1][yCoord"],[0,"] =="]],"start1":30711,"start2":30711,"length1":13,"length2":23},{"diffs":[[0,"se if (x"],[1,"Coord"],[0,"-1 > 0 &"]],"start1":30809,"start2":30809,"length1":16,"length2":21},{"diffs":[[0,"rd-1 > 0 && "],[1,"engine."],[0,"player2ShotG"]],"start1":30820,"start2":30820,"length1":24,"length2":31},{"diffs":[[0,"id[x"],[-1,"-1][y"],[1,"Coord-1][yCoord"],[0,"] =="]],"start1":30852,"start2":30852,"length1":13,"length2":23},{"diffs":[[0,"se if (y"],[1,"Coord"],[0,"+1 < 10 "]],"start1":30951,"start2":30951,"length1":16,"length2":21},{"diffs":[[0,"< 10 && "],[1,"engine."],[0,"player2S"]],"start1":30967,"start2":30967,"length1":16,"length2":23},{"diffs":[[0,"otGrid[x"],[-1,"][y"],[1,"Coord][yCoord"],[0,"+1] === "]],"start1":30991,"start2":30991,"length1":19,"length2":29},{"diffs":[[0,"tingShot"],[-1,""],[0,""],[1,"()"],[0," !== Sho"]],"start1":31270,"start2":31270,"length1":16,"length2":18}]],"length":31638,"saved":false}
{"ts":1354341117938,"patch":[[{"diffs":[[0," shots\n\n"],[1,"this.huntingShot();\n"],[0,"if (this"]],"start1":31250,"start2":31250,"length1":16,"length2":36}]],"length":31658,"saved":false}
{"ts":1354341146394,"patch":[[{"diffs":[[0,"ng shots"],[1,". When a ship has been hit we switch to kiling shot."],[0,"\n\nthis.h"]],"start1":31248,"start2":31248,"length1":16,"length2":68}]],"length":31710,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354368172271,"patch":[[{"diffs":[[0,"ShotGrid"],[-1,"s"],[0," = funct"]],"start1":11466,"start2":11466,"length1":17,"length2":16}]],"length":31709,"saved":false}
{"contributors":["nerian.drew@gmail.com"],"silentsave":false,"ts":1354368937582,"patch":[[{"diffs":[[0,"ine\nvar "],[-1,"engine"],[1,"ENGINE"],[0," = new E"]],"start1":31672,"start2":31672,"length1":22,"length2":22}]],"length":31709,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354380014040,"patch":[[{"diffs":[[0,"lue));\n}"],[1,";"],[0,"\n"],[-1,""],[0,"\n//For r"]],"start1":2696,"start2":2696,"length1":17,"length2":18},{"diffs":[[0,"se(value);\n}"],[1,";"],[0,"\n\n//this is "]],"start1":2908,"start2":2908,"length1":24,"length2":25},{"diffs":[[0,"     }\n    }"],[1,";"],[0,"\n}\n\n//the cl"]],"start1":5027,"start2":5027,"length1":24,"length2":25},{"diffs":[[0,"ip(ship)"],[1,";"],[0,"\n\n      "]],"start1":8940,"start2":8940,"length1":16,"length2":17},{"diffs":[[0,"\n        }\n    }"],[1,";"],[0,"\n\n    //return t"]],"start1":11267,"start2":11267,"length1":32,"length2":33},{"diffs":[[0,"     }\n    }"],[1,";"],[0,"\n\n    //retu"]],"start1":13144,"start2":13144,"length1":24,"length2":25},{"diffs":[[0,"unction()\n    {\n"],[1,"        //we need to remove the ai temporarily and add it back after the save to avoid a circular reference\n        var temp = this.ai;\n        this.ai = null;\n        //save in the session\n        sessionStorage.setObject(\"gameEngine\", this);\n        //now restore the ai\n        this.ai = temp;\n"],[0,"        //indica"]],"start1":14273,"start2":14273,"length1":32,"length2":329},{"diffs":[[0,"e\";\n"],[-1,"        sessionStorage.setObject(\"gameEngine\", this)\n"],[0,"    }"],[1,";"],[0,"\n\n  "]],"start1":14732,"start2":14732,"length1":66,"length2":14},{"diffs":[[0,"torage\n    }"],[1,";"],[0,"\n}\n\n//define"]],"start1":14903,"start2":14903,"length1":24,"length2":25},{"diffs":[[0,"().init("],[1,"ai"],[0,") so as "]],"start1":15151,"start2":15151,"length1":16,"length2":18},{"diffs":[[0," = function("],[1,"AI"],[0,")\n{\n    //I "]],"start1":15284,"start2":15284,"length1":24,"length2":26},{"diffs":[[0,"  {\n"],[-1,"        //TODO: Remove me later, I am test code\n        alert(\"Found session data to load from\");\n\n"],[0,"    "]],"start1":15603,"start2":15603,"length1":107,"length2":8},{"diffs":[[0,"(10);\n    }\n"],[1,"    \n    //only initialize the ai if we were given one\n    if(AI)\n    {\n        //initialize the ai\n        var ai = new AI(newEngine);\n        newEngine.ai = ai;\n    }\n"],[0,"    //finall"]],"start1":19867,"start2":19867,"length1":24,"length2":193},{"diffs":[[0,"//\n\n"],[-1,"function firingLogic()\n{\n\n//We generate a random number between 0-4 in order to generate a starting point for AI shot selection.\n//This should limit the ability of the opponent to plan ship position to avoid shots.\n//This will begin firing in the upper right corner of the board.\nvar randomInt = Math.floor(Math.random()*5);\n//var startXCoord = (9 - randomInt);\n//var startYCoord = 0;\n\n//var xCoord = startXCoord;\n//var yCoord = startYCoord;\n\n\n//This function fires in a diagonal x+1, y+1 pattern with the starting point specified in the parameters   \nthis.checkDiagonal = function(xCoord, yCoord)\n{\n    while (xCoord<=9 && yCoord>=0)\n    {\n        mode1Ships.regularShot.fire(xCoord, yCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n        xCoord++;\n        yCoord++;\n    }\n};\n\n//NOTE: There must be a better way to go about performing this. I can't find the pattern right now, however.\n//These calls will perform diagonal searching with the parameters given indicating the starting point. \n//These shots should check most cells on the board\n\n\n\n//This searches for enemy ships by firing in a pattern as long as no ships are found\nthis.huntingShot = function()\n{\n//We use x and y as starting coordinates and begin firing in a diagonal line (x+1, y+1) on cells which !=0 until an edge is reached.\n//When an edge is reached we begin a new diagonal by moving five cells to the left on the x-axis and diagonally firing again.\n//When an edge is reached we begin a new diagonal by moving left to x=0 and diagonally firing again from x=0, y=randomInt.\n//If (randomInt+5) < 9 we perform one more diagonal run\n\nthis.checkDiagonal(0,(9-randomInt));\n\nthis.checkDiagonal(0,(4-randomInt));\n\nthis.checkDiagonal((1+randomInt),0 );\n\nthis.checkDiagonal((6+randomInt),0 );\n\nthis.checkDiagonal(0,(7-randomInt));\n\nthis.checkDiagonal(0,(2-randomInt));\n\nthis.checkDiagonal((3+randomInt),0 );\n\nthis.checkDiagonal((8+randomInt),0 );\n\nthis.checkDiagonal(0,(8-randomInt));\n\nthis.checkDiagonal(0,(3-randomInt));\n\nthis.checkDiagonal((2+randomInt),0 );\n\nthis.checkDiagonal((7+randomInt),0 );\n\nthis.checkDiagonal(0,(6-randomInt));\n\nthis.checkDiagonal(0,(1-randomInt));\n\nthis.checkDiagonal((randomInt),0 );\n\nthis.checkDiagonal((5+randomInt),0 );\n\n};\n\n//method for sinking an enemy ship once located with hunting shot\nthis.killingShot = function(xCoord, yCoord)\n{\n//Create functions to locate orientation of found ship\n\n//TODO implement firing shots for each directional check.\n    this.fireNorth = function()\n    {\n        yCoord--;\n        mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n\n    };\n    this.fireEast = function()\n    {\n        xCoord++;\n        mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n    };\n    this.fireSouth = function()\n    {\n        yCoord++;\n        mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n    };\n    this.fireWest = function()\n    {\n        xCoord--;\n        mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n    };\n\n\n    \n     //   once ship is hit we search for orientation. We limit shots to cells within the grid which are affected by fog of war.\n     \n      //While a ship is hit but not sunk we check one cell north of it\n        if ((yCoord-1) > 0 && engine.player2ShotGrid[xCoord][yCoord-1] === 0)\n           {\n           this.fireNorth();\n           }\n     \n        else if ((xCoord+1) < 10 && engine.player2ShotGrid[xCoord+1][yCoord] === 0)\n           {\n           this.fireEast();\n           }\n     \n        else if (xCoord-1 > 0 && engine.player2ShotGrid[xCoord-1][yCoord] === 0)\n           {\n           this.fireSouth();\n           }\n     \n        else if (yCoord+1 < 10 && engine.player2ShotGrid[xCoord][yCoord+1] === 0)\n           {\n           this.fireWest();\n           }\n     \n// TODO: Continue implementation of killingShot with strategy following results from orientation shots.\n}\n\n//As long as no ships have been hit we continue with hunting shots. When a ship has been hit we switch to kiling shot.\n\nthis.huntingShot();\nif (this.huntingShot() !== ShotMessages[2])\n{\n    this.huntingShot();\n}\nelse\n{\n    this.killingShot();\n}\n\n}"],[1,"//ai code has been moved into ai.js"],[0,"\n\n//"]],"start1":27515,"start2":27515,"length1":4251,"length2":43},{"diffs":[[0," engine\n"],[1,"//\"ai\" represents the global ai to be passed in and used with the engine\n"],[0,"var ENGI"]],"start1":27786,"start2":27786,"length1":16,"length2":89},{"diffs":[[0,"().init("],[1,"AI"],[0,");"]],"start1":27890,"start2":27890,"length1":10,"length2":12}]],"length":27902,"saved":false}
{"ts":1354380022772,"patch":[[{"diffs":[[0,"p = "],[-1,"new Object()"],[1,"[]"],[0,";\n  "]],"start1":16876,"start2":16876,"length1":20,"length2":10}]],"length":27892,"saved":false}
{"ts":1354380025619,"patch":[[{"diffs":[[0,"psMap = "],[-1,"[]"],[1,"{}"],[0,";\n      "]],"start1":16872,"start2":16872,"length1":18,"length2":18}]],"length":27892,"saved":false}
{"ts":1354383818985,"patch":[[{"diffs":[[0,"ion()\n    {\n"],[-1,"\n"],[0,"        var "]],"start1":9882,"start2":9882,"length1":25,"length2":24}]],"length":27891,"saved":false}
{"ts":1354385335063,"patch":[[{"diffs":[[0,"   for ("],[1,"var "],[0,"property"]],"start1":2379,"start2":2379,"length1":16,"length2":20}]],"length":27895,"saved":false}
{"ts":1354385579628,"patch":[[{"diffs":[[0,"layer1: "],[1,"("],[0,"\" + x + "]],"start1":8107,"start2":8107,"length1":16,"length2":17},{"diffs":[[0," x + \",\" + y + \""],[1,")"],[0," \" + message);\n "]],"start1":8119,"start2":8119,"length1":32,"length2":33},{"diffs":[[0,"layer2: "],[1,"("],[0,"\" + x + "]],"start1":8371,"start2":8371,"length1":16,"length2":17},{"diffs":[[0," + y + \""],[1,")"],[0," \" + mes"]],"start1":8391,"start2":8391,"length1":16,"length2":17}]],"length":27899,"saved":false}
{"ts":1354385965808,"patch":[[{"diffs":[[0,"hot grid"],[-1,"s"],[0," of the "]],"start1":11426,"start2":11426,"length1":17,"length2":16},{"diffs":[[0,"rid);\n    };"],[1,"\n    \n    /**\n     * Returns the enemy shot grid\n     */\n    this.getShotGrid = function()\n    {\n        if (this.isFirstPlayer) { return clone(this.player1ShotGrid); }\n        return clone(this.player2ShotGrid);\n    };"],[0,"\n\n    /**\n  "]],"start1":11615,"start2":11615,"length1":24,"length2":243}]],"length":28117,"saved":false}
{"ts":1354385971226,"patch":[[{"diffs":[[0,"lone(this.player"],[-1,"1"],[1,"2"],[0,"ShotGrid); }\n   "]],"start1":11766,"start2":11766,"length1":33,"length2":33},{"diffs":[[0,"lone(this.player"],[-1,"2"],[1,"1"],[0,"ShotGrid);\n    }"]],"start1":11812,"start2":11812,"length1":33,"length2":33}]],"length":28117,"saved":false}
{"ts":1354386410821,"patch":[[{"diffs":[[0,"    this.getShot"],[1,"Enemy"],[0,"Grid = function("]],"start1":11684,"start2":11684,"length1":32,"length2":37}]],"length":28122,"saved":false}
{"ts":1354386417493,"patch":[[{"diffs":[[0,".get"],[-1,"Shot"],[0,"Enemy"],[1,"Shot"],[0,"Grid"]],"start1":11692,"start2":11692,"length1":17,"length2":17}]],"length":28122,"saved":false}
{"contributors":[],"silentsave":false,"ts":1354434051078,"patch":[[{"diffs":[[0,"\n\n//"],[-1,"this is a player agnostic function for placing a ship on a specific grid\nfunction placeShipOnGrid(x, y, ship, grid)\n{\n    //place the ship vertically\n    if (ship.isVertical)\n    {\n        //place the ship vertically\n        var endY = y + ship.shipLength;\n        var posY = y;\n        for (posY; posY < endY; posY++)\n        {\n            grid[x][posY] = ship;\n        }\n    }\n    //place the ship horizontally\n    else\n    {\n        //place the ship horizontally\n        var endX = x + ship.shipLength;\n        var posX = x;\n        for (posX; posX < endX; posX++)\n        {\n            grid[posX][y] = ship;\n        }\n    }\n}\n\n//"],[0,""],[1,""],[0,"Crea"]],"start1":2925,"start2":2925,"length1":641,"length2":8},{"diffs":[[0,"p(name, "],[-1,""],[0,""],[1,"abbreviation, "],[0,"shipLeng"]],"start1":3581,"start2":3581,"length1":16,"length2":30},{"diffs":[[0,"zontally"],[1,"\n    this.abbreviation = abbreviation;"],[0,"\n\n    //"]],"start1":4073,"start2":4073,"length1":16,"length2":54},{"diffs":[[0,"            "],[-1,""],[0,""],[1,"this."],[0,"shots[i].dec"]],"start1":4411,"start2":4411,"length1":24,"length2":29},{"diffs":[[0,"hotGrid)"],[1,"\n    {\n        alert(\"I'm not implemented!!!!!!!\");\n   "],[0," "],[-1,"{"],[0,"};\n\n    "]],"start1":4839,"start2":4839,"length1":18,"length2":72},{"diffs":[[0,"\n}\n\n"],[-1,"//walk through deincrement all the timers on the shots in all the ships\nfunction decShipShotTimers(ships)\n{\n    for (var i = 0; i < ships.length; i++)\n    {\n        ships[i].decCooldown();\n    }\n}\n\n"],[0,"////"]],"start1":6137,"start2":6137,"length1":206,"length2":8},{"diffs":[[0," 0;\n"],[1,"    "],[0,"\n    //"],[-1,"fire a shot at the opponent's ship grid"],[1,"current user selected shot\n    this.player1SelectedShot;\n    this.player2SelectedShot;\n\n    /**\n     * Select a shot to fire\n     */\n    this.selectShot = function(shot)\n    {\n        if (this.isFirstPlayer) { this.player1SelectedShot = shot; }\n        else { this.player2SelectedShot = shot; }\n    };\n\n    /**\n     * Fire the selected shot at the opponenet\n     */"],[0,"\n   "]],"start1":7035,"start2":7035,"length1":54,"length2":384},{"diffs":[[0,"ion(x, y"],[-1,", shot"],[0,")\n    {\n"]],"start1":7441,"start2":7441,"length1":22,"length2":16},{"diffs":[[0,"    "],[-1,"message = shot.fire(x, y, this.player2ShipGrid, this.player1ShotGrid);\n            this.player1ShotHistory.push(\"player1: (\" + x + \",\" + y + \") \" + message);\n        }\n        //firing logic if this is the second player shooting\n        else\n        {\n            message = shot.fire(x, y, this.player1ShipGrid, this.player2ShotGrid);\n            this.player2ShotHistory.push(\"player2: (\" + x + \",\" + y + \") \" + message);"],[1,"//make sure that the shot that has been selected actually exists\n            if (typeof(this.player1SelectedShot) === 'undefined')\n            {\n                alert(\"The shot that has been selected does not exist, please make sure you are in the right mode.\");\n                return;\n            }\n            //check if the shot is available and alert if it is not\n            if (!this.player1SelectedShot.isAvailable())\n            {\n                alert(this.player1SelectedShot.name + \" has \" + this.player1SelectedShot.cooldownTimer + \" turns before it is usable again.\");\n                return;\n            }\n            message = this.player1SelectedShot.fire(x, y, this.player2ShipGrid, this.player1ShotGrid);\n            if (message instanceof Array)\n            {\n                var i = 0;\n                while ( i < message.length )\n                {\n                    this.player1ShotHistory.push(\"player1: \"+message[i]);\n                    i++;\n                }\n            }\n            else\n            {\n                this.player1ShotHistory.push(\"player1: \"+message);\n            }\n            //indicate that we have fired this shot\n            this.player1SelectedShot.fired();\n        }\n        //firing logic if this is the second player shooting\n        else\n        {\n            //make sure that the shot that has been selected actually exists\n            if (typeof(this.player2SelectedShot) === 'undefined')\n            {\n                alert(\"The shot that has been selected does not exist, please make sure you are in the right mode.\");\n                return;\n            }\n            //check if the shot is available and alert if it is not\n            if (!this.player2SelectedShot.isAvailable())\n            {\n                alert(this.player2SelectedShot.name + \" has \" + this.player2SelectedShot.cooldownTimer + \" turns before it is usable again.\");\n                return;\n            }\n            message = this.player2SelectedShot.fire(x, y, this.player1ShipGrid, this.player2ShotGrid);\n            if (message instanceof Array)\n            {\n                var i = 0;\n                while ( i < message.length )\n                {\n                    this.player2ShotHistory.push(\"player2: \"+message[i]);\n                    i++;\n                }\n            }\n            else\n            {\n                this.player2ShotHistory.push(\"player2: \"+message);\n            }\n            //indicate that we have fired this shot\n            this.player2SelectedShot.fired();\n        }\n        \n        //indicate that the shot was a success\n        return true;\n    };\n\n    /**\n     * internal function to verify if the requested ship placement is valid\n     * Returns true if it is valid, false otherwise\n     */\n    this.helperValidateShipPlacement = function(startx,starty,isVertical,ship,shipGrid)\n    {\n        //check if the positioning is valid for a vertical placement\n        if(isVertical)\n        {\n            var endy = starty + ship.shipLength;\n            //if it will be positioned off the grid it is an immediate false\n            if (endy > 9) { return false; }\n            //make sure there are no ships already in these cells\n            for (var i = starty; i < endy; i++)\n            {\n                if (shipGrid[startx][i] !== 0) { return false; }\n            }\n        }\n        //check if the positioning is valid for a horizontal placement\n        else\n        {\n            var endx = startx + ship.shipLength;\n             //if it will be positioned off the grid it is an immediate false\n            if (endx > 9) { return false; }\n            //make sure there are no ships already in these cells\n            for (var i = startx; i < endx; i++)\n            {\n                if (shipGrid[i][starty] !== 0) { return false; }\n            }\n        }\n        //placement passes all tests\n        return true;\n    };\n\n    //determines if the request placement is valid \n    this.validateShipPlacement = function(startx,starty,isVertical,ship)\n    {\n        if(this.isFirstPlayer)\n        {\n            return this.helperValidateShipPlacement(startx,starty,isVertical,ship,this.player1ShipGrid);\n        }\n        else\n        {\n            return this.helperValidateShipPlacement(startx,starty,isVertical,ship,this.player2ShipGrid);\n        }\n    };\n\n    //this is a player agnostic function for placing a ship on a specific grid\n    this.helperPlaceShipOnGrid = function(x, y, ship, grid)\n    {\n        //place the ship vertically\n        if (ship.isVertical)\n        {\n            //place the ship vertically\n            var endY = y + ship.shipLength;\n            var posY = y;\n            for (posY; posY < endY; posY++)\n            {\n                grid[x][posY] = ship;\n            }\n        }\n        //place the ship horizontally\n        else\n        {\n            //place the ship horizontally\n            var endX = x + ship.shipLength;\n            var posX = x;\n            for (posX; posX < endX; posX++)\n            {\n                grid[posX][y] = ship;\n            }"],[0,"\n   "]],"start1":7593,"start2":7593,"length1":429,"length2":5071},{"diffs":[[0,"function(startx,"],[1," "],[0,"starty,"],[1," "],[0,"isVertical,ship)"]],"start1":12748,"start2":12748,"length1":39,"length2":41},{"diffs":[[0," isVertical,"],[1," "],[0,"ship"],[-1,")\n    {\n"],[1,", overridePlacement)\n    {\n        //only palce a ship if its placement is valid\n        if (overridePlacement || this.validateShipPlacement(startx,starty,isVertical,ship))\n        {\n    "],[0,"        //Th"]],"start1":12772,"start2":12772,"length1":36,"length2":216},{"diffs":[[0,"e grid)\n        "],[1," "],[1,"   "],[0,"ship.startx = st"]],"start1":13053,"start2":13053,"length1":32,"length2":36},{"diffs":[[0,"he ship\n        "],[1,"  "],[1,"  "],[0,"ship.starty = st"]],"start1":13131,"start2":13131,"length1":32,"length2":36},{"diffs":[[0,"hip\n        "],[1,"   "],[1," "],[0,"ship.isVerti"]],"start1":13213,"start2":13213,"length1":24,"length2":28},{"diffs":[[0," or not\n"],[-1,"\n"],[1,"            \n    "],[0,"        "]],"start1":13290,"start2":13290,"length1":17,"length2":33},{"diffs":[[0," errors\n"],[1,"    "],[0,"        "]],"start1":13365,"start2":13365,"length1":16,"length2":20},{"diffs":[[0,"(ship);\n"],[-1,"\n"],[1,"            \n    "],[0,"        "]],"start1":13410,"start2":13410,"length1":17,"length2":33},{"diffs":[[0," player\n        "],[1,"    "],[0,"if (this.isFirst"]],"start1":13452,"start2":13452,"length1":32,"length2":36},{"diffs":[[0,"Player)\n        "],[1," "],[-1,"{\n"],[1,"   {\n    "],[0,"            //st"]],"start1":13488,"start2":13488,"length1":34,"length2":42},{"diffs":[[0," the ship array\n"],[1,"    "],[0,"            this"]],"start1":13571,"start2":13571,"length1":32,"length2":36},{"diffs":[[0,"e);\n            "],[1,"    "],[0,"//now populate t"]],"start1":13634,"start2":13634,"length1":32,"length2":36},{"diffs":[[0,"hip\n            "],[-1,"p"],[1,"    this.helperP"],[0,"laceShipOnGrid(s"]],"start1":13689,"start2":13689,"length1":33,"length2":48},{"diffs":[[0,"d);\n        "],[-1,"}\n"],[1,"    }\n  "],[0,"        "],[1,"  "],[0,"else\n"],[1,"    "],[0,"        {\n  "]],"start1":13782,"start2":13782,"length1":39,"length2":51},{"diffs":[[0,"  {\n            "],[1,"    "],[0,"//store the ship"]],"start1":13827,"start2":13827,"length1":32,"length2":36},{"diffs":[[0,"ray\n            "],[1,"    "],[0,"this.player2Ship"]],"start1":13904,"start2":13904,"length1":32,"length2":36},{"diffs":[[0,"e);\n            "],[1,"   "],[1," "],[0,"//now populate t"]],"start1":13955,"start2":13955,"length1":32,"length2":36},{"diffs":[[0,"        "],[-1,"p"],[1,"    this.helperP"],[0,"laceShip"]],"start1":14018,"start2":14018,"length1":17,"length2":32},{"diffs":[[0,"ayer2ShipGrid);\n"],[1,"            }\n"],[0,"        }\n    };"]],"start1":14091,"start2":14091,"length1":32,"length2":46},{"diffs":[[0,"[];\n        "],[-1,"var i = 0"],[1,"//the regular shot is always available and is the first shot listed\n        availableShots[0] = regularShot;\n        var i = 1"],[0,";\n        //"]],"start1":14495,"start2":14495,"length1":33,"length2":150},{"diffs":[[0,"f (shot."],[-1,"cooldownTimer === 0"],[1,"isAvailable()"],[0,")\n      "]],"start1":15503,"start2":15503,"length1":35,"length2":29},{"diffs":[[0,"bleShots;\n    };"],[1,"\n    \n    //return the shot types that are on cooldown\n    this.getShotsOnCooldown = function()\n    {\n        var shotsOnCooldown = {};\n        var shots = this.getAvailableShots();\n        for (var i = 0; i < shots.length; i++)\n        {\n            if (!shots[i].isAvailable())\n            {\n                shotsOnCooldown[shots[i].name] = shots[i];\n            }\n        }\n        return shotsOnCooldown;\n    };"],[0,"\n\n    //get the "]],"start1":15685,"start2":15685,"length1":32,"length2":447},{"diffs":[[0,"};\n\n"],[-1,"    //return the shot types that are on cooldown\n    this.getShotsOnCooldown = function()\n    {\n\n    };\n\n"],[0,"    "]],"start1":16379,"start2":16379,"length1":113,"length2":8},{"diffs":[[0,"ps;\n    };\n\n"],[1,"    //walk through deincrement all the timers on the shots in all the ships\n    this.decShipShotTimers = function(ships)\n    {\n        regularShot.decCooldown();\n        for (var i = 0; i < ships.length; i++)\n        {\n            ships[i].decCooldown();\n        }\n    };\n\n"],[0,"    //trigge"]],"start1":18730,"start2":18730,"length1":24,"length2":297},{"diffs":[[0,"ips\n            "],[-1,""],[0,""],[1,"this."],[0,"decShipShotTimer"]],"start1":19229,"start2":19229,"length1":32,"length2":37},{"diffs":[[0,"Player = false;\n"],[1,"            \n            //implement the ai call here so that the ai player is always the second player\n            if(this.numberOfPlayers === 1)\n            {\n                //AI magic here pl0x\n                \n                //return control to the first player\n                this.changePlayers();\n            }\n            \n"],[0,"        }\n      "]],"start1":19344,"start2":19344,"length1":32,"length2":365},{"diffs":[[0,"        "],[-1,""],[0,""],[1,"this."],[0,"decShipS"]],"start1":19794,"start2":19794,"length1":16,"length2":21},{"diffs":[[0,"ertical, newShip"],[-1,""],[0,""],[1,", true"],[0,");\n        }\n\n  "]],"start1":24104,"start2":24104,"length1":32,"length2":38},{"diffs":[[0,"cal, newShip"],[-1,""],[0,""],[1,", true"],[0,");\n        }"]],"start1":25218,"start2":25218,"length1":24,"length2":30},{"diffs":[[0,"    "],[-1,"}\n    //load mode 2 ships and set booleans\n    else\n    {\n        this.loadShips(mode2Ships());\n        this"],[1,"    //tell the ai this is mode 1\n        this.ai.isModeOne = true;\n    }\n    //load mode 2 ships and set booleans\n    else\n    {\n        //remove me later\n        alert(\"Mode 2 is not fully implemented\")\n        this.loadShips(mode2Ships());\n        this.isModeOne = false;\n        //tell the ai this is mode 2\n        this.ai"],[0,".isM"]],"start1":26787,"start2":26787,"length1":116,"length2":334},{"diffs":[[0,"ers == 1)\n    {\n"],[1,"        //remove me later\n        alert(\"Single Player is not implemented\")\n"],[0,"        this.num"]],"start1":27200,"start2":27200,"length1":32,"length2":108},{"diffs":[[0,"\n\n//"],[-1,"This defines all the ships available in mode 1 of the game\nfunction mode1Ships()\n{\n    //define a regular shot\n    var regularShot = new Shot(\"Regular Shot\", 1);\n    //because of the way cloning objects works in javascript, each shot object can only have the fire function, all logic for firing should be in this function.\n    regularShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //implement a regular shot and how it interacts with the grid\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            return ShotMessages[shotGrid[x][y]];\n        }\n        else if (targetShipGrid[x][y] === 0)\n        {\n            shotGrid[x][y] = 1;\n            return ShotMessages[1];\n        }\n        else if (targetShipGrid[x][y].name !== 0)\n        {\n            targetShipGrid[x][y].damage++;\n            shotGrid[x][y] = 2;\n            return ShotMessages[2];\n        }\n    };\n\n    //define the ships in mode 1. This array of ships will be copied onto the grid of each players\n    return new Array(\n        new Ship(\"Carrier\", 5, new Array(\n                regularShot\n            )\n        ),\n        new Ship(\"Battleship\", 4, new Array(\n                regularShot\n            )\n        ),\n        new Ship(\"Cruiser\", 3, new Array(\n                regularShot\n            )\n        ),\n        new Ship(\"Submarine\", 3, new Array(\n                regularShot\n            )\n        ),\n        new Ship(\"Destroyer\", 2, new Array(\n                regularShot\n            )\n        )\n    );\n}\n\n//This defines all the ships available in mode 1 of the game\nfunction mode2Ships()\n{\n    //Array of shot messages based on shot impact on the grid\n    // ShotMessages[0] = \"FogOfWar\";\n    // ShotMessages[1] = \"Miss\";\n    // ShotMessages[2] = \"Hit\";\n    // ShotMessages[3] = \"RevealMiss\";\n    // ShotMessages[4] = \"RevealHit\";\n    \n    //define a regular shot\n    var regularShot = new Shot(\"Regular Shot\", 1);\n    //because of the way cloning objects works in javascript, each shot object can only have the fire function, all logic for firing should be in this function.\n    regularShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //if the cell is already miss or hit\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            //return the message for the value for the existing cell\n            return ShotMessages[shotGrid[x][y]];\n        }\n        //if the cell hasn't been shot \n        else if (targetShipGrid[x][y] === 0)\n        {\n            //\n            shotGrid[x][y] = 1;\n            return ShotMessages[1];\n        }\n        else if (targetShipGrid[x][y].name !== 0)\n        {\n            //\n            targetShipGrid[x][y].damage++;\n            shotGrid[x][y] = 2;\n            return ShotMessages[2];\n        }\n    };\n    \n    //define special shots\n    //Carrier Special Shot\n    var goliathShot = new Shot(\"Photon Bomb Run\", 8);\n    goliathShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //Shot hits 3 consecutive places. Player chooses a starting grid point\n        //and a direction? How will this be handled from input via UI?\n    };\n    \n    //Battleship Special Shot\n    var ravagerShot = new Shot(\"Black Hole\", 12);\n    ravagerShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //Shot hits in a central location and then hits one grid point\n        //in each direction up, right, down, left from chosen location\n        //if the cell is already miss or hit\n        if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n        {\n            //return the message for the value for the existing cell\n            return ShotMessages[shotGrid[x][y]];\n        }\n        //if the cell hasn't been shot \n        else if (targetShipGrid[x][y] === 0)\n        {\n            //\n            shotGrid[x][y] = 1;\n            return ShotMessages[1];\n        }\n        else if (targetShipGrid[x][y].name !== 0)\n        {\n            //\n            targetShipGrid[x][y].damage++;\n            shotGrid[x][y] = 2;\n            return ShotMessages[2];\n        }"],[1,"fire a generic shot\nfunction fireGenericShot(x, y, targetShipGrid, shotGrid)\n{\n    var message = \"(\"+x+\",\"+y+\") \";\n    //implementation of a regular shot and how it interacts with the grid\n    if (shotGrid[x][y] === 1 || shotGrid[x][y] === 2)\n    {\n        message += ShotMessages[shotGrid[x][y]];\n    }\n    else if (targetShipGrid[x][y] === 0)\n    {\n        shotGrid[x][y] = 1;\n        message += ShotMessages[1];\n    }\n    else if (targetShipGrid[x][y].name !== 0)\n    {\n        targetShipGrid[x][y].damage++;\n        shotGrid[x][y] = 2;\n        message += ShotMessages[2];\n    }\n    return message;\n}\n\n//define a regular shot\nvar regularShot = new Shot(\"Regular Shot\", 1);\n//because of the way cloning objects works in javascript, each shot object can only have the fire function, all logic for firing should be in this function.\nregularShot.fire = function(x, y, targetShipGrid, shotGrid)\n{\n    return fireGenericShot(x, y, targetShipGrid, shotGrid);\n};\n\n//This defines all the ships available in mode 1 of the game\nfunction mode1Ships()\n{\n    //define the ships in mode 1. This array of ships will be copied onto the grid of each players\n    return new Array(\n        new Ship(\"Carrier\", \"Ca\", 5, []\n        ),\n        new Ship(\"Battleship\", \"B\", 4, []\n        ),\n        new Ship(\"Cruiser\", \"Cr\", 3, []\n        ),\n        new Ship(\"Submarine\", \"S\", 3, []\n        ),\n        new Ship(\"Destroyer\", \"D\", 2, []\n        )\n    );\n}\n\n//This defines all the ships available in mode 1 of the game\nfunction mode2Ships()\n{\n    //Array of shot messages based on shot impact on the grid\n    // ShotMessages[0] = \"FogOfWar\";\n    // ShotMessages[1] = \"Miss\";\n    // ShotMessages[2] = \"Hit\";\n    // ShotMessages[3] = \"RevealMiss\";\n    // ShotMessages[4] = \"RevealHit\";\n    \n    //define special shots\n    //Carrier Special Shot\n    var goliathShot = new Shot(\"Photon Bomb Run\", 8);\n    goliathShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //Shot hits 3 consecutive places. Player chooses a starting grid point\n        //and a direction? How will this be handled from input via UI?\n        \n        //lets simply make it random on the direction... ~DS\n        \n        //determine randomly if the shot will go vertically or horizontally\n        var messages = [];\n        var random = getRandomInt(0,1);\n        var isVertical = true;\n        if (random === 0) { isVertical = false; }\n        if (isVertical)\n        {\n            //check if going down will go off the board\n            var endy = y + 2;\n            if (endy > 9)\n            {\n                messages[0] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n                messages[0] = fireGenericShot(x, y-1, targetShipGrid, shotGrid);\n                messages[0] = fireGenericShot(x, y-2, targetShipGrid, shotGrid);\n            }\n            //if its fine we'll shoot down\n            else\n            {\n                messages[0] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n                messages[0] = fireGenericShot(x, y+1, targetShipGrid, shotGrid);\n                messages[0] = fireGenericShot(x, y+2, targetShipGrid, shotGrid);\n            }\n        }\n        else\n        {\n            //check if going down will go off the board\n            var endx = x + 2;\n            if (endx > 9)\n            {\n                messages[0] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n                messages[0] = fireGenericShot(x-1, y, targetShipGrid, shotGrid);\n                messages[0] = fireGenericShot(x-2, y, targetShipGrid, shotGrid);\n            }\n            //if its fine we'll shoot right\n            else\n            {\n                messages[0] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n                messages[0] = fireGenericShot(x+1, y, targetShipGrid, shotGrid);\n                messages[0] = fireGenericShot(x+2, y, targetShipGrid, shotGrid);\n            }\n        }\n        return messages;\n    };\n    \n    //Battleship Special Shot\n    var ravagerShot = new Shot(\"Black Hole\", 12);\n    ravagerShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //Shot hits in a central location and then hits one grid point\n        //in each direction up, right, down, left from chosen location\n        //if the cell is already miss or hit\n        var messages = [];\n        var i = 0;\n        if (x-1 >= 0) { messages[i++] = fireGenericShot(x-1, y, targetShipGrid, shotGrid); }\n        messages[i++] = fireGenericShot(x, y, targetShipGrid, shotGrid);\n        if (x+1 <= 9) { messages[i++] = fireGenericShot(x+1, y, targetShipGrid, shotGrid); }\n        if (y-1 >= 0) { messages[i++] = fireGenericShot(x, y-1, targetShipGrid, shotGrid); }\n        if (y+1 <= 9) { messages[i++] = fireGenericShot(x, y+1, targetShipGrid, shotGrid); }\n        return messages;"],[0,"\n   "]],"start1":27500,"start2":27500,"length1":4066,"length2":4790},{"diffs":[[0,"h\", "],[-1,"5, new Array(\n                regularShot\n                , goliathShot\n            )\n        ),\n        //battleship\n        new Ship(\"Galaxy Ravager\", 4, new Array(\n                regularShot\n                , ravagerShot\n            )\n        ),\n        //cruiser\n        new Ship(\"Scrap Harvester\", 3, new Array(\n                regularShot\n                , harvesterShot\n            )\n        ),\n        //submarine\n        new Ship(\"Star Destroyer\", 3, new Array(\n                regularShot\n                , destroyerShot\n            )\n        ),\n        //destroyer\n        new Ship(\"Interceptor\", 2, new Array(\n                regularShot\n                ,"],[1,"\"SG\", 5, new Array(\n                goliathShot\n            )\n        ),\n        //battleship\n        new Ship(\"Galaxy Ravager\", \"GR\", 4, new Array(\n                ravagerShot\n            )\n        ),\n        //cruiser\n        new Ship(\"Scrap Harvester\", \"SH\", 3, new Array(\n                harvesterShot\n            )\n        ),\n        //submarine\n        new Ship(\"Star Destroyer\", \"SD\",3, new Array(\n                destroyerShot\n            )\n        ),\n        //destroyer\n        new Ship(\"Interceptor\", \"I\", 2, new Array(\n               "],[0," int"]],"start1":33568,"start2":33568,"length1":676,"length2":554}]],"length":34631,"saved":false}
{"ts":1354434121107,"patch":[[{"diffs":[[0,"k];\n"],[-1,"                    if (shot.isAvailable());\n                    {\n    "],[0,"    "]],"start1":14972,"start2":14972,"length1":79,"length2":8},{"diffs":[[0,"= shot;\n"],[-1,"                    }\n"],[0,"        "]],"start1":15016,"start2":15016,"length1":38,"length2":16},{"diffs":[[0,"k];\n"],[-1,"                    if (shot.isAvailable())\n                    {\n    "],[0,"    "]],"start1":15385,"start2":15385,"length1":78,"length2":8},{"diffs":[[0,"ot;\n"],[-1,"                    }\n"],[0,"    "]],"start1":15433,"start2":15433,"length1":30,"length2":8}]],"length":34446,"saved":false}
