{"ts":1354371050520,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1354371086249,"patch":[[{"diffs":[[1,"/**\n * \n * Home of the IT484 Battleship AI Code Base\n * \n */\n\n\n// This is the home of the AI code //"]],"start1":0,"start2":0,"length1":0,"length2":100}]],"length":100,"saved":false}
{"ts":1354371089119,"patch":[[{"diffs":[[0," * \n */\n"],[-1,"\n\n"],[0,"// This "]],"start1":53,"start2":53,"length1":18,"length2":16}]],"length":98,"saved":false}
{"ts":1354371092707,"patch":[[{"diffs":[[0," code //"],[1,"\n\n"]],"start1":90,"start2":90,"length1":8,"length2":10}]],"length":100,"saved":false}
{"ts":1354371122340,"patch":[[{"diffs":[[0,"ode //\n\n"],[1,"function AI()\n{\n    \n}\n\nvar ai = new AI();"]],"start1":92,"start2":92,"length1":8,"length2":50}]],"length":142,"saved":false}
{"ts":1354371130951,"patch":[[{"diffs":[[0,"    \n}\n\n"],[1,"//create a new ai in the global namespace\n"],[0,"var ai ="]],"start1":116,"start2":116,"length1":16,"length2":58}]],"length":184,"saved":false}
{"ts":1354371159997,"patch":[[{"diffs":[[0,"ew AI();"],[1,"\nENGINE.ai = ai;"]],"start1":176,"start2":176,"length1":8,"length2":24}]],"length":200,"saved":false}
{"ts":1354371168701,"patch":[[{"diffs":[[0,"w AI();\n"],[1,"//add the ai to the engine\n"],[0,"ENGINE.a"]],"start1":177,"start2":177,"length1":16,"length2":43}]],"length":227,"saved":false}
{"ts":1354371179906,"patch":[[{"diffs":[[0,"I();"],[-1,"\n//add the ai to the engine\nENGINE.ai = ai;"]],"start1":180,"start2":180,"length1":47,"length2":4}]],"length":184,"saved":false}
{"ts":1354371515941,"patch":[[{"diffs":[[0,"\n}\n\n"],[-1,"//create a new ai in the global namespace\nvar ai = new"],[1,"export"],[0," AI"],[-1,"()"],[0,";"]],"start1":120,"start2":120,"length1":64,"length2":14}]],"length":134,"saved":false}
{"ts":1354371569560,"patch":[[{"diffs":[[0,"{\n    \n}"],[1,";"],[0,"\n\nexport"]],"start1":114,"start2":114,"length1":16,"length2":17}]],"length":135,"saved":false}
{"ts":1354371604579,"patch":[[{"diffs":[[0,"xport AI"],[-1,";"]],"start1":126,"start2":126,"length1":9,"length2":8}]],"length":134,"saved":false}
{"ts":1354371632874,"patch":[[{"diffs":[[0," AI("],[-1,")\n{"],[1,"engine)\n{\n    this.engine = engine;"],[0,"\n   "]],"start1":108,"start2":108,"length1":11,"length2":43}]],"length":166,"saved":false}
{"ts":1354371641574,"patch":[[{"diffs":[[0,"gine)\n{\n"],[1,"    //load the engine\n"],[0,"    this"]],"start1":114,"start2":114,"length1":16,"length2":38}]],"length":188,"saved":false}
{"ts":1354371705740,"patch":[[{"diffs":[[0,"xport AI"],[1,";"]],"start1":180,"start2":180,"length1":8,"length2":9}]],"length":189,"saved":false}
{"ts":1354371712097,"patch":[[{"diffs":[[0,"\nexport "],[-1,"AI"],[1,"*"],[0,";"]],"start1":178,"start2":178,"length1":11,"length2":10}]],"length":188,"saved":false}
{"ts":1354371714645,"patch":[[{"diffs":[[0,"\nexport "],[-1,"*"],[0,";"]],"start1":178,"start2":178,"length1":10,"length2":9}]],"length":187,"saved":false}
{"ts":1354371756601,"patch":[[{"diffs":[[0," \n};"],[-1,"\n\nexport ;"]],"start1":173,"start2":173,"length1":14,"length2":4}]],"length":177,"saved":false}
{"ts":1354371875673,"patch":[[{"diffs":[[0,"e;\n    \n"],[1,"    // imported AI code //\n    \n    function firingLogic()\n    {\n    \n    //We generate a random number between 0-4 in order to generate a starting point for AI shot selection.\n    //This should limit the ability of the opponent to plan ship position to avoid shots.\n    //This will begin firing in the upper right corner of the board.\n    var randomInt = Math.floor(Math.random()*5);\n    //var startXCoord = (9 - randomInt);\n    //var startYCoord = 0;\n    \n    //var xCoord = startXCoord;\n    //var yCoord = startYCoord;\n    \n    \n    //This function fires in a diagonal x+1, y+1 pattern with the starting point specified in the parameters   \n    this.checkDiagonal = function(xCoord, yCoord)\n    {\n        while (xCoord<=9 && yCoord>=0)\n        {\n            mode1Ships.regularShot.fire(xCoord, yCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n            xCoord++;\n            yCoord++;\n        }\n    };\n    \n    //NOTE: There must be a better way to go about performing this. I can't find the pattern right now, however.\n    //These calls will perform diagonal searching with the parameters given indicating the starting point. \n    //These shots should check most cells on the board\n    \n    \n    \n    //This searches for enemy ships by firing in a pattern as long as no ships are found\n    this.huntingShot = function()\n    {\n    //We use x and y as starting coordinates and begin firing in a diagonal line (x+1, y+1) on cells which !=0 until an edge is reached.\n    //When an edge is reached we begin a new diagonal by moving five cells to the left on the x-axis and diagonally firing again.\n    //When an edge is reached we begin a new diagonal by moving left to x=0 and diagonally firing again from x=0, y=randomInt.\n    //If (randomInt+5) < 9 we perform one more diagonal run\n    \n    this.checkDiagonal(0,(9-randomInt));\n    \n    this.checkDiagonal(0,(4-randomInt));\n    \n    this.checkDiagonal((1+randomInt),0 );\n    \n    this.checkDiagonal((6+randomInt),0 );\n    \n    this.checkDiagonal(0,(7-randomInt));\n    \n    this.checkDiagonal(0,(2-randomInt));\n    \n    this.checkDiagonal((3+randomInt),0 );\n    \n    this.checkDiagonal((8+randomInt),0 );\n    \n    this.checkDiagonal(0,(8-randomInt));\n    \n    this.checkDiagonal(0,(3-randomInt));\n    \n    this.checkDiagonal((2+randomInt),0 );\n    \n    this.checkDiagonal((7+randomInt),0 );\n    \n    this.checkDiagonal(0,(6-randomInt));\n    \n    this.checkDiagonal(0,(1-randomInt));\n    \n    this.checkDiagonal((randomInt),0 );\n    \n    this.checkDiagonal((5+randomInt),0 );\n    \n    };\n    \n    //method for sinking an enemy ship once located with hunting shot\n    this.killingShot = function(xCoord, yCoord)\n    {\n    //Create functions to locate orientation of found ship\n    \n    //TODO implement firing shots for each directional check.\n        this.fireNorth = function()\n        {\n            yCoord--;\n            mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n    \n        };\n        this.fireEast = function()\n        {\n            xCoord++;\n            mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n        };\n        this.fireSouth = function()\n        {\n            yCoord++;\n            mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n        };\n        this.fireWest = function()\n        {\n            xCoord--;\n            mode1Ships.regularShot.fire(xCoord, xCoord, engine.player1ShipGrid, engine.player2ShotGrid);\n        };\n    \n    \n        \n         //   once ship is hit we search for orientation. We limit shots to cells within the grid which are affected by fog of war.\n         \n          //While a ship is hit but not sunk we check one cell north of it\n            if ((yCoord-1) > 0 && engine.player2ShotGrid[xCoord][yCoord-1] === 0)\n               {\n               this.fireNorth();\n               }\n         \n            else if ((xCoord+1) < 10 && engine.player2ShotGrid[xCoord+1][yCoord] === 0)\n               {\n               this.fireEast();\n               }\n         \n            else if (xCoord-1 > 0 && engine.player2ShotGrid[xCoord-1][yCoord] === 0)\n               {\n               this.fireSouth();\n               }\n         \n            else if (yCoord+1 < 10 && engine.player2ShotGrid[xCoord][yCoord+1] === 0)\n               {\n               this.fireWest();\n               }\n         \n    // TODO: Continue implementation of killingShot with strategy following results from orientation shots.\n    }\n    \n    //As long as no ships have been hit we continue with hunting shots. When a ship has been hit we switch to kiling shot.\n    \n    this.huntingShot();\n    if (this.huntingShot() !== ShotMessages[2])\n    {\n        this.huntingShot();\n    }\n    else\n    {\n        this.killingShot();\n    }\n    \n    }\n    \n"],[0,"};"]],"start1":167,"start2":167,"length1":10,"length2":4859}]],"length":5026,"saved":false}
{"ts":1354372003253,"patch":[[{"diffs":[[0,"d>=0)\n        {\n"],[1,"            //you can use this for now but we'll need a way to make it work with the engine later\n            var mode1Ships = new mode1Ships();\n"],[0,"            mode"]],"start1":908,"start2":908,"length1":32,"length2":177}]],"length":5171,"saved":false}
{"ts":1354372019229,"patch":[[{"diffs":[[0,"ion()\n    {\n"],[1,"    "],[0,"    //We use"]],"start1":1648,"start2":1648,"length1":24,"length2":28},{"diffs":[[0,"eached.\n"],[1,"    "],[0,"    //Wh"]],"start1":1793,"start2":1793,"length1":16,"length2":20},{"diffs":[[0," again.\n    "],[1,"  "],[1,"  "],[0,"//When an ed"]],"start1":1927,"start2":1927,"length1":24,"length2":28},{"diffs":[[0,"domInt.\n"],[1,"    "],[0,"    //If"]],"start1":2058,"start2":2058,"length1":16,"length2":20},{"diffs":[[0,"nal run\n    "],[1,"   "],[-1,"\n"],[1," \n    "],[0,"    this.che"]],"start1":2122,"start2":2122,"length1":25,"length2":33},{"diffs":[[0,"andomInt));\n    "],[-1,"\n"],[1,"    \n "],[0,"    "],[1,"   "],[0,"this.checkDiagon"]],"start1":2172,"start2":2172,"length1":37,"length2":45},{"diffs":[[0,"andomInt));\n    "],[-1,"\n"],[1,"    \n  "],[0,"    "],[1,"  "],[0,"this.checkDiagon"]],"start1":2226,"start2":2226,"length1":37,"length2":45},{"diffs":[[0,"omInt),0 );\n    "],[-1,"\n"],[1,"    \n    "],[0,"    this.checkDi"]],"start1":2281,"start2":2281,"length1":33,"length2":41},{"diffs":[[0,"omInt),0 );\n    "],[-1,"\n"],[1,"    \n    "],[0,"    this.checkDi"]],"start1":2336,"start2":2336,"length1":33,"length2":41},{"diffs":[[0,"andomInt));\n    "],[1," "],[-1,"\n"],[1,"   \n    "],[0,"    this.checkDi"]],"start1":2390,"start2":2390,"length1":33,"length2":41},{"diffs":[[0,"andomInt));\n    "],[1,"  "],[-1,"\n"],[1,"  \n    "],[0,"    this.checkDi"]],"start1":2444,"start2":2444,"length1":33,"length2":41},{"diffs":[[0,"omInt),0 );\n    "],[1,"   "],[-1,"\n"],[1," \n    "],[0,"    this.checkDi"]],"start1":2499,"start2":2499,"length1":33,"length2":41},{"diffs":[[0,"omInt),0 );\n    "],[-1,"\n"],[1,"    \n "],[0,"    "],[1,"   "],[0,"this.checkDiagon"]],"start1":2554,"start2":2554,"length1":37,"length2":45},{"diffs":[[0,"andomInt));\n    "],[-1,"\n"],[1,"    \n  "],[0,"    "],[1,"  "],[0,"this.checkDiagon"]],"start1":2608,"start2":2608,"length1":37,"length2":45},{"diffs":[[0,"andomInt));\n    "],[-1,"\n"],[1,"    \n   "],[0,"    "],[1," "],[0,"this.checkDiagon"]],"start1":2662,"start2":2662,"length1":37,"length2":45},{"diffs":[[0,"omInt),0 );\n    "],[-1,"\n"],[1,"    \n    "],[0,"    this.checkDi"]],"start1":2717,"start2":2717,"length1":33,"length2":41},{"diffs":[[0,"omInt),0 );\n    "],[-1,"\n"],[1,"    \n    "],[0,"    this.checkDi"]],"start1":2772,"start2":2772,"length1":33,"length2":41},{"diffs":[[0,"andomInt));\n    "],[1,"  "],[-1,"\n"],[1,"  \n    "],[0,"    this.checkDi"]],"start1":2826,"start2":2826,"length1":33,"length2":41},{"diffs":[[0,"mInt));\n    "],[1,"   "],[-1,"\n"],[1," \n    "],[0,"    this.che"]],"start1":2884,"start2":2884,"length1":25,"length2":33},{"diffs":[[0,"t),0 );\n    "],[1,"    "],[0,"\n"],[1,"    "],[0,"    this.che"]],"start1":2937,"start2":2937,"length1":25,"length2":33},{"diffs":[[0,"t),0 );\n"],[-1,"    \n"],[0,"    };\n "]],"start1":2992,"start2":2992,"length1":21,"length2":16}]],"length":5310,"saved":false}
{"ts":1354372045714,"patch":[[{"diffs":[[0," check.\n"],[1,"    //you can use this for now but we'll need a way to make it work with the engine later\n        var mode1Ships = new mode1Ships();\n"],[0,"        "]],"start1":3254,"start2":3254,"length1":16,"length2":149}]],"length":5443,"saved":false}
{"ts":1354372053394,"patch":[[{"diffs":[[0,"tingShot();\n"],[1,"    "],[0,"    if (this"]],"start1":5276,"start2":5276,"length1":24,"length2":28},{"diffs":[[0,"ges[2])\n    "],[-1,"{\n"],[1,"    {\n    "],[0,"        this"]],"start1":5332,"start2":5332,"length1":26,"length2":34},{"diffs":[[0,"tingShot();\n"],[1,"    "],[0,"    }\n"],[1,"    "],[0,"    else\n   "]],"start1":5370,"start2":5370,"length1":30,"length2":38},{"diffs":[[0,"   else\n    "],[1,"  "],[-1,"{\n"],[1,"  {\n    "],[0,"        this"]],"start1":5397,"start2":5397,"length1":26,"length2":34},{"diffs":[[0,"Shot();\n    "],[-1,"}\n"],[0,"    "],[1,"}"],[0,"\n    }\n    \n"]],"start1":5439,"start2":5439,"length1":30,"length2":29}]],"length":5470,"saved":false}
{"ts":1354372084415,"patch":[[{"diffs":[[0,".huntingShot();\n"],[1,"        // it will yell about this since it cannot see it, but this will be available when loaded on the page\n"],[0,"        if (this"]],"start1":5272,"start2":5272,"length1":32,"length2":142}]],"length":5580,"saved":false}
{"ts":1354372208302,"patch":[[{"diffs":[[0,"   \n    "],[-1,"function "],[1,"this."],[0,"firingLo"]],"start1":203,"start2":203,"length1":25,"length2":21},{"diffs":[[0,"ingLogic"],[1," = function"],[0,"()\n    {"]],"start1":219,"start2":219,"length1":16,"length2":27}]],"length":5587,"saved":false}
{"ts":1354372219899,"patch":[[{"diffs":[[0,"this.huntingShot"],[1," = function"],[0,"();\n        // i"]],"start1":5275,"start2":5275,"length1":32,"length2":43}]],"length":5598,"saved":false}
{"ts":1354372228131,"patch":[[{"diffs":[[0,"function();\n"],[1,"    {\n"],[0,"        // i"]],"start1":5294,"start2":5294,"length1":24,"length2":30}]],"length":5604,"saved":false}
{"ts":1354372232991,"patch":[[{"diffs":[[0,"nction()"],[-1,";"],[0,"\n    {\n "]],"start1":5296,"start2":5296,"length1":17,"length2":16}]],"length":5603,"saved":false}
{"ts":1354372273479,"patch":[[{"diffs":[[0,"Coord;\n    \n"],[1,"    }\n"],[0,"    \n    //T"]],"start1":697,"start2":697,"length1":24,"length2":30}]],"length":5609,"saved":false}
{"ts":1354372276508,"patch":[[{"diffs":[[0,"YCoord;\n"],[-1,"    \n"],[0,"    }\n  "]],"start1":696,"start2":696,"length1":21,"length2":16}]],"length":5604,"saved":false}
{"ts":1354372280274,"patch":[[{"diffs":[[0,"Coord;\n    }"],[1,";"],[0,"\n    \n    //"]],"start1":697,"start2":697,"length1":24,"length2":25}]],"length":5605,"saved":false}
{"ts":1354372300336,"patch":[[{"diffs":[[0,"code //\n"],[1,"    var randomInt = Math.floor(Math.random()*5);\n"],[0,"    \n   "]],"start1":194,"start2":194,"length1":16,"length2":65},{"diffs":[[0,"    "],[-1,"var randomInt = Math.floor(Math.random()*5);"],[0,"\n   "]],"start1":567,"start2":567,"length1":52,"length2":8}]],"length":5610,"saved":false}
