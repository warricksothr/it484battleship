{"ts":1351798682697,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1351798723814,"patch":[[{"diffs":[[1,"// IT484 Battleship implementation"]],"start1":0,"start2":0,"length1":0,"length2":34}]],"length":34,"saved":false}
{"ts":1351798759110,"patch":[[{"diffs":[[0,"entation"],[1,"\n\nfunction Ship()\n{\n    \n}"]],"start1":26,"start2":26,"length1":8,"length2":34}]],"length":60,"saved":false}
{"ts":1351798820449,"patch":[[{"diffs":[[0,"tation\n\n"],[1,"//the ship psudo class\n"],[0,"function"]],"start1":28,"start2":28,"length1":16,"length2":39},{"diffs":[[0,"{\n    \n}"],[1,"\n\n//the shot psudo class\nfunction Shot()\n{\n    \n}\n\n//the engine that will interface with the GUI and manage the logic of the game\nfunction Engine()\n{\n    \n}"]],"start1":75,"start2":75,"length1":8,"length2":164}]],"length":239,"saved":false}
{"ts":1351798855759,"patch":[[{"diffs":[[0,"ngine()\n{\n    \n}"],[1,"\n\n//initialization call to the engine to be executed after the script has loaded\nEngine();"]],"start1":223,"start2":223,"length1":16,"length2":106}]],"length":329,"saved":false}
{"ts":1351799028573,"patch":[[{"diffs":[[0,"ine()\n{\n    "],[1,"this.prototype.init = function()\n    {\n        \n    }"],[0,"\n}\n\n//initia"]],"start1":225,"start2":225,"length1":24,"length2":77}]],"length":382,"saved":false}
{"ts":1351799038467,"patch":[[{"diffs":[[0,"        "],[1,"//I am used to initialize the engine"],[0,"\n    }\n}"]],"start1":276,"start2":276,"length1":16,"length2":52}]],"length":418,"saved":false}
{"ts":1351799053914,"patch":[[{"diffs":[[0," loaded\n"],[1,"var engine = new "],[0,"Engine()"]],"start1":401,"start2":401,"length1":16,"length2":33},{"diffs":[[0,"ngine();"],[1,"\n"]],"start1":427,"start2":427,"length1":8,"length2":9}]],"length":436,"saved":false}
{"ts":1351799066495,"patch":[[{"diffs":[[0,"gine();\n"],[1,"engine.init();"]],"start1":428,"start2":428,"length1":8,"length2":22}]],"length":450,"saved":false}
{"ts":1351799098690,"patch":[[{"diffs":[[0,"\n\n//"],[-1,"initialization call to the engine to be executed after the script has loaded\nvar engine = new Engine();"],[1,"create the engine that will be used\nvar engine = new Engine();\n//make the call to initialize the engine"],[0,"\neng"]],"start1":328,"start2":328,"length1":111,"length2":111}]],"length":450,"saved":false}
{"ts":1351799183272,"patch":[[{"diffs":[[0," ship ps"],[1,"e"],[0,"udo clas"]],"start1":41,"start2":41,"length1":16,"length2":17},{"diffs":[[0,"ip pseudo class\n"],[-1,""],[0,"function Ship()\n"]],"start1":44,"start2":44,"length1":32,"length2":32},{"diffs":[[0," shot ps"],[1,"e"],[0,"udo clas"]],"start1":91,"start2":91,"length1":16,"length2":17},{"diffs":[[0,"ngine()\n"],[-1,""],[0,"{\n"],[1,"    //define init as a prototype of Engine so it isn't recreated each time an Engine object is created. This is good because the initialization code is entirely static.\n"],[0,"    this"]],"start1":225,"start2":225,"length1":18,"length2":187}]],"length":621,"saved":false}
{"ts":1351799204451,"patch":[[{"diffs":[[0,"Engine()"],[1,".init()"],[0,";\n//make"]],"start1":556,"start2":556,"length1":16,"length2":23}]],"length":628,"saved":false}
{"ts":1351799241524,"patch":[[{"diffs":[[0,")\n    {\n"],[1,"        var newEngine = new engine();\n"],[0,"        "]],"start1":439,"start2":439,"length1":16,"length2":54},{"diffs":[[0," be used"],[1," and initialize it."],[0,"\nvar eng"]],"start1":568,"start2":568,"length1":16,"length2":35},{"diffs":[[0,"ew E"],[-1,"ngine().init();\n//make the call to initialize the engine\ne"],[0,"ngine"],[1,"()"],[0,".ini"]],"start1":610,"start2":610,"length1":71,"length2":15}]],"length":629,"saved":false}
{"ts":1351799288657,"patch":[[{"diffs":[[0,"    "],[-1,"var newEngine = new engine();\n        //I am used to initialize"],[1,"//I am used to initialize the engine\n        var newEngine = new engine();\n        //Here I will check the local storage for previous game data and load it if found\n        \n        //finally I will return"],[0," the "],[1,"new "],[0,"engine\n"],[1,"        return newEngine;\n"],[0,"    "]],"start1":451,"start2":451,"length1":83,"length2":255}]],"length":801,"saved":false}
{"ts":1351799393600,"patch":[[{"diffs":[[0,")\n{\n    \n}\n\n"],[1,"function TurnData()\n{\n    \n}\n\n"],[0,"//the engine"]],"start1":124,"start2":124,"length1":24,"length2":54},{"diffs":[[0,"created."],[-1," "],[1,"\n    //"],[0,"This is "]],"start1":360,"start2":360,"length1":17,"length2":23},{"diffs":[[0,"static.\n"],[1,"    //The ideal way to initialize an engine is by calling new Engine().init() so as to initialize the engine with previous data. This acts a pseudo constructor for that purpose.\n"],[0,"    this"]],"start1":432,"start2":432,"length1":16,"length2":194},{"diffs":[[0,"f found\n"],[-1,""],[0,"        "],[1,"//TODO: Check local storage and initialize the engine appropriately"],[0,"\n       "]],"start1":826,"start2":826,"length1":24,"length2":91}]],"length":1082,"saved":false}
{"ts":1351799546492,"patch":[[{"diffs":[[0,"\n\n//the "],[-1,"ship "],[0,"pseudo c"]],"start1":34,"start2":34,"length1":21,"length2":16},{"diffs":[[0,"the pseudo class"],[1," that defines a ship on the grid."],[0,"\nfunction Ship()"]],"start1":38,"start2":38,"length1":32,"length2":65},{"diffs":[[0,"the "],[-1,"shot "],[0,"pseu"]],"start1":116,"start2":116,"length1":13,"length2":8},{"diffs":[[0,"lass"],[-1,"\nfunction Shot()\n{\n    \n}\n\nfunction TurnData()\n{\n    \n}\n\n//the engine that will interface with the GUI and manage the logic of the game\nfunction Engine()\n{"],[1," that defines a shot and how it will interact with the grids.\nfunction Shot()\n{\n    \n}\n\n//the pseudo class the represents the data to be returned when a turn is complete.\nfunction TurnData()\n{\n    \n}\n\n//the engine that will interface with the GUI and manage the logic of the game\nfunction Engine()\n{\n    //The grids to be used\n    //TODO: Add the grids\n    \n    //Watch value to represent who's turn it is\n    //TODO: implement a watch value\n    "],[0,"\n   "]],"start1":128,"start2":128,"length1":163,"length2":454}]],"length":1396,"saved":false}
{"ts":1351799603608,"patch":[[{"diffs":[[0,";\n    }\n"],[1,"    \n    this.fireShot = new Function(var x, var y, var shot)\n    {\n        \n    }\n"],[0,"}\n\n//cre"]],"start1":1295,"start2":1295,"length1":16,"length2":99}]],"length":1479,"saved":false}
{"ts":1351799619994,"patch":[[{"diffs":[[0,"ion("],[-1,"var x, var y, var"],[1,"x, y,"],[0," sho"]],"start1":1337,"start2":1337,"length1":25,"length2":13}]],"length":1467,"saved":false}
{"ts":1351799635561,"patch":[[{"diffs":[[0,"  \n    }"],[1,";"],[0,"\n}\n\n//cr"]],"start1":1365,"start2":1365,"length1":16,"length2":17}]],"length":1468,"saved":false}
{"ts":1351799684899,"patch":[[{"diffs":[[0,"   \n    "],[1,"this.fireShot = new Function(x, y, shot)\n    {\n        \n    };\n}\n\n"],[0,"//define"]],"start1":575,"start2":575,"length1":16,"length2":82},{"diffs":[[0,"se.\n    "],[-1,"this"],[1,"Engine"],[0,".prototy"]],"start1":994,"start2":994,"length1":20,"length2":22},{"diffs":[[0,"ne;\n"],[1,""],[0,"    }"],[-1,"\n    \n    this.fireShot = new Function(x, y, shot)\n    {\n        \n    };\n}"],[0,"\n\n//"]],"start1":1361,"start2":1361,"length1":87,"length2":13}]],"length":1462,"saved":false}
{"ts":1351799715752,"patch":[[{"diffs":[[0,"ion("],[-1,"x, y,"],[1,"var x, var y, var"],[0," sho"]],"start1":608,"start2":608,"length1":13,"length2":25},{"diffs":[[0,"reated.\n"],[-1,"    "],[0,"//This i"]],"start1":753,"start2":753,"length1":20,"length2":16},{"diffs":[[0,"static.\n"],[-1,"    "],[0,"//The id"]],"start1":820,"start2":820,"length1":20,"length2":16},{"diffs":[[0,"urpose.\n"],[-1,"    "],[0,"Engine.p"]],"start1":994,"start2":994,"length1":20,"length2":16},{"diffs":[[0,"ction()\n"],[-1,"    {\n    "],[1,"{\n"],[0,"    //I "]],"start1":1029,"start2":1029,"length1":26,"length2":18},{"diffs":[[0,"ine\n    "],[-1,"  "],[-1,"  "],[0,"var newE"]],"start1":1076,"start2":1076,"length1":20,"length2":16},{"diffs":[[0,"gine();\n"],[-1,"    "],[0,"    //He"]],"start1":1106,"start2":1106,"length1":20,"length2":16},{"diffs":[[0,"f found\n"],[-1,"    "],[0,"    //TO"]],"start1":1192,"start2":1192,"length1":20,"length2":16},{"diffs":[[0,"ely\n    "],[-1," "],[-1,"   "],[0,"//finall"]],"start1":1268,"start2":1268,"length1":20,"length2":16},{"diffs":[[0," engine\n"],[-1,"    "],[0,"    retu"]],"start1":1307,"start2":1307,"length1":20,"length2":16},{"diffs":[[0,"Engine;\n"],[-1,"    "],[0,"}\n\n//cre"]],"start1":1329,"start2":1329,"length1":20,"length2":16}]],"length":1430,"saved":false}
{"ts":1351799724066,"patch":[[{"diffs":[[0,"ion("],[-1,"var x, var y, var"],[1,"x, y,"],[0," sho"]],"start1":608,"start2":608,"length1":25,"length2":13}]],"length":1418,"saved":false}
{"ts":1351799772189,"patch":[[{"diffs":[[0,"reShot ="],[-1," new"],[0," Functio"]],"start1":590,"start2":590,"length1":20,"length2":16}]],"length":1414,"saved":false}
{"ts":1351799952588,"patch":[[{"diffs":[[0," value\n    \n"],[1,"    //this represents the logic behind firing a shot\n"],[0,"    this.fir"]],"start1":567,"start2":567,"length1":24,"length2":77},{"diffs":[[0,"t = "],[-1,"F"],[1,"f"],[0,"unct"]],"start1":648,"start2":648,"length1":9,"length2":9},{"diffs":[[0,"\n    };\n"],[1,"    \n    this.placeShip = function(startx,starty,endx,endy,ship)\n    {\n        \n    };\n"],[0,"}\n\n//def"]],"start1":687,"start2":687,"length1":16,"length2":103}]],"length":1554,"saved":false}
{"ts":1351800031998,"patch":[[{"diffs":[[0,"    };\n    \n"],[1,"    //this represents placing a ship on the player grid\n"],[0,"    this.pla"]],"start1":688,"start2":688,"length1":24,"length2":80},{"diffs":[[0,"\n    };\n"],[1,"    \n    //this represents the logic for returning the current player's shot history\n    this.getShotHistory = function()\n    {\n        \n    };\n    \n    this.getAvailableShots = function() {};\n"],[0,"}\n\n//def"]],"start1":830,"start2":830,"length1":16,"length2":209}]],"length":1803,"saved":false}
{"ts":1351800197958,"patch":[[{"diffs":[[0,"  //"],[-1,"this represents the logic behind firing a shot\n    this.fireShot = function(x, y, shot)\n    {\n        \n    };\n    \n    //this represents "],[1,"fire a shot at the opponent's ship grid\n    this.fireShot = function(x, y, shot) {};\n    \n    //"],[0,"plac"],[-1,"ing"],[1,"e"],[0," a s"]],"start1":581,"start2":581,"length1":152,"length2":109},{"diffs":[[0," on the "],[1,"current "],[0,"player"],[1,";s"],[0," grid\n  "]],"start1":693,"start2":693,"length1":22,"length2":32},{"diffs":[[0,"hip)"],[-1,"\n    {\n        \n    };\n    \n    //this represents the logic for returning"],[1," {};\n    \n    //return the shot history of"],[0," the"]],"start1":778,"start2":778,"length1":81,"length2":50},{"diffs":[[0,"ayer"],[-1,"'s shot h"],[1,"\n    this.getShotH"],[0,"istory"],[-1,"\n    this.getShotHistory"],[1," = function() {};\n    \n    //return the shot types that are available\n    this.getAvailableShots"],[0," = f"]],"start1":839,"start2":839,"length1":47,"length2":128},{"diffs":[[0,"on()"],[1," {};"],[0,"\n    "],[-1,"{"],[0,"\n    "],[-1,"    \n    };\n    \n    this.getAvailableShots = function() {};"],[1,"//What shots are on cooldown\n    this.getShotsOnCooldown = function() {};\n    \n    //Get Shot Grids\n    this.getShotGrids = function() {};\n    Get Ship Grid (For the active player)\n    Select Game Mode (int playerCount, bool modified)\n    Forfit (clear session)\n    Avaiable Ships"],[0,"\n}\n\n"]],"start1":972,"start2":972,"length1":79,"length2":302}]],"length":2043,"saved":false}
{"ts":1351800484508,"patch":[[{"diffs":[[0,"  //"],[-1,"What shots"],[1,"return the shot types that"],[0," are"]],"start1":988,"start2":988,"length1":18,"length2":34},{"diffs":[[0,"  //"],[-1,"Get S"],[1,"return the s"],[0,"hot "],[-1,"G"],[1,"g"],[0,"rids"]],"start1":1087,"start2":1087,"length1":18,"length2":25},{"diffs":[[0,"    "],[-1,"Get S"],[1,"\n    //return the s"],[0,"hip "],[-1,"G"],[1,"g"],[0,"rid "],[-1,"(F"],[1,"f"],[0,"or t"]],"start1":1152,"start2":1152,"length1":24,"length2":37},{"diffs":[[0,"ayer"],[-1,")"],[0,"\n    "],[-1,"Select Game Mode (int playerCount, bool modified)\n    Forfit (clear session)\n    "],[1,"this.getShipGrid = function() {};\n    \n    //clear the local storage and prepare the engine for a new game\n    this.forfit = function() {};\n    \n    //return a list of available ships\n    this.get"],[0,"Avai"],[1,"l"],[0,"able"],[-1," "],[0,"Ships"],[1," = function() {};"],[0,"\n}\n\n"]],"start1":1201,"start2":1201,"length1":109,"length2":240},{"diffs":[[0,"ngine;\n}"],[1,";\n\n//select the game mode and store in the local cache.\n//This should only be called from the front page when selecting the version of the game to run.\nEngine.prototype.selectGameMode = function(numberOfPlayers, modified)\n{\n    \n};"],[0,"\n\n//crea"]],"start1":2110,"start2":2110,"length1":16,"length2":247}]],"length":2441,"saved":false}
{"ts":1351800553694,"patch":[[{"diffs":[[0,"ne;\n};\n\n"],[1,"//prototype method used to load ships from a specified javascript file?\nEngine.prototype.loadShips = function(pathToShipsFile)\n{\n    \n};\n\n"],[0,"//select"]],"start1":2113,"start2":2113,"length1":16,"length2":154}]],"length":2579,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352051883681,"patch":[[{"diffs":[[0,"tation\n\n"],[1,"//Clone functionality for custom objects\nfunction clone(obj) {\n    if (null == obj || \"object\" != typeof obj) return obj;\n    var copy = obj.constructor();\n    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n    return copy;\n}\n\n///////////////////////////////\n// Custom Object Defenitions //\n///////////////////////////////\n\n"],[0,"//the ps"]],"start1":28,"start2":28,"length1":16,"length2":385},{"diffs":[[0,"on Ship("],[-1,")\n{\n    "],[1,"name, shot)\n{\n    var name = name;\n    var shot = shot;"],[0,"\n}\n\n//th"]],"start1":463,"start2":463,"length1":24,"length2":71},{"diffs":[[0,"nData()\n{\n    \n}"],[-1,""],[0,""],[1,"\n\n///////////////////////\n// BattleShip Engine //\n///////////////////////"],[0,"\n\n//the engine t"]],"start1":731,"start2":731,"length1":32,"length2":105}]],"length":3068,"saved":false}
{"ts":1352051909098,"patch":[[{"diffs":[[0,"me, shot"],[1,"s"],[0,")\n{\n    "]],"start1":473,"start2":473,"length1":16,"length2":17},{"diffs":[[0,"shot"],[1,"s"],[0," = shot"],[1,"s"],[0,";\n}\n"]],"start1":515,"start2":515,"length1":15,"length2":17}]],"length":3071,"saved":false}
{"ts":1352051930058,"patch":[[{"diffs":[[0,"ame;"],[-1,"\n    var shots = shots;"],[1," //the name of the ship type\n    var shots = shots; //an array of shot types available for this ship"],[0,"\n}\n\n"]],"start1":502,"start2":502,"length1":31,"length2":108}]],"length":3148,"saved":false}
{"ts":1352051967912,"patch":[[{"diffs":[[0,"is ship\n"],[1,"    var startx = 0;\n    var stary = 0;\n    var endx = 0;\n    var endy = 0;\n"],[0,"}\n\n//the"]],"start1":599,"start2":599,"length1":16,"length2":91}]],"length":3223,"saved":false}
{"ts":1352052030046,"patch":[[{"diffs":[[0,"    "],[-1,"var startx = 0;\n    var stary = 0;\n    var endx = 0;\n    var endy = 0;"],[1,"//The grid location of the ship (important for placing the ship on the grid)\n    var startx = 0;\n    var stary = 0;\n    var endx = 0;\n    var endy = 0;\n    \n    var setLocation = function(startx, starty, endx, endy)\n    {\n        this.startx = startx;\n    }"],[0,"\n}\n\n"]],"start1":607,"start2":607,"length1":78,"length2":265}]],"length":3410,"saved":false}
{"ts":1352052052719,"patch":[[{"diffs":[[0,"startx;\n"],[1,"        this.starty = starty;\n        \n        this.endx = endx;\n        this.endy =endy;\n"],[0,"    }\n}\n"]],"start1":855,"start2":855,"length1":16,"length2":106}]],"length":3500,"saved":false}
{"ts":1352052114141,"patch":[[{"diffs":[[0,"y = 0;\n    \n"],[1,"    //set the location of this ship\n"],[0,"    var setL"]],"start1":756,"start2":756,"length1":24,"length2":60},{"diffs":[[0,"ty, "],[-1,"endx, endy"],[1,"horizontal"],[0,")\n  "]],"start1":847,"start2":847,"length1":18,"length2":18},{"diffs":[[0,"ty;\n"],[-1,"        \n"],[0,"    "]],"start1":925,"start2":925,"length1":17,"length2":8},{"diffs":[[0,"his."],[-1,"endx = endx;\n        this.endy =endy"],[1,"horizontal = horizontal"],[0,";\n  "]],"start1":938,"start2":938,"length1":44,"length2":31}]],"length":3514,"saved":false}
{"ts":1352052123041,"patch":[[{"diffs":[[0,"var "],[-1,"endx = 0;\n    var endy = 0"],[1,"horizontal = false"],[0,";\n  "]],"start1":731,"start2":731,"length1":34,"length2":26}]],"length":3506,"saved":false}
{"ts":1352052145409,"patch":[[{"diffs":[[0,"ip(name,"],[1," length,"],[0," shots)\n"]],"start1":468,"start2":468,"length1":16,"length2":24},{"diffs":[[0,"r this ship\n"],[1,"    var length = length;\n"],[0,"    //The gr"]],"start1":603,"start2":603,"length1":24,"length2":49}]],"length":3539,"saved":false}
{"ts":1352052272786,"patch":[[{"diffs":[[0,"hip type"],[1,"."],[0,"\n    var"]],"start1":534,"start2":534,"length1":16,"length2":17},{"diffs":[[0,"le for this ship"],[1,"."],[0,"\n    var length "]],"start1":599,"start2":599,"length1":32,"length2":33},{"diffs":[[0,"gth;"],[-1,"\n   "],[0," //"],[-1,"The grid location of the ship (important for plac"],[1,"the pre-defined length of the ship. This is used when populat"],[0,"ing the "],[-1,"ship on the grid)\n    var startx = 0;\n    var stary = 0;\n    var horizontal = false;\n    \n    //set the location of this"],[1,"grid.\n    \n    //set the location of this ship. the startx and starty define where the ship starts, then based on length and the boolean horizontal it is possible to populate the grid with the"],[0," ship"],[1,"."],[0,"\n   "]],"start1":637,"start2":637,"length1":197,"length2":278},{"diffs":[[0,")\n    {\n"],[1,"        //The grid location of the ship (important for placing the ship on the grid)\n"],[0,"        "]],"start1":969,"start2":969,"length1":16,"length2":101}]],"length":3707,"saved":false}
{"ts":1352052323521,"patch":[[{"diffs":[[0,"    "],[-1,"var"],[1,"//"],[0," name"],[1,":"],[0," "],[-1,"= name; //"],[0,"the "]],"start1":494,"start2":494,"length1":27,"length2":17},{"diffs":[[0,"    "],[-1,"var"],[1,"//"],[0," shots"],[1,":"],[0," "],[-1,"= shots; //"],[0,"an a"]],"start1":534,"start2":534,"length1":29,"length2":18},{"diffs":[[0,"    "],[-1,"var length ="],[1,"//"],[0," length"],[-1,"; //"],[1,": "],[0,"the "]],"start1":596,"start2":596,"length1":31,"length2":19}]],"length":3674,"saved":false}
{"ts":1352052469415,"patch":[[{"diffs":[[0,"////////\n\n//the "],[-1,"pseudo "],[0,"class that defin"]],"start1":395,"start2":395,"length1":39,"length2":32},{"diffs":[[0,"\n    }\n}\n\n//the "],[-1,"pseudo "],[0,"class that defin"]],"start1":1119,"start2":1119,"length1":39,"length2":32},{"diffs":[[0,"\n\n//the "],[-1,"pseudo "],[0,"class th"]],"start1":1226,"start2":1226,"length1":23,"length2":16},{"diffs":[[0,"hod "],[-1,"used to load ships from a specified javascript file?"],[1,"that indicates ships available for mode 1"],[0,"\nEng"]],"start1":3210,"start2":3210,"length1":60,"length2":49},{"diffs":[[0,"ype.load"],[1,"Mode1"],[0,"Ships = "]],"start1":3269,"start2":3269,"length1":16,"length2":21},{"diffs":[[0,"ion("],[-1,"pathToShipsFil"],[1,")\n{\n    //TODO: define ships in mode1 (basic mod"],[0,"e)\n"],[-1,"{\n"],[0,"    "],[1,"var ships = new Array();"],[0,"\n};\n"]],"start1":3295,"start2":3295,"length1":31,"length2":87}]],"length":3703,"saved":false}
{"ts":1352052474360,"patch":[[{"diffs":[[0,"rray();\n"],[1,"    return ships;\n"],[0,"};\n\n//se"]],"start1":3371,"start2":3371,"length1":16,"length2":34}]],"length":3721,"saved":false}
{"ts":1352052502610,"patch":[[{"diffs":[[0,"ew Array();\n"],[1,"    ships[0];\n"],[0,"    return s"]],"start1":3367,"start2":3367,"length1":24,"length2":38}]],"length":3735,"saved":false}
{"ts":1352052587679,"patch":[[{"diffs":[[0,"ships[0]"],[-1,";"],[1," = new Ship(\"Battleship\", 4, new Array(\n        new Shot(),\n        new shot)\n    ;)"],[0,"\n    ret"]],"start1":3383,"start2":3383,"length1":17,"length2":100}]],"length":3818,"saved":false}
{"ts":1352052592650,"patch":[[{"diffs":[[0,"    new "],[-1,"s"],[1,"S"],[0,"hot"],[1,"()"],[0,")\n    ;)"]],"start1":3455,"start2":3455,"length1":20,"length2":22}]],"length":3820,"saved":false}
{"ts":1352052600268,"patch":[[{"diffs":[[0,"    "],[-1,";"],[0,")"],[1,";"],[0,"\n   "]],"start1":3471,"start2":3471,"length1":10,"length2":10}]],"length":3820,"saved":false}
{"ts":1352052619305,"patch":[[{"diffs":[[0,"ray("],[-1,");"],[0,"\n    "],[-1,"ships[0] ="],[1,"   "],[0," new"]],"start1":3372,"start2":3372,"length1":25,"length2":16},{"diffs":[[0," Array(\n        "],[1,"   "],[1," "],[0,"new Shot(),\n    "]],"start1":3414,"start2":3414,"length1":32,"length2":36},{"diffs":[[0,"Shot(),\n        "],[1,"    "],[0,"new Shot())\n    "]],"start1":3438,"start2":3438,"length1":32,"length2":36},{"diffs":[[0,"Shot())\n"],[1,"        );\n"],[0,"    );\n "]],"start1":3462,"start2":3462,"length1":16,"length2":27}]],"length":3830,"saved":false}
{"ts":1352052670719,"patch":[[{"diffs":[[0,"w Shot()"],[1,"\n            "],[0,")\n      "]],"start1":3460,"start2":3460,"length1":16,"length2":29},{"diffs":[[0,"       )"],[-1,";"],[1,","],[0,"\n    "],[1,")"],[0,");\n    r"]],"start1":3484,"start2":3484,"length1":22,"length2":23}]],"length":3844,"saved":false}
{"ts":1352052700390,"patch":[[{"diffs":[[0,"on Shot("],[-1,")"],[1,"name, cooldownLength);"],[0,"\n{\n    \n"]],"start1":1208,"start2":1208,"length1":17,"length2":38},{"diffs":[[0,"ay(\n"],[-1,"            new Shot(),\n"],[0,"    "]],"start1":3439,"start2":3439,"length1":32,"length2":8},{"diffs":[[0," ),\n    "],[-1,")"],[0,");\n    r"]],"start1":3487,"start2":3487,"length1":17,"length2":16}]],"length":3840,"saved":false}
{"ts":1352052719669,"patch":[[{"diffs":[[0,"gth);\n{\n    "],[1,"var shoot;"],[0,"\n}\n\n//the cl"]],"start1":1233,"start2":1233,"length1":24,"length2":34}]],"length":3850,"saved":false}
{"ts":1352052727238,"patch":[[{"diffs":[[0,"nLength)"],[-1,";"],[0,"\n{\n    v"]],"start1":1229,"start2":1229,"length1":17,"length2":16}]],"length":3849,"saved":false}
{"ts":1352052769319,"patch":[[{"diffs":[[0,"unction()\n{\n"],[1,"    var regularShot = new Shot(\"Regular Shot\", 1);\n"],[0,"    //TODO: "]],"start1":3321,"start2":3321,"length1":24,"length2":75},{"diffs":[[0,"ew Shot("],[1,"\"Regular Shot\""],[0,")\n      "]],"start1":3516,"start2":3516,"length1":16,"length2":30}]],"length":3914,"saved":false}
{"ts":1352052779389,"patch":[[{"diffs":[[0,"    "],[-1,"new Shot(\"R"],[1,"clone(r"],[0,"egular"],[-1," "],[0,"Shot"],[-1,"\""],[0,")"],[1,";"],[0,"\n   "]],"start1":3511,"start2":3511,"length1":32,"length2":27}]],"length":3909,"saved":false}
{"ts":1352052789669,"patch":[[{"diffs":[[0,"larShot)"],[-1,";"],[0,"\n       "]],"start1":3525,"start2":3525,"length1":17,"length2":16}]],"length":3908,"saved":false}
{"ts":1352052798549,"patch":[[{"diffs":[[0,"       )"],[-1,","],[0,"\n    );\n"]],"start1":3549,"start2":3549,"length1":17,"length2":16}]],"length":3907,"saved":false}
{"ts":1352052879701,"patch":[[{"diffs":[[0,"ip(\""],[-1,"Battleship\", 4"],[1,"Carrier\", 5, new Array(\n            clone(regularShot)\n            )\n        ),\n        new Ship(\"Battleship\", 4, new Array(\n            clone(regularShot)\n            )\n        ),\n        new Ship(\"Cruiser\", 3, new Array(\n            clone(regularShot)\n            )\n        ),\n        new Ship(\"Submarine\", 3, new Array(\n            clone(regularShot)\n            )\n        ),\n        new Ship(\"Destroyer\", 2"],[0,", ne"]],"start1":3472,"start2":3472,"length1":22,"length2":418}]],"length":4303,"saved":false}
{"ts":1352052936420,"patch":[[{"diffs":[[0,"unction()\n{\n"],[1,"    //define a regular shot\n"],[0,"    var regu"]],"start1":3321,"start2":3321,"length1":24,"length2":52},{"diffs":[[0,"    "],[-1,"//TODO: define ships in mode1 (basic mode)"],[1,"regularShot.shoot = function()\n    {\n        \n    }\n    "],[0,"\n   "]],"start1":3412,"start2":3412,"length1":50,"length2":64}]],"length":4345,"saved":false}
{"ts":1352052949931,"patch":[[{"diffs":[[0,"unction("],[1,"grid"],[0,")\n    {\n"]],"start1":3437,"start2":3437,"length1":16,"length2":20}]],"length":4349,"saved":false}
{"ts":1352052964771,"patch":[[{"diffs":[[0,"\n    }\n    \n"],[1,"    //define the ships in mode 1\n"],[0,"    var ship"]],"start1":3465,"start2":3465,"length1":24,"length2":57}]],"length":4382,"saved":false}
{"ts":1352053027728,"patch":[[{"diffs":[[0,"load"],[-1,"Mode1"],[0,"Ship"]],"start1":3303,"start2":3303,"length1":13,"length2":8},{"diffs":[[0,"hips = function("],[1,"ships"],[0,")\n{\n    //define"]],"start1":3308,"start2":3308,"length1":32,"length2":37},{"diffs":[[0,"n mode 1"],[1,". This array of ships will be coppied onto the grid of each players"],[0,"\n    var"]],"start1":3501,"start2":3501,"length1":16,"length2":83}]],"length":4449,"saved":false}
{"ts":1352053044798,"patch":[[{"diffs":[[0,"hat "],[-1,"indicates"],[1,"loads the"],[0," shi"]],"start1":3245,"start2":3245,"length1":17,"length2":17},{"diffs":[[0,"able"],[-1," for mode 1"],[0,"\nEng"]],"start1":3270,"start2":3270,"length1":19,"length2":8}]],"length":4438,"saved":false}
{"ts":1352053100690,"patch":[[{"diffs":[[0,"on(ships)\n{\n"],[1,"    \n};\n\n//select the game mode and store in the local cache.\n//This should only be called from the front page when selecting the version of the game to run.\nEngine.prototype.selectGameMode = function(numberOfPlayers, modified)\n{\n    \n};\n\nfunction mode1Ships()\n{\n"],[0,"    //define"]],"start1":3310,"start2":3310,"length1":24,"length2":287},{"diffs":[[0,"s;\n}"],[-1,";\n\n//select the game mode and store in the local cache.\n//This should only be called from the front page when selecting the version of the game to run.\nEngine.prototype.selectGameMode = function(numberOfPlayers, modified)\n{\n    \n};"],[0,"\n\n//"]],"start1":4374,"start2":4374,"length1":239,"length2":8}]],"length":4470,"saved":false}
{"ts":1352053129214,"patch":[[{"diffs":[[0,"ailable\n"],[1,"//ships is an array of ships available to be placed on the board at the start of the game\n"],[0,"Engine.p"]],"start1":3267,"start2":3267,"length1":16,"length2":106}]],"length":4560,"saved":false}
{"ts":1352053154319,"patch":[[{"diffs":[[0," Engine()\n{\n"],[1,"    //The available ships\n    \n"],[0,"    //The gr"]],"start1":1524,"start2":1524,"length1":24,"length2":55}]],"length":4591,"saved":false}
{"ts":1352053213250,"patch":[[{"diffs":[[0,"ilable ships"],[1," (this is an array of available ship objects)\n    //availableShips"],[0,"\n    \n    //"]],"start1":1549,"start2":1549,"length1":24,"length2":90}]],"length":4657,"saved":false}
{"ts":1352053235580,"patch":[[{"diffs":[[0,"hips)\n{\n    "],[1,"this.availableShips = ships;"],[0,"\n};\n\n//selec"]],"start1":3501,"start2":3501,"length1":24,"length2":52}]],"length":4685,"saved":false}
{"ts":1352053257720,"patch":[[{"diffs":[[0,"nction()"],[1,"\n    {\n        return this.availableShips;\n   "],[0," "],[-1,"{"],[0,"};\n}\n\n//"]],"start1":2626,"start2":2626,"length1":18,"length2":63}]],"length":4730,"saved":false}
{"ts":1352053284210,"patch":[[{"diffs":[[0,"   \n};\n\n"],[1,"//This defines all the ships available in mode 1 of the game\n"],[0,"function"]],"start1":3813,"start2":3813,"length1":16,"length2":77}]],"length":4791,"saved":false}
{"ts":1352053349920,"patch":[[{"diffs":[[0,".init();"],[1,"\n\n//testing code\nengine.loadShips(mode1Ships());"]],"start1":4783,"start2":4783,"length1":8,"length2":56}]],"length":4839,"saved":false}
{"ts":1352053367631,"patch":[[{"diffs":[[0,"\n\n//"],[-1,"testing code"],[1,"////////////////\n// testing code //\n//////////////////\n"],[0,"\neng"]],"start1":4791,"start2":4791,"length1":20,"length2":63}]],"length":4882,"saved":false}
{"ts":1352053377759,"patch":[[{"diffs":[[0,"//////\n\n"],[1,"//load the mode 1 ships\n"],[0,"engine.l"]],"start1":4843,"start2":4843,"length1":16,"length2":40}]],"length":4906,"saved":false}
{"ts":1352053390257,"patch":[[{"diffs":[[0,"hips());"],[1,"\n\n//get the available ships\n"]],"start1":4898,"start2":4898,"length1":8,"length2":36}]],"length":4934,"saved":false}
{"ts":1352053415860,"patch":[[{"diffs":[[0,"get the available ships\n"],[1,"var availableShips = engine.getAvailableShips();"]],"start1":4910,"start2":4910,"length1":24,"length2":72}]],"length":4982,"saved":false}
{"ts":1352053477798,"patch":[[{"diffs":[[0,"Ships();"],[1,"\n\n//iterate over the available ships and print their names to the console\nfor (var i; i < availableShips.length; i++)\n{\n    console.print(availableShips[i]);   \n}"]],"start1":4974,"start2":4974,"length1":8,"length2":170}]],"length":5144,"saved":false}
{"ts":1352053595710,"patch":[[{"diffs":[[0,"function"],[1," init"],[0,"()\n{\n   "]],"start1":3052,"start2":3052,"length1":16,"length2":21}]],"length":5149,"saved":false}
{"ts":1352053635290,"patch":[[{"diffs":[[0,"ngine = new "],[-1,"e"],[1,"E"],[0,"ngine();\n   "]],"start1":3123,"start2":3123,"length1":25,"length2":25}]],"length":5149,"saved":false}
{"ts":1352053650931,"patch":[[{"diffs":[[0,"function"],[-1," init"],[0,"()\n{\n   "]],"start1":3052,"start2":3052,"length1":21,"length2":16}]],"length":5144,"saved":false}
{"ts":1352053754731,"patch":[[{"diffs":[[0," newEngine ="],[-1," new"],[0," Engine();\n "]],"start1":3113,"start2":3113,"length1":28,"length2":24}]],"length":5140,"saved":false}
{"ts":1352053823350,"patch":[[{"diffs":[[0,"    "],[-1,"var shoot;"],[1,"//define what a shot does\n    //var shoot //this represents a shot"],[0,"\n}\n\n"]],"start1":1240,"start2":1240,"length1":18,"length2":74},{"diffs":[[0,"Engine ="],[1," new"],[0," Engine("]],"start1":3173,"start2":3173,"length1":16,"length2":20}]],"length":5200,"saved":false}
{"ts":1352053913362,"patch":[[{"diffs":[[0," grids\n    \n"],[1,"    //TODO: include a history of shots for each player\n    \n"],[0,"    //Watch "]],"start1":1735,"start2":1735,"length1":24,"length2":84},{"diffs":[[0,"  {\n        "],[1,"//TODO:implement a regular shot and how it interacts with the grid"],[0,"\n    }\n    \n"]],"start1":4142,"start2":4142,"length1":24,"length2":90}]],"length":5326,"saved":false}
{"ts":1352053948911,"patch":[[{"diffs":[[0,"Shot.shoot ="],[1," new"],[0," function(gr"]],"start1":4112,"start2":4112,"length1":24,"length2":28}]],"length":5330,"saved":false}
{"ts":1352053957224,"patch":[[{"diffs":[[0,"t = "],[-1,"new f"],[1,"F"],[0,"unct"]],"start1":4121,"start2":4121,"length1":13,"length2":9}]],"length":5326,"saved":false}
{"ts":1352053959623,"patch":[[{"diffs":[[0,"t = "],[-1,"F"],[1,"f"],[0,"unct"]],"start1":4121,"start2":4121,"length1":9,"length2":9}]],"length":5326,"saved":false}
{"ts":1352053983246,"patch":[[{"diffs":[[0,"oes\n    "],[-1,"//"],[0,"var shoo"]],"start1":1266,"start2":1266,"length1":18,"length2":16},{"diffs":[[0,"oot "],[-1,"//this represents a shot"],[1,"= function(grid) {};"],[0,"\n}\n\n"]],"start1":1280,"start2":1280,"length1":32,"length2":28}]],"length":5320,"saved":false}
{"ts":1352054015580,"patch":[[{"diffs":[[0,"ion(grid)\n    {\n"],[1,"        var i = 1;\n"],[0,"        //TODO:i"]],"start1":4124,"start2":4124,"length1":32,"length2":51}]],"length":5339,"saved":false}
{"ts":1352054018540,"patch":[[{"diffs":[[0," i = 1;\n"],[1,"        i++;\n"],[0,"        "]],"start1":4151,"start2":4151,"length1":16,"length2":29}]],"length":5352,"saved":false}
{"ts":1352054033870,"patch":[[{"diffs":[[0,"  {\n"],[-1,"        var i = 1;\n        i++;\n"],[0,"    "]],"start1":4136,"start2":4136,"length1":40,"length2":8}]],"length":5320,"saved":false}
{"ts":1352054250843,"patch":[[{"diffs":[[0,"ay(\n            "],[-1,"clone("],[0,"regularShot)\n   "]],"start1":4391,"start2":4391,"length1":38,"length2":32},{"diffs":[[0,"     regularShot"],[-1,")"],[0,"\n            )\n "]],"start1":4402,"start2":4402,"length1":33,"length2":32},{"diffs":[[0,"ay(\n            "],[-1,"clone("],[0,"regularShot)\n   "]],"start1":4485,"start2":4485,"length1":38,"length2":32},{"diffs":[[0,"     regularShot"],[-1,")"],[0,"\n            )\n "]],"start1":4496,"start2":4496,"length1":33,"length2":32},{"diffs":[[0,"ay(\n            "],[-1,"clone("],[0,"regularShot)\n   "]],"start1":4576,"start2":4576,"length1":38,"length2":32},{"diffs":[[0,"     regularShot"],[-1,")"],[0,"\n            )\n "]],"start1":4587,"start2":4587,"length1":33,"length2":32},{"diffs":[[0,"ay(\n            "],[-1,"clone("],[0,"regularShot)\n   "]],"start1":4669,"start2":4669,"length1":38,"length2":32},{"diffs":[[0,"     regularShot"],[-1,")"],[0,"\n            )\n "]],"start1":4680,"start2":4680,"length1":33,"length2":32},{"diffs":[[0,"        "],[-1,"clone("],[0,"regularS"]],"start1":4770,"start2":4770,"length1":22,"length2":16},{"diffs":[[0,"ularShot"],[-1,")"],[0,"\n       "]],"start1":4781,"start2":4781,"length1":17,"length2":16}]],"length":5285,"saved":false}
{"ts":1352054304431,"patch":[[{"diffs":[[0,"e.print("],[1,"i + \" > \" + "],[0,"availabl"]],"start1":5253,"start2":5253,"length1":16,"length2":28},{"diffs":[[0,"Ships[i]"],[1,".name"],[0,");   \n}"]],"start1":5282,"start2":5282,"length1":15,"length2":20}]],"length":5302,"saved":false}
{"ts":1352054337782,"patch":[[{"diffs":[[0,"console\n"],[1,"console.print(\"Going through the available ships\")\n"],[0,"for (var"]],"start1":5189,"start2":5189,"length1":16,"length2":67}]],"length":5353,"saved":false}
{"ts":1352054341534,"patch":[[{"diffs":[[0,"hips"],[1,"."],[0,"\")"],[1,";"],[0,"\nfor"]],"start1":5241,"start2":5241,"length1":10,"length2":12}]],"length":5355,"saved":false}
{"ts":1352054446423,"patch":[[{"diffs":[[0,"console."],[-1,"print"],[1,"log"],[0,"(\"Going "]],"start1":5197,"start2":5197,"length1":21,"length2":19},{"diffs":[[0,"console."],[-1,"print"],[1,"log"],[0,"(i + \" >"]],"start1":5298,"start2":5298,"length1":21,"length2":19}]],"length":5351,"saved":false}
{"ts":1352054476832,"patch":[[{"diffs":[[0," engine."],[-1,"getAvailable"],[1,"mode1"],[0,"Ships();"]],"start1":5095,"start2":5095,"length1":28,"length2":21}]],"length":5344,"saved":false}
{"ts":1352054487254,"patch":[[{"diffs":[[0,"Ships = "],[-1,"engine."],[0,"mode1Shi"]],"start1":5088,"start2":5088,"length1":23,"length2":16}]],"length":5337,"saved":false}
{"ts":1352054501885,"patch":[[{"diffs":[[0,"Ships = "],[-1,"mode1"],[1,"engine.getAvailable"],[0,"Ships();"]],"start1":5088,"start2":5088,"length1":21,"length2":35}]],"length":5351,"saved":false}
{"ts":1352054506379,"patch":[[{"diffs":[[0,"].name);"],[-1,"   "],[0,"\n}"]],"start1":5338,"start2":5338,"length1":13,"length2":10}]],"length":5348,"saved":false}
{"ts":1352054535182,"patch":[[{"diffs":[[0,"e ships."],[-1,"\""],[1," \" + availableShips"],[0,");\nfor ("]],"start1":5236,"start2":5236,"length1":17,"length2":35}]],"length":5366,"saved":false}
{"ts":1352054616074,"patch":[[{"diffs":[[0,"r (var i"],[1," = 0"],[0,"; i < av"]],"start1":5268,"start2":5268,"length1":16,"length2":20}]],"length":5370,"saved":false}
{"ts":1352054643676,"patch":[[{"diffs":[[0,")\n{\n    "],[1,"var name = name;"],[0,"// name:"]],"start1":483,"start2":483,"length1":16,"length2":32}]],"length":5386,"saved":false}
{"ts":1352054674294,"patch":[[{"diffs":[[0,"s[i]"],[-1,"."],[1,"[\""],[0,"name"],[1,"\"]"],[0,");\n}"]],"start1":5373,"start2":5373,"length1":13,"length2":16}]],"length":5389,"saved":false}
{"ts":1352054682724,"patch":[[{"diffs":[[0,"s[i]"],[-1,"[\"name\"]"],[0,");\n}"]],"start1":5373,"start2":5373,"length1":16,"length2":8}]],"length":5381,"saved":false}
{"ts":1352054695855,"patch":[[{"diffs":[[0,"    "],[-1,"var name = name;"],[0,"// n"]],"start1":487,"start2":487,"length1":24,"length2":8}]],"length":5365,"saved":false}
{"ts":1352054748547,"patch":[[{"diffs":[[0,"ps[i]);\n"],[1,"    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) console.log(attr);\n    }\n"],[0,"}"]],"start1":5356,"start2":5356,"length1":9,"length2":100}]],"length":5456,"saved":false}
{"ts":1352054766997,"patch":[[{"diffs":[[0,"attr in "],[-1,"obj) {\n        if (obj"],[1,"availableShips[i]) {\n        if (availableShips[i]"],[0,".hasOwnP"]],"start1":5377,"start2":5377,"length1":38,"length2":66}]],"length":5484,"saved":false}
{"ts":1352054815117,"patch":[[{"diffs":[[0,"    "],[-1," if (availableShips[i].hasOwnProperty(attr))"],[0," con"]],"start1":5409,"start2":5409,"length1":52,"length2":8}]],"length":5440,"saved":false}
{"ts":1352054834213,"patch":[[{"diffs":[[0,"ships. \""],[-1," + availableShips"],[0,");\nfor ("]],"start1":5238,"start2":5238,"length1":33,"length2":16}]],"length":5423,"saved":false}
{"ts":1352054951104,"patch":[[{"diffs":[[0,")\n{\n    "],[1,"this.name = name;"],[0,"// name:"]],"start1":483,"start2":483,"length1":16,"length2":33},{"diffs":[[0,"pe.\n    "],[1,"this.shots = shots;"],[0,"// shots"]],"start1":540,"start2":540,"length1":16,"length2":35},{"diffs":[[0,"ip.\n    "],[1,"this.length = length"],[0,"// lengt"]],"start1":621,"start2":621,"length1":16,"length2":36}]],"length":5479,"saved":false}
{"ts":1352054958444,"patch":[[{"diffs":[[0,"= length"],[1,";"],[0,"// lengt"]],"start1":641,"start2":641,"length1":16,"length2":17}]],"length":5480,"saved":false}
{"ts":1352054978424,"patch":[[{"diffs":[[0,"p(name, "],[-1,"l"],[1,"shipL"],[0,"ength, s"]],"start1":462,"start2":462,"length1":17,"length2":21},{"diffs":[[0,"his."],[-1,"l"],[1,"shipL"],[0,"ength = "],[-1,"l"],[1,"shipL"],[0,"engt"]],"start1":634,"start2":634,"length1":18,"length2":26},{"diffs":[[0,"ngth;// "],[-1,"l"],[1,"shipL"],[0,"ength: t"]],"start1":657,"start2":657,"length1":17,"length2":21}]],"length":5496,"saved":false}
{"ts":1352055002758,"patch":[[{"diffs":[[0,"Ships[i]"],[1,".name"],[0,");\n    f"]],"start1":5409,"start2":5409,"length1":16,"length2":21}]],"length":5501,"saved":false}
{"ts":1352055015205,"patch":[[{"diffs":[[0,"e);\n"],[-1,"    for (var attr in availableShips[i]) {\n        console.log(attr);\n    }\n"],[0,"}"]],"start1":5421,"start2":5421,"length1":80,"length2":5}]],"length":5426,"saved":false}
{"ts":1352055189837,"patch":[[{"diffs":[[0,")\n{\n    "],[1,"//TODO"],[0,"\n};\n\n//T"]],"start1":3991,"start2":3991,"length1":16,"length2":22}]],"length":5432,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352897570160,"patch":[[{"diffs":[[0,"ion\n"],[-1,"\n//Clone functionality for custom objects"],[1,"/** \n *      Example ship grid with numbering for reference (x1,y2 to x2,y2)\n *      Carrier     :   0,0 to 4,0\n *      Battleship  :   0,1 to 0,4\n *      Cruiser     :   5,4 to 5,6\n *      Submarine   :   2,7 to 4,7\n *      Destroyer   :   8,7 to 8,8\n * \n *      0   1   2   3   4   5   6   7   8   9\n *  0   C   C   C   C   C   x   x   x   x   x\n *  1   B   x   x   x   x   x   x   x   x   x\n *  2   B   x   x   x   x   x   x   x   x   x\n *  3   B   x   x   x   x   x   x   x   x   x\n *  4   B   x   x   x   x   C   x   x   x   x\n *  5   x   x   x   x   x   C   x   x   x   x\n *  6   x   x   x   x   x   C   x   x   x   x\n *  7   x   x   S   S   S   x   x   x   D   x\n *  8   x   x   x   x   x   x   x   x   D   x\n *  9   x   x   x   x   x   x   x   x   x   x\n * \n *      Example Empty Shot Grid\n *      (0) indicates fog of war (nethier a hit or miss)\n * \n *      0   1   2   3   4   5   6   7   8   9\n *  0   0   0   0   0   0   0   0   0   0   0\n *  1   0   0   0   0   0   0   0   0   0   0\n *  2   0   0   0   0   0   0   0   0   0   0\n *  3   0   0   0   0   0   0   0   0   0   0\n *  4   0   0   0   0   0   0   0   0   0   0\n *  5   0   0   0   0   0   0   0   0   0   0\n *  6   0   0   0   0   0   0   0   0   0   0\n *  7   0   0   0   0   0   0   0   0   0   0\n *  8   0   0   0   0   0   0   0   0   0   0\n *  9   0   0   0   0   0   0   0   0   0   0\n * \n *      Example Sunk Shot Grid\n *      (1) indicates a miss\n *      (2) indicates a hit\n * \n *      0   1   2   3   4   5   6   7   8   9\n *  0   2   2   2   2   2   1   1   1   1   1\n *  1   2   1   1   1   1   1   1   1   1   1\n *  2   2   1   1   1   1   1   1   1   1   1\n *  3   2   1   1   1   1   1   1   1   1   1\n *  4   2   1   1   1   1   2   1   1   1   1\n *  5   1   1   1   1   1   2   1   1   1   1\n *  6   1   1   1   1   1   2   1   1   1   1\n *  7   1   1   2   2   2   1   1   1   2   1\n *  8   1   1   1   1   1   1   1   1   2   1\n *  9   1   1   1   1   1   1   1   1   1   1\n */\n\n//Clone functionality for custom objects\n//doesn't clone methods unfortunately, no real way to fix that"],[0,"\nfun"]],"start1":31,"start2":31,"length1":49,"length2":2083},{"diffs":[[0,"obj)"],[-1," "],[1,"\n"],[0,"{\n    "],[-1,"if (null == obj || \"object\" != typeof obj) return obj;\n    var copy = obj.constructor();\n    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];"],[1,"return JSON.parse(JSON.stringify(obj));\n}\n\nfunction cloneFunction(func)\n{\n    //this is evil, but necessary to duplicate a function as far as I know\n    eval(\"var cloneFunc = \" +  func.toString()); // CREATE THE COPY*\n    return eval;\n}\n\n//this is a player agnostic function for placing a ship on a specific grid\nfunction placeShipOnGrid(x, y, ship, grid)\n{\n    //place the ship vertically\n    if (ship.isVertical)\n    {\n        //place the ship vertically\n        for (var posY = y; posY < y + ship.length; posY++)\n        {\n            grid[x][posY] = ship;\n        }\n    }\n    //place the ship horizontally\n    else\n    {\n        //place the ship horizontally\n        for (var posX = x; posX < x + ship.length; posX++)\n        {\n            grid[posX][y] = ship;\n        }\n    }\n}\n\nfunction createEmptyGridArray(size)\n{\n    var newGrid new Array();\n    for (var x = 0; x < size; x++)\n    {\n        newGrid[x] = new Array();\n        for (var y = 0; y < size; y++)\n        {\n            newGrid[x][y] = 0;\n        }"],[0,"\n   "]],"start1":2126,"start2":2126,"length1":193,"length2":1031},{"diffs":[[0,"urn "],[-1,"copy"],[1,"newGrid"],[0,";\n}\n"]],"start1":3167,"start2":3167,"length1":12,"length2":15},{"diffs":[[0,"//////////\n\n"],[1,"//Array of shot messages based on shot impact on the grid\nvar ShotMessages = Array();\nShotMessages[0] = \"FogOfWar\";\nShotMessages[1] = \"Miss\";\nShotMessages[2] = \"Hit\";\nShotMessages[3] = \"RevealMiss\";\nShotMessages[4] = \"RevealHit\";\n\n"],[0,"//the class "]],"start1":3268,"start2":3268,"length1":24,"length2":255},{"diffs":[[0," = name;"],[1," "],[0,"// name:"]],"start1":3610,"start2":3610,"length1":16,"length2":17},{"diffs":[[0,"= shots;"],[1," "],[0,"// shots"]],"start1":3670,"start2":3670,"length1":16,"length2":17},{"diffs":[[0,"pLength;"],[1," "],[0,"// shipL"]],"start1":3762,"start2":3762,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"\n    //set the location of this ship. the startx and starty define where the ship starts, then based on length and the boolean horizontal it is possible to populate the grid with the ship.\n    var setLocation = function(startx, starty,"],[1,"this.damage = 0; //a simple damage counter. When this counter equals the length it is destroyed\n    this.isVertical = false; //indicates if the ship is positioned vertically or"],[0," hor"]],"start1":3861,"start2":3861,"length1":243,"length2":184},{"diffs":[[0,"ntal"],[-1,")"],[1,"ly"],[0,"\n    "],[-1,"{\n        //The grid location of the ship (important for placing the ship on the grid)\n "],[1,"\n    //Indicates if the ship is destroyed \n"],[0,"    "],[-1,"   "],[0,"this."],[-1,"startx = startx;"],[1,"isDestroyed\n    {"],[0,"\n   "]],"start1":4048,"start2":4048,"length1":130,"length2":84},{"diffs":[[0,"    "],[1,"if ("],[0,"this."],[-1,"starty = starty;\n        this.horizontal = horizontal"],[1,"damage >= this.shipLength) { return true; }\n        return false"],[0,";\n  "]],"start1":4133,"start2":4133,"length1":66,"length2":81},{"diffs":[[0,"    var "],[-1,"shoot"],[1,"fire"],[0," = funct"]],"start1":4362,"start2":4362,"length1":21,"length2":20},{"diffs":[[0,"te.\n"],[-1,"function TurnData("],[1,"//Drew: not sure how to approach this yet, just a mockup consideration\nfunction TurnData()\n{\n    \n}\n\n//clone a ship and its function\nfunction cloneShip(originalShip)\n{\n    \n}\n\n//clone a shot and its functions\nfunction cloneShot(originalShot"],[0,")\n{\n"]],"start1":4471,"start2":4471,"length1":26,"length2":248},{"diffs":[[0,"\n    \n    //"],[1," "],[0,"The grids to"]],"start1":4990,"start2":4990,"length1":24,"length2":25},{"diffs":[[0,"used"],[1," //"],[0,"\n    //"],[-1,"TODO: Add the grids\n    \n    //TODO: include a history of shots for each player\n    \n    //Watch value to represent who's turn it is\n    //TODO: implement a watch value\n    \n    //fire a shot at the opponent's ship grid\n    this.fireShot = function(x, y, shot) {};\n    \n    //place a ship on the current player;s grid\n    this.placeShip = function(startx,starty,endx,endy,ship) {};\n    \n    //return the shot history of the current player\n    this.getShotHistory = function() {"],[1,"Player1 Grids\n    this.player1ShipGrid = new Array();\n    this.player1ShotGrid = new Array();\n    //Player2 Grids\n    this.player2ShipGrid = new Array();\n    this.player2ShotGrid = new Array();\n    \n    //a history of shots for each player\n    this.player1ShotHistory = new Array();\n    this.player2ShotHistory = new Array();\n    \n    //an array of ships for each player\n    this.player1Ships = new Array();\n    this.player2Ships = new Array();\n    \n    //Watch value to represent who's turn it is\n    this.isFirstPlayer = true;\n    \n    //turn counter\n    //initialized to 0 so that when we change players to setup ship it ends up at one for the first turn\n    this.turnCounter = 0;\n    \n    //fire a shot at the opponent's ship grid\n    this.fireShot = function(x, y, shot)\n    {\n        var message\n        //firing logic if this is the first player shooting\n        if (this.isFirstPlayer)\n        {\n            message = shot.fire(x, y, this.player2ShipGrid, this.player1ShotGrid);\n            this.player1ShotHistory.push(\"\" + message);\n        }\n        //firing logic if this is the second player shooting\n        else \n        {\n            message = shot.fire(x, y, this.player1ShipGrid, this.player2ShotGrid);\n        }\n        \n    };\n    \n    //place a ship on the current player;s grid\n    this.placeShip = function(startx,starty,isVertical,ship)\n    {\n        //The grid location of the ship (important for placing the ship on the grid)\n        ship.startx = startx;\n        ship.starty = starty;\n        ship.isVertical = isVertical;\n        \n        //create a clone so we don't get reference errors\n        var shipClone = clone(ship);\n        \n        //sort by player\n        if (this.isFirstPlayer)\n        {\n            //store the ship for the player at the end of the ship array\n            this.player1Ships.push(shipClone)\n            //now populate the array with the ship\n            placeShipOnGrid(startx, starty, shipClone, this.player1ShipGrid);\n        }\n        else\n        {\n            //store the ship for the player at the end of the ship array\n            this.player2Ships.push(shipClone)\n            //now populate the array with the ship\n            placeShipOnGrid(startx, starty, shipClone, this.player2ShipGrid);\n        }\n    };\n    \n    //return the shot history of the current player\n    this.getShotHistory = function()\n    {\n        if (this.isFirstPlayer) { return this.player1ShotHistory; }\n        return this.player2ShotHistory;\n    "],[0,"};\n "]],"start1":5019,"start2":5019,"length1":492,"length2":2506},{"diffs":[[0,") {};\n    \n    /"],[-1,"/r"],[1,"**\n     * R"],[0,"eturn"],[1,"s"],[0," the shot grids\n"]],"start1":7713,"start2":7713,"length1":39,"length2":49},{"diffs":[[0,"e shot grids"],[1," of the current player\n     */"],[0,"\n    this.ge"]],"start1":7749,"start2":7749,"length1":24,"length2":54},{"diffs":[[0,"ids = function()"],[1,"\n    {\n        if (this.isFirstPlayer) { return this.player1ShotGrid; }\n        return this.player2ShotGrid;\n   "],[0," "],[-1,"{"],[0,"};\n    \n    //re"]],"start1":7810,"start2":7810,"length1":34,"length2":145},{"diffs":[[0,";\n    \n    /"],[-1,"/r"],[1,"**\n     * R"],[0,"eturn"],[1,"s"],[0," the ship gr"]],"start1":7940,"start2":7940,"length1":31,"length2":41},{"diffs":[[0,"the "],[-1,"active player"],[1,"current player\n     */"],[0,"\n   "]],"start1":7988,"start2":7988,"length1":21,"length2":30},{"diffs":[[0,"rid = function()"],[1,"\n    {\n        if (this.isFirstPlayer) { return this.player1ShipGrid; }\n        return this.player2ShipGrid;\n   "],[0," "],[-1,"{"],[0,"};\n    \n    //cl"]],"start1":8032,"start2":8032,"length1":34,"length2":145},{"diffs":[[0,"ew game\n"],[1,"    //TODO: implement this\n"],[0,"    this"]],"start1":8229,"start2":8229,"length1":16,"length2":43},{"diffs":[[0,"\n    };\n"],[1,"    \n    //trigger a player switch\n    this.changePlayers = function()\n    {\n        //change to the second player\n        if (this.isFirstPlayer) { this.isFirstPlayer = false; }\n        //checnge to first player and increment the turn counter\n        else\n        { \n            this.isFirstPlayer = true;\n            this.turnCounter++;\n        }\n    }\n"],[0,"}\n\n//def"]],"start1":8422,"start2":8422,"length1":16,"length2":371},{"diffs":[[0,"w Engine();\n"],[1,"    \n    // This is test code. Remove me when this is properly implemented //\n    \n    //initialize the starting arrays with nothing of size 10x10\n    newEngine.player1ShipGrid = createEmptyGridArray(10);\n    newEngine.player1ShotGrid = createEmptyGridArray(10);\n    newEngine.player2ShipGrid = createEmptyGridArray(10);\n    newEngine.player2ShotGrid = createEmptyGridArray(10);\n    \n    //load the mode 1 ships\n    newEngine.loadShips(mode1Ships());\n    var ships = newEngine.getAvailableShips();\n    \n    //place ships for player 1\n    newEngine.placeShip(0, 0, false, ships[0]);\n    newEngine.placeShip(0, 1, true, ships[1]);\n    newEngine.placeShip(5, 4, true, ships[2]);\n    newEngine.placeShip(2, 7, false, ships[3]);\n    newEngine.placeShip(8, 7, true, ships[4]);\n    \n    //change to the second player\n    newEngine.changePlayers();\n    //place ships for player 2\n    newEngine.placeShip(1, 0, false, ships[0]);\n    newEngine.placeShip(0, 2, true, ships[1]);\n    newEngine.placeShip(6, 4, true, ships[2]);\n    newEngine.placeShip(2, 8, false, ships[3]);\n    newEngine.placeShip(9, 8, true, ships[4]);\n    \n    //change back to player 1\n    newEngine.changePlayers();\n    \n"],[0,"    //Here I"]],"start1":9229,"start2":9229,"length1":24,"length2":1204},{"diffs":[[0,"to run.\n"],[1,"//basically this is used to switch between single and multi player, and toggle game mode\n"],[0,"Engine.p"]],"start1":11013,"start2":11013,"length1":16,"length2":105},{"diffs":[[0,"layers, "],[-1,"m"],[1,"isM"],[0,"odified)"]],"start1":11162,"start2":11162,"length1":17,"length2":19},{"diffs":[[0,"  //TODO"],[1,":"],[0,"\n};\n\n//T"]],"start1":11186,"start2":11186,"length1":16,"length2":17},{"diffs":[[0,"larShot."],[-1,"shoot"],[1,"fire"],[0," = funct"]],"start1":11372,"start2":11372,"length1":21,"length2":20},{"diffs":[[0," = function("],[-1,"g"],[1,"x, y, targetShipGrid, shotG"],[0,"rid)\n    {\n "]],"start1":11384,"start2":11384,"length1":25,"length2":51},{"diffs":[[0,"\n\n//"],[-1,"create the engine that will be used and initialize it."],[1,"///////////////////////\n// Section for AI Code //\n/////////////////////////\n\n//TODO: Yeah, you know...\n\n///////////////////////////\n// Now Start The Engines //\n///////////////////////////\n\n//create the engine that will be used and initialize it.\n//init is called to initialize the engine if it already setup or create new data for the engine"],[0,"\nvar"]],"start1":12134,"start2":12134,"length1":62,"length2":349},{"diffs":[[0,"//\n\n"],[-1,"//load the mode 1 ships\nengine.loadShips(mode1Ships());\n\n"],[0,"//ge"]],"start1":12569,"start2":12569,"length1":65,"length2":8}]],"length":12877,"saved":false}
{"ts":1352897777861,"patch":[[{"diffs":[[0," return "],[-1,"eval"],[1,"cloneFunc"],[0,";\n}\n\n//t"]],"start1":2358,"start2":2358,"length1":20,"length2":25},{"diffs":[[0,"inalShip)\n{\n    "],[1,"var clonedShip = clone(originalShip);\n    clonedShip"],[0,"\n}\n\n//clone a sh"]],"start1":4636,"start2":4636,"length1":32,"length2":84}]],"length":12934,"saved":false}
{"ts":1352897802632,"patch":[[{"diffs":[[0,"ion(func)\n{\n"],[1,"    var cloneFunc;\n"],[0,"    //this i"]],"start1":2199,"start2":2199,"length1":24,"length2":43},{"diffs":[[0,"  eval(\""],[-1,"var "],[0,"cloneFun"]],"start1":2307,"start2":2307,"length1":20,"length2":16}]],"length":12949,"saved":false}
{"ts":1352897814117,"patch":[[{"diffs":[[0,"y(obj));\n}\n\n"],[1,"//clone a specific function\n"],[0,"function clo"]],"start1":2168,"start2":2168,"length1":24,"length2":52}]],"length":12977,"saved":false}
{"ts":1352897914736,"patch":[[{"diffs":[[0,"p);\n    "],[-1,"clonedShip"],[1,"//walk through the shots and clone each\n    var clonedShots = new Array();\n    for(var i = 0; i < originalShip.shots.length; i++)\n    {\n        \n    }"],[0,"\n}\n\n//cl"]],"start1":4729,"start2":4729,"length1":26,"length2":166}]],"length":13117,"saved":false}
{"ts":1352897956544,"patch":[[{"diffs":[[0,"        "],[-1,"\n    }"],[1,"clonedShots[i] = cloneFunction(originalShip.shots[i]);\n    }\n    clonedShip.shots = clonedShots;"],[0,"\n}\n\n//cl"]],"start1":4873,"start2":4873,"length1":22,"length2":112}]],"length":13207,"saved":false}
{"ts":1352898073231,"patch":[[{"diffs":[[0,"   }\n}\n\n"],[1,"//Create an empty grid array\n"],[0,"function"]],"start1":2962,"start2":2962,"length1":16,"length2":45},{"diffs":[[0,"dShots;\n"],[1,"    return clonedShip;\n"],[0,"}\n\n//clo"]],"start1":4999,"start2":4999,"length1":16,"length2":39},{"diffs":[[0,"inalShot)\n{\n"],[1,"    var clonedShot = clone(originalShot);\n    clonedShot.fire = cloneFunction(originalShot.fire);\n"],[0,"    \n}\n\n////"]],"start1":5089,"start2":5089,"length1":24,"length2":122}]],"length":13357,"saved":false}
{"ts":1352898079486,"patch":[[{"diffs":[[0,".fire);\n    "],[1,"return clonedShot;"],[0,"\n}\n\n////////"]],"start1":5191,"start2":5191,"length1":24,"length2":42}]],"length":13375,"saved":false}
{"ts":1352898142475,"patch":[[{"diffs":[[0,"t\", 1);\n"],[1,"    //because of the way cloning objects works in javascript, each shot object can only have the fire function, all logic for firing should be in this function.\n"],[0,"    regu"]],"start1":11854,"start2":11854,"length1":16,"length2":177}]],"length":13536,"saved":false}
{"ts":1352898179085,"patch":[[{"diffs":[[0,"unction("],[-1,"g"],[1,"x, y, targetShipGrid, shotG"],[0,"rid) {};"]],"start1":4455,"start2":4455,"length1":17,"length2":43}]],"length":13562,"saved":false}
{"ts":1352898204424,"patch":[[{"diffs":[[0,"hot does"],[1,". This is the only function allowed  in this class so that cloning it is possible"],[0,"\n    var"]],"start1":4430,"start2":4430,"length1":16,"length2":97}]],"length":13643,"saved":false}
{"ts":1352898249960,"patch":[[{"diffs":[[0,"fit = function()"],[1,"\n    {\n        this.isFirstPlayer = true;\n        this.turnCounter = 0;\n        \n   "],[0," "],[-1,"{"],[0,"};\n    \n    //re"]],"start1":8881,"start2":8881,"length1":34,"length2":117}]],"length":13726,"saved":false}
{"ts":1352898260603,"patch":[[{"diffs":[[0,"er = 0;\n        "],[1,"//TODO: clear data from the local storage"],[0,"\n    };\n    \n   "]],"start1":8961,"start2":8961,"length1":32,"length2":73}]],"length":13767,"saved":false}
{"ts":1352898424021,"patch":[[{"diffs":[[0,"    "],[-1,"return this.a"],[1,"var clonedAvailableShips = new Array();\n        //return clone of the array of ships\n        for (var i = 0; i < this.availableShips.length; i++)\n        {\n            clonedAvailableShips[i] = cloneShip(this.availableShips[i]);\n        }\n        return clonedA"],[0,"vail"]],"start1":9120,"start2":9120,"length1":21,"length2":269}]],"length":14015,"saved":false}
{"ts":1352898467071,"patch":[[{"diffs":[[0,"layer) { return "],[1,"clone("],[0,"this.player1Shot"]],"start1":8463,"start2":8463,"length1":32,"length2":38},{"diffs":[[0,"yer1ShotGrid"],[1,")"],[0,"; }\n        "]],"start1":8493,"start2":8493,"length1":24,"length2":25},{"diffs":[[0,"\n        return "],[1,"clone("],[0,"this.player2Shot"]],"start1":8509,"start2":8509,"length1":32,"length2":38},{"diffs":[[0,"yer2ShotGrid"],[1,")"],[0,";\n    };\n   "]],"start1":8539,"start2":8539,"length1":24,"length2":25},{"diffs":[[0,"layer) { return "],[1,"clone("],[0,"this.player1Ship"]],"start1":8699,"start2":8699,"length1":32,"length2":38},{"diffs":[[0,"ShipGrid"],[1,")"],[0,"; }\n    "]],"start1":8733,"start2":8733,"length1":16,"length2":17},{"diffs":[[0,"\n        return "],[1,"clone("],[0,"this.player2Ship"]],"start1":8745,"start2":8745,"length1":32,"length2":38},{"diffs":[[0,"ShipGrid"],[1,")"],[0,";\n    };"]],"start1":8779,"start2":8779,"length1":16,"length2":17}]],"length":14043,"saved":false}
{"ts":1352898501631,"patch":[[{"diffs":[[0,"wnLength)\n{\n"],[1,"    var cooldownLength = cooldownLength;\n"],[0,"    //define"]],"start1":4397,"start2":4397,"length1":24,"length2":65}]],"length":14084,"saved":false}
{"ts":1352898568301,"patch":[[{"diffs":[[0,".isDestroyed"],[-1,""],[0,""],[1," = function()"],[0,"\n    {\n     "]],"start1":4187,"start2":4187,"length1":24,"length2":37},{"diffs":[[0,"false;\n    }"],[-1,""],[0,""],[1,";"],[0,"\n}\n\n//the cl"]],"start1":4295,"start2":4295,"length1":24,"length2":25},{"diffs":[[0,"hot("],[-1,"name, c"],[1,"shotName, shotC"],[0,"ooldown"],[-1,"Length"],[0,")\n{\n"]],"start1":4395,"start2":4395,"length1":28,"length2":30},{"diffs":[[0,"h = "],[-1,"c"],[1,"shotC"],[0,"ooldown"],[-1,"Length;"],[1,";\n    var name = shotNamel"],[0,"\n   "]],"start1":4446,"start2":4446,"length1":23,"length2":46}]],"length":14123,"saved":false}
{"ts":1352898569531,"patch":[[{"diffs":[[0,"shotName"],[-1,"l"],[1,";"],[0,"\n    //d"]],"start1":4479,"start2":4479,"length1":17,"length2":17}]],"length":14123,"saved":false}
{"ts":1352898576250,"patch":[[{"diffs":[[0,"otName;\n"],[1,"    \n"],[0,"    //de"]],"start1":4481,"start2":4481,"length1":16,"length2":21}]],"length":14128,"saved":false}
{"ts":1352898654603,"patch":[[{"diffs":[[0,"Cooldown)\n{\n"],[1,"    var name = shotName;\n"],[0,"    var cool"]],"start1":4413,"start2":4413,"length1":24,"length2":49},{"diffs":[[0,"wn;\n    var "],[-1,"na"],[1,"cooldownTi"],[0,"me"],[1,"r"],[0," = "],[-1,"shotName"],[1,"0"],[0,";\n    \n    /"]],"start1":4485,"start2":4485,"length1":39,"length2":41}]],"length":14155,"saved":false}
{"ts":1352898753290,"patch":[[{"diffs":[[0,"id) {};\n"],[1,"    \n    var isAvailable = function()\n    {\n        if (this.cooldownTimer == 0) { return true; }\n        return false;\n    };\n"],[0,"}\n\n//the"]],"start1":4684,"start2":4684,"length1":16,"length2":143}]],"length":14282,"saved":false}
{"ts":1352898773900,"patch":[[{"diffs":[[0,"d) {};\n    \n"],[1,"    //determine if the shot is ready to be fired again\n"],[0,"    var isAv"]],"start1":4685,"start2":4685,"length1":24,"length2":79}]],"length":14337,"saved":false}
{"ts":1352898827589,"patch":[[{"diffs":[[0,"n false;\n    };\n"],[1,"    \n    var fired = function()\n    {\n        this.cooldownTimer = cooldownLength;\n    };\n"],[0,"}\n\n//the class t"]],"start1":4858,"start2":4858,"length1":32,"length2":122}]],"length":14427,"saved":false}
{"ts":1352898851069,"patch":[[{"diffs":[[0,"wnTimer "],[-1,"="],[1,"<"],[0,"= 0) { r"]],"start1":4814,"start2":4814,"length1":17,"length2":17},{"diffs":[[0,"    };\n    \n"],[1,"    //set the cooldown timer\n"],[0,"    var fire"]],"start1":4867,"start2":4867,"length1":24,"length2":53}]],"length":14456,"saved":false}
{"ts":1352898861530,"patch":[[{"diffs":[[0,"wnTimer "],[-1,"<"],[1,"="],[0,"= 0) { r"]],"start1":4814,"start2":4814,"length1":17,"length2":17}]],"length":14456,"saved":false}
{"ts":1352898935958,"patch":[[{"diffs":[[0,"nLength;\n    };\n"],[1,"    \n    //deincrement the cooldown timer\n    var decCooldown = function()\n    {\n        if (cooldownTimer > 0) { cooldownTimer--; }\n    };\n"],[0,"}\n\n//the class t"]],"start1":4977,"start2":4977,"length1":32,"length2":172}]],"length":14596,"saved":false}
{"ts":1352898945729,"patch":[[{"diffs":[[0,"e cooldown timer"],[1,", but only if it isn't ready"],[0,"\n    var decCool"]],"start1":5018,"start2":5018,"length1":32,"length2":60}]],"length":14624,"saved":false}
{"ts":1352898961208,"patch":[[{"diffs":[[0,"Timer =="],[1,"="],[0," 0) { re"]],"start1":4816,"start2":4816,"length1":16,"length2":17}]],"length":14625,"saved":false}
{"ts":1352899079269,"patch":[[{"diffs":[[0,"Shot.fire);\n"],[1,"    clonedShot.isAvailable = cloneFunction(originalShot.isAvailable);\n    clonedShot.fired = cloneFunction(originalShot.fired);\n    clonedShot.decCooldown = cloneFunction(originalShot.decCooldown);\n"],[0,"    return c"]],"start1":5876,"start2":5876,"length1":24,"length2":222}]],"length":14823,"saved":false}
{"ts":1352899105691,"patch":[[{"diffs":[[0,"tPlayer)"],[1,"\n        {\n          "],[0," "],[-1,"{"],[0," this.is"]],"start1":10353,"start2":10353,"length1":18,"length2":38},{"diffs":[[0,"= false;"],[1,"\n       "],[0," }\n     "]],"start1":10403,"start2":10403,"length1":16,"length2":24}]],"length":14851,"saved":false}
{"ts":1352899210058,"patch":[[{"diffs":[[0,"nedShot;\n}\n\n"],[1,"//walk through deincrement all the timers on the shots in all the ships\nfunction decShipShotTimers(ships)\n{\n    \n}\n\n"],[0,"////////////"]],"start1":6100,"start2":6100,"length1":24,"length2":140}]],"length":14967,"saved":false}
{"ts":1352899353402,"patch":[[{"diffs":[[0,"hips)\n{\n    "],[1,"for (var i = 0; i < ships.length; i++)\n    {\n        for (var j = 0; j < ships[i].shots.length; j++)\n        {\n            ships[i][j].decCooldown();\n        }\n    }"],[0,"\n"],[-1,""],[0,"}\n\n/////////"]],"start1":6212,"start2":6212,"length1":25,"length2":190},{"diffs":[[0,".push(shipClone)"],[1,";"],[0,"\n            //n"]],"start1":8531,"start2":8531,"length1":32,"length2":33},{"diffs":[[0,"ipClone)"],[1,";"],[0,"\n       "]],"start1":8821,"start2":8821,"length1":16,"length2":17},{"diffs":[[0,"ayer)\n        {\n"],[1,"            decShipShotTimers(this.player1Ships);\n"],[0,"            this"]],"start1":10639,"start2":10639,"length1":32,"length2":82},{"diffs":[[0,";\n        }\n"],[-1,""],[0,"    }"],[1,";"],[0,"\n}\n\n//define"]],"start1":10913,"start2":10913,"length1":29,"length2":30}]],"length":15185,"saved":false}
{"ts":1352899362890,"patch":[[{"diffs":[[0,"     { \n"],[1,"            decShipShotTimers(this.player2Ships);\n"],[0,"        "]],"start1":10836,"start2":10836,"length1":16,"length2":66}]],"length":15235,"saved":false}
{"ts":1352899387925,"patch":[[{"diffs":[[0,"his."],[-1,"isFirstPlayer = true;\n            this.turnCounter++"],[1,"turnCounter++;\n            this.isFirstPlayer = true"],[0,";\n  "]],"start1":10907,"start2":10907,"length1":60,"length2":60}]],"length":15235,"saved":false}
{"contributors":[],"silentsave":false,"ts":1352955890017,"patch":[[{"diffs":[[0,"ce (x1,y"],[-1,"2"],[1,"1"],[0," to x2,y"]],"start1":92,"start2":92,"length1":17,"length2":17}]],"length":15235,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353209345154,"patch":[[{"diffs":[[0,"  eval(\""],[1,"var "],[0,"cloneFun"]],"start1":2335,"start2":2335,"length1":16,"length2":20},{"diffs":[[0,"osY++)\n        {"],[1," "],[0,"\n            gri"]],"start1":2698,"start2":2698,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"//TODO:implement a regular shot and how it interacts with the grid\n    }"],[1,"    regularShot.fire = function(x, y, targetShipGrid, shotGrid)\n    {\n        //implement a regular shot and how it interacts with the grid\n\n\t\t\tif (shotGrid[x][y] ==1 || shotGrid[x][y] ==2)\n\t{\n\t\talert(\"Cell already targeted\");\n\t}\n\telse if (targetShipGrid[x][y] == \"0\")\n\t{\n\t\ttargetShipGrid[x][y] = 1;\n\t\tshotGrid[x][y] = 1;\n\t\treturn ShotMessages[1];\n\t}\n\telse if (targetShipGrid[x][y] !== \"0\")\n\t{\n\t\ttargetShipGrid[x][y] = 2;\n\t\tshotGrid[x][y] = 2;\n\t\tShip.damage++;\n\t\treturn ShotMessages[2];\n\t\t\n\t}\n\t\t\n    };\n    };"],[0,"\n   "]],"start1":13801,"start2":13801,"length1":80,"length2":517}]],"length":15677,"saved":false}
{"contributors":[],"silentsave":false,"ts":1353286565974,"patch":[[{"diffs":[[0,"ipGrid[x][y]"],[-1," ="],[1,".damage = targetShipGrid[x][y].damage +"],[0," 1;\n\t\tshotGr"]],"start1":14087,"start2":14087,"length1":26,"length2":63}]],"length":15714,"saved":false}
